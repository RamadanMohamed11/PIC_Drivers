

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Sep 28 09:22:43 2025

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39  0000                     
    40                           ; Generated 23/03/2023 GMT
    41                           ; 
    42                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4620 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataCOMRAM
    76  00ED3E                     __pidataCOMRAM:
    77                           	callstack 0
    78                           
    79                           ;initializer for _lat_regesters
    80  00ED3E  89                 	db	137
    81  00ED3F  0F                 	db	15
    82  00ED40  8A                 	db	138
    83  00ED41  0F                 	db	15
    84  00ED42  8B                 	db	139
    85  00ED43  0F                 	db	15
    86  00ED44  8C                 	db	140
    87  00ED45  0F                 	db	15
    88  00ED46  8D                 	db	141
    89  00ED47  0F                 	db	15
    90                           
    91                           ;initializer for _tris_regesters
    92  00ED48  92                 	db	146
    93  00ED49  0F                 	db	15
    94  00ED4A  93                 	db	147
    95  00ED4B  0F                 	db	15
    96  00ED4C  94                 	db	148
    97  00ED4D  0F                 	db	15
    98  00ED4E  95                 	db	149
    99  00ED4F  0F                 	db	15
   100  00ED50  96                 	db	150
   101  00ED51  0F                 	db	15
   102                           
   103                           ;initializer for _lcd_4bit
   104  00ED52  01                 	db	1
   105  00ED53  09                 	db	9
   106  00ED54  11                 	db	17
   107  00ED55  19                 	db	25
   108  00ED56  21                 	db	33
   109  00ED57  29                 	db	41
   110                           
   111                           	psect	idataBANK0
   112  00ED26                     __pidataBANK0:
   113                           	callstack 0
   114                           
   115                           ;initializer for _port_regesters
   116  00ED26  80                 	db	128
   117  00ED27  0F                 	db	15
   118  00ED28  81                 	db	129
   119  00ED29  0F                 	db	15
   120  00ED2A  82                 	db	130
   121  00ED2B  0F                 	db	15
   122  00ED2C  83                 	db	131
   123  00ED2D  0F                 	db	15
   124  00ED2E  84                 	db	132
   125  00ED2F  0F                 	db	15
   126                           
   127                           ;initializer for _rgb_led
   128  00ED30  02                 	db	2
   129  00ED31  0A                 	db	10
   130  00ED32  12                 	db	18
   131  00ED33  01                 	db	1
   132                           
   133                           ;initializer for _lcd_8bit
   134  00ED34  02                 	db	2
   135  00ED35  0A                 	db	10
   136  00ED36  03                 	db	3
   137  00ED37  0B                 	db	11
   138  00ED38  13                 	db	19
   139  00ED39  1B                 	db	27
   140  00ED3A  23                 	db	35
   141  00ED3B  2B                 	db	43
   142  00ED3C  33                 	db	51
   143  00ED3D  3B                 	db	59
   144                           
   145                           	psect	idataBANK1
   146  00ED7A                     __pidataBANK1:
   147                           	callstack 0
   148                           
   149                           ;initializer for _customChars
   150  00ED7A  0E                 	db	14
   151  00ED7B  0A                 	db	10
   152  00ED7C  1B                 	db	27
   153  00ED7D  11                 	db	17
   154  00ED7E  11                 	db	17
   155  00ED7F  11                 	db	17
   156  00ED80  1F                 	db	31
   157  00ED81  00                 	db	0
   158  00ED82  0E                 	db	14
   159  00ED83  0A                 	db	10
   160  00ED84  1B                 	db	27
   161  00ED85  11                 	db	17
   162  00ED86  11                 	db	17
   163  00ED87  1F                 	db	31
   164  00ED88  1F                 	db	31
   165  00ED89  00                 	db	0
   166  00ED8A  0E                 	db	14
   167  00ED8B  0A                 	db	10
   168  00ED8C  1B                 	db	27
   169  00ED8D  11                 	db	17
   170  00ED8E  1F                 	db	31
   171  00ED8F  1F                 	db	31
   172  00ED90  1F                 	db	31
   173  00ED91  00                 	db	0
   174  00ED92  0E                 	db	14
   175  00ED93  0A                 	db	10
   176  00ED94  1B                 	db	27
   177  00ED95  1F                 	db	31
   178  00ED96  1F                 	db	31
   179  00ED97  1F                 	db	31
   180  00ED98  1F                 	db	31
   181  00ED99  00                 	db	0
   182  00ED9A  0E                 	db	14
   183  00ED9B  0A                 	db	10
   184  00ED9C  1B                 	db	27
   185  00ED9D  1F                 	db	31
   186  00ED9E  1F                 	db	31
   187  00ED9F  1F                 	db	31
   188  00EDA0  1F                 	db	31
   189  00EDA1  00                 	db	0
   190  00EDA2  0E                 	db	14
   191  00EDA3  0A                 	db	10
   192  00EDA4  1F                 	db	31
   193  00EDA5  1F                 	db	31
   194  00EDA6  1F                 	db	31
   195  00EDA7  1F                 	db	31
   196  00EDA8  1F                 	db	31
   197  00EDA9  00                 	db	0
   198  00EDAA  0E                 	db	14
   199  00EDAB  0E                 	db	14
   200  00EDAC  1F                 	db	31
   201  00EDAD  1F                 	db	31
   202  00EDAE  1F                 	db	31
   203  00EDAF  1F                 	db	31
   204  00EDB0  1F                 	db	31
   205  00EDB1  00                 	db	0
   206                           
   207                           ; #config settings
   208                           
   209                           	psect	cinit
   210  00EF08                     __pcinit:
   211                           	callstack 0
   212  00EF08                     start_initialization:
   213                           	callstack 0
   214  00EF08                     __initialization:
   215                           	callstack 0
   216                           
   217                           ; Initialize objects allocated to BANK1 (56 bytes)
   218                           ; load TBLPTR registers with __pidataBANK1
   219  00EF08  0E7A               	movlw	low __pidataBANK1
   220  00EF0A  6EF6               	movwf	tblptrl,c
   221  00EF0C  0EED               	movlw	high __pidataBANK1
   222  00EF0E  6EF7               	movwf	tblptrh,c
   223  00EF10  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   224  00EF12  6EF8               	movwf	tblptru,c
   225  00EF14  EE01  F000         	lfsr	0,__pdataBANK1
   226  00EF18  EE10 F038          	lfsr	1,56
   227  00EF1C                     copy_data0:
   228  00EF1C  0009               	tblrd		*+
   229  00EF1E  CFF5 FFEE          	movff	tablat,postinc0
   230  00EF22  50E5               	movf	postdec1,w,c
   231  00EF24  50E1               	movf	fsr1l,w,c
   232  00EF26  E1FA               	bnz	copy_data0
   233                           
   234                           ; Initialize objects allocated to BANK0 (24 bytes)
   235                           ; load TBLPTR registers with __pidataBANK0
   236  00EF28  0E26               	movlw	low __pidataBANK0
   237  00EF2A  6EF6               	movwf	tblptrl,c
   238  00EF2C  0EED               	movlw	high __pidataBANK0
   239  00EF2E  6EF7               	movwf	tblptrh,c
   240  00EF30  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   241  00EF32  6EF8               	movwf	tblptru,c
   242  00EF34  EE00  F0C4         	lfsr	0,__pdataBANK0
   243  00EF38  EE10 F018          	lfsr	1,24
   244  00EF3C                     copy_data1:
   245  00EF3C  0009               	tblrd		*+
   246  00EF3E  CFF5 FFEE          	movff	tablat,postinc0
   247  00EF42  50E5               	movf	postdec1,w,c
   248  00EF44  50E1               	movf	fsr1l,w,c
   249  00EF46  E1FA               	bnz	copy_data1
   250                           
   251                           ; Initialize objects allocated to COMRAM (26 bytes)
   252                           ; load TBLPTR registers with __pidataCOMRAM
   253  00EF48  0E3E               	movlw	low __pidataCOMRAM
   254  00EF4A  6EF6               	movwf	tblptrl,c
   255  00EF4C  0EED               	movlw	high __pidataCOMRAM
   256  00EF4E  6EF7               	movwf	tblptrh,c
   257  00EF50  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   258  00EF52  6EF8               	movwf	tblptru,c
   259  00EF54  EE00  F063         	lfsr	0,__pdataCOMRAM
   260  00EF58  EE10 F01A          	lfsr	1,26
   261  00EF5C                     copy_data2:
   262  00EF5C  0009               	tblrd		*+
   263  00EF5E  CFF5 FFEE          	movff	tablat,postinc0
   264  00EF62  50E5               	movf	postdec1,w,c
   265  00EF64  50E1               	movf	fsr1l,w,c
   266  00EF66  E1FA               	bnz	copy_data2
   267                           
   268                           ; Clear objects allocated to BANK0 (68 bytes)
   269  00EF68  EE00  F080         	lfsr	0,__pbssBANK0
   270  00EF6C  0E44               	movlw	68
   271  00EF6E                     clear_0:
   272  00EF6E  6AEE               	clrf	postinc0,c
   273  00EF70  06E8               	decf	wreg,f,c
   274  00EF72  E1FD               	bnz	clear_0
   275                           
   276                           ; Clear objects allocated to COMRAM (47 bytes)
   277  00EF74  EE00  F034         	lfsr	0,__pbssCOMRAM
   278  00EF78  0E2F               	movlw	47
   279  00EF7A                     clear_1:
   280  00EF7A  6AEE               	clrf	postinc0,c
   281  00EF7C  06E8               	decf	wreg,f,c
   282  00EF7E  E1FD               	bnz	clear_1
   283  00EF80                     end_of_initialization:
   284                           	callstack 0
   285  00EF80                     __end_of__initialization:
   286                           	callstack 0
   287  00EF80  0E00               	movlw	low (__Lmediumconst shr (0+16))
   288  00EF82  6EF8               	movwf	tblptru,c
   289  00EF84  0100               	movlb	0
   290  00EF86  EF1F  F07B         	goto	_main	;jump to C main() function
   291                           
   292                           	psect	bssCOMRAM
   293  000034                     __pbssCOMRAM:
   294                           	callstack 0
   295  000034                     	ds	4
   296  000038                     lcd_8bit_send_enable_signal@F3141:
   297                           	callstack 0
   298  000038                     	ds	1
   299  000039                     lcd_send_8bits@F3136:
   300                           	callstack 0
   301  000039                     	ds	1
   302  00003A                     lcd_4bit_send_enable_signal@F3116:
   303                           	callstack 0
   304  00003A                     	ds	1
   305  00003B                     lcd_send_4bits@F3111:
   306                           	callstack 0
   307  00003B                     	ds	1
   308  00003C                     lcd_send_higher_nibble@F3104:
   309                           	callstack 0
   310  00003C                     	ds	1
   311  00003D                     lcd_8bit_send_char_data@F3055:
   312                           	callstack 0
   313  00003D                     	ds	1
   314  00003E                     lcd_8bit_send_command@F3049:
   315                           	callstack 0
   316  00003E                     	ds	1
   317  00003F                     lcd_8bit_initialize@F3043:
   318                           	callstack 0
   319  00003F                     	ds	1
   320  000040                     lcd_8bit_initialize@F3040:
   321                           	callstack 0
   322  000040                     	ds	1
   323  000041                     lcd_8bit_initialize@F3038:
   324                           	callstack 0
   325  000041                     	ds	1
   326  000042                     lcd_4bit_send_char_data@F2990:
   327                           	callstack 0
   328  000042                     	ds	1
   329  000043                     lcd_4bit_send_command@F2984:
   330                           	callstack 0
   331  000043                     	ds	1
   332  000044                     lcd_4bit_initialize@F2978:
   333                           	callstack 0
   334  000044                     	ds	1
   335  000045                     lcd_4bit_initialize@F2975:
   336                           	callstack 0
   337  000045                     	ds	1
   338  000046                     lcd_4bit_initialize@F2973:
   339                           	callstack 0
   340  000046                     	ds	1
   341  000047                     rgb_led_turn_off@F2915:
   342                           	callstack 0
   343  000047                     	ds	1
   344  000048                     rgb_led_turn_off@F2913:
   345                           	callstack 0
   346  000048                     	ds	1
   347  000049                     rgb_led_turn_off@F2911:
   348                           	callstack 0
   349  000049                     	ds	1
   350  00004A                     rgb_led_turn_on@F2906:
   351                           	callstack 0
   352  00004A                     	ds	1
   353  00004B                     rgb_led_turn_on@F2904:
   354                           	callstack 0
   355  00004B                     	ds	1
   356  00004C                     rgb_led_turn_on@F2902:
   357                           	callstack 0
   358  00004C                     	ds	1
   359  00004D                     rgb_led_initialize@F2896:
   360                           	callstack 0
   361  00004D                     	ds	1
   362  00004E                     rgb_led_initialize@F2894:
   363                           	callstack 0
   364  00004E                     	ds	1
   365  00004F                     rgb_led_initialize@F2892:
   366                           	callstack 0
   367  00004F                     	ds	1
   368  000050                     Relay_toggle@F2891:
   369                           	callstack 0
   370  000050                     	ds	1
   371  000051                     Relay_turn_off@F2886:
   372                           	callstack 0
   373  000051                     	ds	1
   374  000052                     Relay_turn_on@F2881:
   375                           	callstack 0
   376  000052                     	ds	1
   377  000053                     Relay_initialize@F2876:
   378                           	callstack 0
   379  000053                     	ds	1
   380  000054                     led_toggle@F2903:
   381                           	callstack 0
   382  000054                     	ds	1
   383  000055                     led_turn_off@F2898:
   384                           	callstack 0
   385  000055                     	ds	1
   386  000056                     led_turn_on@F2893:
   387                           	callstack 0
   388  000056                     	ds	1
   389  000057                     led_initialize@F2888:
   390                           	callstack 0
   391  000057                     	ds	1
   392  000058                     dc_motor_move_left@F2894:
   393                           	callstack 0
   394  000058                     	ds	1
   395  000059                     dc_motor_move_left@F2892:
   396                           	callstack 0
   397  000059                     	ds	1
   398  00005A                     dc_motor_move_right@F2887:
   399                           	callstack 0
   400  00005A                     	ds	1
   401  00005B                     dc_motor_move_right@F2885:
   402                           	callstack 0
   403  00005B                     	ds	1
   404  00005C                     dc_motor_initialize@F2880:
   405                           	callstack 0
   406  00005C                     	ds	1
   407  00005D                     dc_motor_initialize@F2878:
   408                           	callstack 0
   409  00005D                     	ds	1
   410  00005E                     button_read_state@F2886:
   411                           	callstack 0
   412  00005E                     	ds	1
   413  00005F                     button_initialize@F2880:
   414                           	callstack 0
   415  00005F                     	ds	1
   416  000060                     segment_multi_disable@F2912:
   417                           	callstack 0
   418  000060                     	ds	1
   419  000061                     segment_multi_enable@F2907:
   420                           	callstack 0
   421  000061                     	ds	1
   422  000062                     segment_multi_initialize@F2902:
   423                           	callstack 0
   424  000062                     	ds	1
   425                           
   426                           	psect	dataCOMRAM
   427  000063                     __pdataCOMRAM:
   428                           	callstack 0
   429  000063                     _lat_regesters:
   430                           	callstack 0
   431  000063                     	ds	10
   432  00006D                     _tris_regesters:
   433                           	callstack 0
   434  00006D                     	ds	10
   435  000077                     _lcd_4bit:
   436                           	callstack 0
   437  000077                     	ds	6
   438                           
   439                           	psect	bssBANK0
   440  000080                     __pbssBANK0:
   441                           	callstack 0
   442  000080                     _local_keypad_chars:
   443                           	callstack 0
   444  000080                     	ds	16
   445  000090                     	ds	12
   446  00009C                     	ds	12
   447  0000A8                     	ds	12
   448  0000B4                     	ds	12
   449  0000C0                     	ds	4
   450                           
   451                           	psect	dataBANK0
   452  0000C4                     __pdataBANK0:
   453                           	callstack 0
   454  0000C4                     _port_regesters:
   455                           	callstack 0
   456  0000C4                     	ds	10
   457  0000CE                     _rgb_led:
   458                           	callstack 0
   459  0000CE                     	ds	4
   460  0000D2                     _lcd_8bit:
   461                           	callstack 0
   462  0000D2                     	ds	10
   463                           
   464                           	psect	dataBANK1
   465  000100                     __pdataBANK1:
   466                           	callstack 0
   467  000100                     _customChars:
   468                           	callstack 0
   469  000100                     	ds	56
   470                           
   471                           	psect	cstackCOMRAM
   472  000001                     __pcstackCOMRAM:
   473                           	callstack 0
   474  000001                     gpio_pin_direction_initialize@_pin_config:
   475                           	callstack 0
   476  000001                     gpio_pin_write_logic@_pin_config:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x0
   480  000001                     	ds	2
   481  000003                     ??_gpio_pin_direction_initialize:
   482  000003                     gpio_pin_write_logic@logic:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x2
   486  000003                     	ds	1
   487  000004                     ??_gpio_pin_write_logic:
   488                           
   489                           ; 1 bytes @ 0x3
   490  000004                     	ds	5
   491  000009                     gpio_pin_direction_initialize@state:
   492                           	callstack 0
   493                           
   494                           ; 1 bytes @ 0x8
   495  000009                     	ds	1
   496  00000A                     gpio_pin_write_logic@state:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0x9
   500  00000A                     	ds	1
   501  00000B                     lcd_send_4bits@lcd_4bit:
   502                           	callstack 0
   503  00000B                     lcd_4bit_send_enable_signal@lcd_4bit:
   504                           	callstack 0
   505  00000B                     lcd_send_8bits@lcd_8bit:
   506                           	callstack 0
   507  00000B                     lcd_8bit_send_enable_signal@lcd_8bit:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0xA
   511  00000B                     	ds	2
   512  00000D                     ??_lcd_4bit_send_enable_signal:
   513  00000D                     ??_lcd_8bit_send_enable_signal:
   514  00000D                     lcd_send_4bits@data_or_command:
   515                           	callstack 0
   516  00000D                     lcd_send_8bits@data_or_command:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0xC
   520  00000D                     	ds	1
   521  00000E                     ??_lcd_send_4bits:
   522  00000E                     ??_lcd_send_8bits:
   523  00000E                     lcd_4bit_send_enable_signal@state:
   524                           	callstack 0
   525  00000E                     lcd_8bit_send_enable_signal@state:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0xD
   529  00000E                     	ds	1
   530  00000F                     lcd_4bit_send_enable_signal@en_pin:
   531                           	callstack 0
   532  00000F                     lcd_8bit_send_enable_signal@en_pin:
   533                           	callstack 0
   534                           
   535                           ; 1 bytes @ 0xE
   536  00000F                     	ds	2
   537  000011                     lcd_send_4bits@state:
   538                           	callstack 0
   539  000011                     lcd_send_8bits@state:
   540                           	callstack 0
   541                           
   542                           ; 1 bytes @ 0x10
   543  000011                     	ds	1
   544  000012                     lcd_send_4bits@data_pin:
   545                           	callstack 0
   546  000012                     lcd_send_8bits@data_pin:
   547                           	callstack 0
   548                           
   549                           ; 1 bytes @ 0x11
   550  000012                     	ds	1
   551  000013                     lcd_send_4bits@local_index:
   552                           	callstack 0
   553  000013                     lcd_send_8bits@local_index:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0x12
   557  000013                     	ds	1
   558  000014                     lcd_4bit_send_command@lcd_4bit:
   559                           	callstack 0
   560  000014                     lcd_4bit_send_char_data@lcd_4bit:
   561                           	callstack 0
   562  000014                     lcd_8bit_send_command@lcd_8bit:
   563                           	callstack 0
   564  000014                     lcd_8bit_send_char_data@lcd_8bit:
   565                           	callstack 0
   566  000014                     lcd_send_higher_nibble@lcd_4bit:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x13
   570  000014                     	ds	2
   571  000016                     lcd_4bit_send_command@command:
   572                           	callstack 0
   573  000016                     lcd_4bit_send_char_data@ch:
   574                           	callstack 0
   575  000016                     lcd_8bit_send_command@command:
   576                           	callstack 0
   577  000016                     lcd_8bit_send_char_data@ch:
   578                           	callstack 0
   579  000016                     lcd_send_higher_nibble@data:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0x15
   583  000016                     	ds	1
   584  000017                     ??_lcd_send_higher_nibble:
   585  000017                     ??_lcd_4bit_send_command:
   586  000017                     ??_lcd_8bit_send_command:
   587  000017                     ??_lcd_4bit_send_char_data:
   588  000017                     ??_lcd_8bit_send_char_data:
   589                           
   590                           ; 1 bytes @ 0x16
   591  000017                     	ds	1
   592  000018                     lcd_4bit_send_command@state:
   593                           	callstack 0
   594  000018                     lcd_4bit_send_char_data@state:
   595                           	callstack 0
   596  000018                     lcd_8bit_send_command@state:
   597                           	callstack 0
   598  000018                     lcd_8bit_send_char_data@state:
   599                           	callstack 0
   600  000018                     lcd_send_higher_nibble@state:
   601                           	callstack 0
   602                           
   603                           ; 1 bytes @ 0x17
   604  000018                     	ds	1
   605  000019                     lcd_4bit_send_command@rs_pin:
   606                           	callstack 0
   607  000019                     lcd_4bit_send_char_data@rs_pin:
   608                           	callstack 0
   609  000019                     lcd_8bit_send_command@rs_pin:
   610                           	callstack 0
   611  000019                     lcd_8bit_send_char_data@rs_pin:
   612                           	callstack 0
   613  000019                     lcd_send_higher_nibble@rs_pin:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0x18
   617  000019                     	ds	1
   618  00001A                     lcd_4bit_initialize@lcd_4bit:
   619                           	callstack 0
   620  00001A                     lcd_4bit_set_position@lcd_4bit:
   621                           	callstack 0
   622  00001A                     lcd_8bit_initialize@lcd_8bit:
   623                           	callstack 0
   624  00001A                     lcd_8bit_set_position@lcd_8bit:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x19
   628  00001A                     	ds	2
   629  00001C                     ??_lcd_4bit_initialize:
   630  00001C                     ??_lcd_8bit_initialize:
   631  00001C                     lcd_4bit_set_position@row:
   632                           	callstack 0
   633  00001C                     lcd_8bit_set_position@row:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0x1B
   637  00001C                     	ds	1
   638  00001D                     lcd_4bit_set_position@col:
   639                           	callstack 0
   640  00001D                     lcd_8bit_set_position@col:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x1C
   644  00001D                     	ds	1
   645  00001E                     ??_lcd_4bit_set_position:
   646  00001E                     ??_lcd_8bit_set_position:
   647                           
   648                           ; 1 bytes @ 0x1D
   649  00001E                     	ds	1
   650  00001F                     lcd_4bit_initialize@state:
   651                           	callstack 0
   652  00001F                     lcd_8bit_initialize@state:
   653                           	callstack 0
   654                           
   655                           ; 1 bytes @ 0x1E
   656  00001F                     	ds	1
   657  000020                     lcd_4bit_initialize@local_index:
   658                           	callstack 0
   659  000020                     lcd_4bit_set_position@state:
   660                           	callstack 0
   661  000020                     lcd_8bit_initialize@local_index:
   662                           	callstack 0
   663  000020                     lcd_8bit_set_position@state:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0x1F
   667  000020                     	ds	1
   668  000021                     lcd_4bit_initialize@rs_pin:
   669                           	callstack 0
   670  000021                     lcd_8bit_initialize@rs_pin:
   671                           	callstack 0
   672  000021                     lcd_4bit_send_char_at_position@lcd_4bit:
   673                           	callstack 0
   674  000021                     lcd_8bit_send_char_at_position@lcd_8bit:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x20
   678  000021                     	ds	1
   679  000022                     lcd_4bit_initialize@en_pin:
   680                           	callstack 0
   681  000022                     lcd_8bit_initialize@en_pin:
   682                           	callstack 0
   683                           
   684                           ; 1 bytes @ 0x21
   685  000022                     	ds	1
   686  000023                     lcd_4bit_initialize@data_pin:
   687                           	callstack 0
   688  000023                     lcd_4bit_send_char_at_position@row:
   689                           	callstack 0
   690  000023                     lcd_8bit_initialize@data_pin:
   691                           	callstack 0
   692  000023                     lcd_8bit_send_char_at_position@row:
   693                           	callstack 0
   694                           
   695                           ; 1 bytes @ 0x22
   696  000023                     	ds	1
   697  000024                     application_initialize@state:
   698                           	callstack 0
   699  000024                     lcd_4bit_send_char_at_position@col:
   700                           	callstack 0
   701  000024                     lcd_8bit_send_char_at_position@col:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x23
   705  000024                     	ds	1
   706  000025                     lcd_4bit_send_char_at_position@ch:
   707                           	callstack 0
   708  000025                     lcd_8bit_send_char_at_position@ch:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0x24
   712  000025                     	ds	1
   713  000026                     lcd_4bit_send_char_at_position@state:
   714                           	callstack 0
   715  000026                     lcd_8bit_send_char_at_position@state:
   716                           	callstack 0
   717                           
   718                           ; 1 bytes @ 0x25
   719  000026                     	ds	1
   720  000027                     lcd_4bit_send_custome_char@lcd_4bit:
   721                           	callstack 0
   722  000027                     lcd_8bit_send_custome_char@lcd_8bit:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x26
   726  000027                     	ds	2
   727  000029                     lcd_4bit_send_custome_char@row:
   728                           	callstack 0
   729  000029                     lcd_8bit_send_custome_char@row:
   730                           	callstack 0
   731                           
   732                           ; 1 bytes @ 0x28
   733  000029                     	ds	1
   734  00002A                     lcd_4bit_send_custome_char@col:
   735                           	callstack 0
   736  00002A                     lcd_8bit_send_custome_char@col:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x29
   740  00002A                     	ds	1
   741  00002B                     lcd_4bit_send_custome_char@str:
   742                           	callstack 0
   743  00002B                     lcd_8bit_send_custome_char@str:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x2A
   747  00002B                     	ds	2
   748  00002D                     lcd_4bit_send_custome_char@mem_pos:
   749                           	callstack 0
   750  00002D                     lcd_8bit_send_custome_char@mem_pos:
   751                           	callstack 0
   752                           
   753                           ; 1 bytes @ 0x2C
   754  00002D                     	ds	1
   755  00002E                     lcd_4bit_send_custome_char@state:
   756                           	callstack 0
   757  00002E                     lcd_8bit_send_custome_char@state:
   758                           	callstack 0
   759                           
   760                           ; 1 bytes @ 0x2D
   761  00002E                     	ds	1
   762  00002F                     lcd_4bit_send_custome_char@local_index:
   763                           	callstack 0
   764  00002F                     lcd_8bit_send_custome_char@local_index:
   765                           	callstack 0
   766                           
   767                           ; 1 bytes @ 0x2E
   768  00002F                     	ds	1
   769  000030                     ??_main:
   770                           
   771                           ; 1 bytes @ 0x2F
   772  000030                     	ds	2
   773  000032                     main@local_index_919:
   774                           	callstack 0
   775                           
   776                           ; 1 bytes @ 0x31
   777  000032                     	ds	1
   778  000033                     main@local_index:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x32
   782  000033                     	ds	1
   783                           
   784 ;;
   785 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   786 ;;
   787 ;; *************** function _main *****************
   788 ;; Defined at:
   789 ;;		line 45 in file "application.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;  local_index     1   49[COMRAM] unsigned char 
   794 ;;  local_index     1   50[COMRAM] unsigned char 
   795 ;; Return value:  Size  Location     Type
   796 ;;                  2  404[None  ] int 
   797 ;; Registers used:
   798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   806 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   807 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   808 ;;Total ram usage:        4 bytes
   809 ;; Hardware stack levels required when called: 6
   810 ;; This function calls:
   811 ;;		_application_initialize
   812 ;;		_lcd_4bit_send_char_at_position
   813 ;;		_lcd_4bit_send_custome_char
   814 ;;		_lcd_8bit_send_char_at_position
   815 ;;		_lcd_8bit_send_custome_char
   816 ;; This function is called by:
   817 ;;		Startup code after reset
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           	psect	text0
   822  00F63E                     __ptext0:
   823                           	callstack 0
   824  00F63E                     _main:
   825                           	callstack 25
   826  00F63E                     
   827                           ;application.c: 47:     application_initialize();
   828  00F63E  ECAC  F076         	call	_application_initialize	;wreg free
   829  00F642                     
   830                           ;application.c: 50:     for(uint8 local_index=0; local_index<7; local_index++)
   831  00F642  0E00               	movlw	0
   832  00F644  6E33               	movwf	main@local_index^0,c
   833  00F646                     l3922:
   834                           
   835                           ;application.c: 51:     {;application.c: 52:         lcd_8bit_send_custome_char(&lcd_8bi
      +                          t, 1, 1, customChars[local_index], local_index);
   836  00F646  0ED2               	movlw	low _lcd_8bit
   837  00F648  6E27               	movwf	lcd_8bit_send_custome_char@lcd_8bit^0,c
   838  00F64A  0E00               	movlw	high _lcd_8bit
   839  00F64C  6E28               	movwf	(lcd_8bit_send_custome_char@lcd_8bit+1)^0,c
   840  00F64E  0E01               	movlw	1
   841  00F650  6E29               	movwf	lcd_8bit_send_custome_char@row^0,c
   842  00F652  0E01               	movlw	1
   843  00F654  6E2A               	movwf	lcd_8bit_send_custome_char@col^0,c
   844  00F656  5033               	movf	main@local_index^0,w,c
   845  00F658  0D08               	mullw	8
   846  00F65A  0E00               	movlw	low _customChars
   847  00F65C  24F3               	addwf	243,w,c
   848  00F65E  6E2B               	movwf	lcd_8bit_send_custome_char@str^0,c
   849  00F660  0E01               	movlw	high _customChars
   850  00F662  20F4               	addwfc	prodh,w,c
   851  00F664  6E2C               	movwf	(lcd_8bit_send_custome_char@str+1)^0,c
   852  00F666  C033  F02D         	movff	main@local_index,lcd_8bit_send_custome_char@mem_pos
   853  00F66A  EC4B  F079         	call	_lcd_8bit_send_custome_char	;wreg free
   854                           
   855                           ;application.c: 53:         lcd_4bit_send_custome_char(&lcd_4bit, 1, 1, customChars[loca
      +                          l_index], local_index);
   856  00F66E  0E77               	movlw	low _lcd_4bit
   857  00F670  6E27               	movwf	lcd_4bit_send_custome_char@lcd_4bit^0,c
   858  00F672  0E00               	movlw	high _lcd_4bit
   859  00F674  6E28               	movwf	(lcd_4bit_send_custome_char@lcd_4bit+1)^0,c
   860  00F676  0E01               	movlw	1
   861  00F678  6E29               	movwf	lcd_4bit_send_custome_char@row^0,c
   862  00F67A  0E01               	movlw	1
   863  00F67C  6E2A               	movwf	lcd_4bit_send_custome_char@col^0,c
   864  00F67E  5033               	movf	main@local_index^0,w,c
   865  00F680  0D08               	mullw	8
   866  00F682  0E00               	movlw	low _customChars
   867  00F684  24F3               	addwf	243,w,c
   868  00F686  6E2B               	movwf	lcd_4bit_send_custome_char@str^0,c
   869  00F688  0E01               	movlw	high _customChars
   870  00F68A  20F4               	addwfc	prodh,w,c
   871  00F68C  6E2C               	movwf	(lcd_4bit_send_custome_char@str+1)^0,c
   872  00F68E  C033  F02D         	movff	main@local_index,lcd_4bit_send_custome_char@mem_pos
   873  00F692  EC43  F077         	call	_lcd_4bit_send_custome_char	;wreg free
   874  00F696                     
   875                           ;application.c: 54:     }
   876  00F696  2A33               	incf	main@local_index^0,f,c
   877  00F698  0E06               	movlw	6
   878  00F69A  6433               	cpfsgt	main@local_index^0,c
   879  00F69C  EF52  F07B         	goto	u2341
   880  00F6A0  EF54  F07B         	goto	u2340
   881  00F6A4                     u2341:
   882  00F6A4  EF23  F07B         	goto	l3922
   883  00F6A8                     u2340:
   884  00F6A8                     l3928:
   885                           
   886                           ;application.c: 57:     {;application.c: 58:         for(uint8 local_index=0; local_inde
      +                          x<7; local_index++)
   887  00F6A8  0E00               	movlw	0
   888  00F6AA  6E32               	movwf	main@local_index_919^0,c
   889  00F6AC                     l3934:
   890                           
   891                           ;application.c: 59:         {;application.c: 62:             lcd_4bit_send_char_at_posit
      +                          ion(&lcd_4bit, 4, 4, local_index);
   892  00F6AC  0E77               	movlw	low _lcd_4bit
   893  00F6AE  6E21               	movwf	lcd_4bit_send_char_at_position@lcd_4bit^0,c
   894  00F6B0  0E00               	movlw	high _lcd_4bit
   895  00F6B2  6E22               	movwf	(lcd_4bit_send_char_at_position@lcd_4bit+1)^0,c
   896  00F6B4  0E04               	movlw	4
   897  00F6B6  6E23               	movwf	lcd_4bit_send_char_at_position@row^0,c
   898  00F6B8  0E04               	movlw	4
   899  00F6BA  6E24               	movwf	lcd_4bit_send_char_at_position@col^0,c
   900  00F6BC  C032  F025         	movff	main@local_index_919,lcd_4bit_send_char_at_position@ch
   901  00F6C0  ECD9  F076         	call	_lcd_4bit_send_char_at_position	;wreg free
   902                           
   903                           ;application.c: 63:             lcd_8bit_send_char_at_position(&lcd_8bit, 4, 4, local_in
      +                          dex);
   904  00F6C4  0ED2               	movlw	low _lcd_8bit
   905  00F6C6  6E21               	movwf	lcd_8bit_send_char_at_position@lcd_8bit^0,c
   906  00F6C8  0E00               	movlw	high _lcd_8bit
   907  00F6CA  6E22               	movwf	(lcd_8bit_send_char_at_position@lcd_8bit+1)^0,c
   908  00F6CC  0E04               	movlw	4
   909  00F6CE  6E23               	movwf	lcd_8bit_send_char_at_position@row^0,c
   910  00F6D0  0E04               	movlw	4
   911  00F6D2  6E24               	movwf	lcd_8bit_send_char_at_position@col^0,c
   912  00F6D4  C032  F025         	movff	main@local_index_919,lcd_8bit_send_char_at_position@ch
   913  00F6D8  EC0E  F077         	call	_lcd_8bit_send_char_at_position	;wreg free
   914  00F6DC                     
   915                           ;application.c: 64:             _delay((unsigned long)((500)*(8000000/4000.0)));
   916  00F6DC  0E06               	movlw	6
   917  00F6DE  6E31               	movwf	(??_main+1)^0,c
   918  00F6E0  0E13               	movlw	19
   919  00F6E2  6E30               	movwf	??_main^0,c
   920  00F6E4  0EAE               	movlw	174
   921  00F6E6                     u2607:
   922  00F6E6  2EE8               	decfsz	wreg,f,c
   923  00F6E8  D7FE               	bra	u2607
   924  00F6EA  2E30               	decfsz	??_main^0,f,c
   925  00F6EC  D7FC               	bra	u2607
   926  00F6EE  2E31               	decfsz	(??_main+1)^0,f,c
   927  00F6F0  D7FA               	bra	u2607
   928  00F6F2                     
   929                           ;application.c: 65:         }
   930  00F6F2  2A32               	incf	main@local_index_919^0,f,c
   931  00F6F4  0E06               	movlw	6
   932  00F6F6  6432               	cpfsgt	main@local_index_919^0,c
   933  00F6F8  EF80  F07B         	goto	u2351
   934  00F6FC  EF82  F07B         	goto	u2350
   935  00F700                     u2351:
   936  00F700  EF56  F07B         	goto	l3934
   937  00F704                     u2350:
   938  00F704  EF54  F07B         	goto	l3928
   939  00F708  EF02  F000         	goto	start
   940  00F70C                     __end_of_main:
   941                           	callstack 0
   942                           
   943 ;; *************** function _lcd_8bit_send_custome_char *****************
   944 ;; Defined at:
   945 ;;		line 374 in file "ECU/LCD/ecu_lcd.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  lcd_8bit        2   38[COMRAM] PTR const struct .
   948 ;;		 -> lcd_8bit(10), 
   949 ;;  row             1   40[COMRAM] const unsigned char 
   950 ;;  col             1   41[COMRAM] const unsigned char 
   951 ;;  str             2   42[COMRAM] PTR const unsigned char 
   952 ;;		 -> customChars(56), 
   953 ;;  mem_pos         1   44[COMRAM] unsigned char 
   954 ;; Auto vars:     Size  Location     Type
   955 ;;  local_index     1   46[COMRAM] unsigned char 
   956 ;;  state           1   45[COMRAM] unsigned char 
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      unsigned char 
   959 ;; Registers used:
   960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   966 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   967 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   969 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   970 ;;Total ram usage:        9 bytes
   971 ;; Hardware stack levels used: 1
   972 ;; Hardware stack levels required when called: 5
   973 ;; This function calls:
   974 ;;		_lcd_8bit_send_char_at_position
   975 ;;		_lcd_8bit_send_char_data
   976 ;;		_lcd_8bit_send_command
   977 ;; This function is called by:
   978 ;;		_main
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           	psect	text1
   983  00F296                     __ptext1:
   984                           	callstack 0
   985  00F296                     _lcd_8bit_send_custome_char:
   986                           	callstack 25
   987  00F296                     
   988                           ;ECU/LCD/ecu_lcd.c: 374: Std_ReturnType lcd_8bit_send_custome_char(const lcd_8bit_t* lcd
      +                          _8bit, const uint8 row, const uint8 col, const char* str, uint8 mem_pos);ECU/LCD/ecu_lcd
      +                          .c: 375: {;ECU/LCD/ecu_lcd.c: 376:     Std_ReturnType state = (Std_ReturnType)1;
   989  00F296  0E01               	movlw	1
   990  00F298  6E2E               	movwf	lcd_8bit_send_custome_char@state^0,c
   991  00F29A                     
   992                           ;ECU/LCD/ecu_lcd.c: 377:     if(lcd_8bit == ((void*)0) || row > 4 || col > 80 || str == 
      +                          ((void*)0))
   993  00F29A  5027               	movf	lcd_8bit_send_custome_char@lcd_8bit^0,w,c
   994  00F29C  1028               	iorwf	(lcd_8bit_send_custome_char@lcd_8bit+1)^0,w,c
   995  00F29E  B4D8               	btfsc	status,2,c
   996  00F2A0  EF54  F079         	goto	u1801
   997  00F2A4  EF56  F079         	goto	u1800
   998  00F2A8                     u1801:
   999  00F2A8  EF6F  F079         	goto	l3328
  1000  00F2AC                     u1800:
  1001  00F2AC  0E05               	movlw	5
  1002  00F2AE  6029               	cpfslt	lcd_8bit_send_custome_char@row^0,c
  1003  00F2B0  EF5C  F079         	goto	u1811
  1004  00F2B4  EF5E  F079         	goto	u1810
  1005  00F2B8                     u1811:
  1006  00F2B8  EF6F  F079         	goto	l3328
  1007  00F2BC                     u1810:
  1008  00F2BC  0E51               	movlw	81
  1009  00F2BE  602A               	cpfslt	lcd_8bit_send_custome_char@col^0,c
  1010  00F2C0  EF64  F079         	goto	u1821
  1011  00F2C4  EF66  F079         	goto	u1820
  1012  00F2C8                     u1821:
  1013  00F2C8  EF6F  F079         	goto	l3328
  1014  00F2CC                     u1820:
  1015  00F2CC  502B               	movf	lcd_8bit_send_custome_char@str^0,w,c
  1016  00F2CE  102C               	iorwf	(lcd_8bit_send_custome_char@str+1)^0,w,c
  1017  00F2D0  A4D8               	btfss	status,2,c
  1018  00F2D2  EF6D  F079         	goto	u1831
  1019  00F2D6  EF6F  F079         	goto	u1830
  1020  00F2DA                     u1831:
  1021  00F2DA  EF71  F079         	goto	l3330
  1022  00F2DE                     u1830:
  1023  00F2DE                     l3328:
  1024                           
  1025                           ;ECU/LCD/ecu_lcd.c: 380:     }
  1026  00F2DE  EFA4  F079         	goto	l596
  1027  00F2E2                     l3330:
  1028                           
  1029                           ;ECU/LCD/ecu_lcd.c: 382:     {;ECU/LCD/ecu_lcd.c: 383:         state &= lcd_8bit_send_co
      +                          mmand(lcd_8bit, 0x40 + (mem_pos * 8));
  1030  00F2E2  C027  F014         	movff	lcd_8bit_send_custome_char@lcd_8bit,lcd_8bit_send_command@lcd_8bit
  1031  00F2E6  C028  F015         	movff	lcd_8bit_send_custome_char@lcd_8bit+1,lcd_8bit_send_command@lcd_8bit+1
  1032  00F2EA  502D               	movf	lcd_8bit_send_custome_char@mem_pos^0,w,c
  1033  00F2EC  0D08               	mullw	8
  1034  00F2EE  50F3               	movf	243,w,c
  1035  00F2F0  0F40               	addlw	64
  1036  00F2F2  6E16               	movwf	lcd_8bit_send_command@command^0,c
  1037  00F2F4  EC0F  F078         	call	_lcd_8bit_send_command	;wreg free
  1038  00F2F8  162E               	andwf	lcd_8bit_send_custome_char@state^0,f,c
  1039  00F2FA                     
  1040                           ;ECU/LCD/ecu_lcd.c: 384:         for(uint8 local_index=0; local_index<8; local_index++)
  1041  00F2FA  0E00               	movlw	0
  1042  00F2FC  6E2F               	movwf	lcd_8bit_send_custome_char@local_index^0,c
  1043  00F2FE                     l3338:
  1044                           
  1045                           ;ECU/LCD/ecu_lcd.c: 385:         {;ECU/LCD/ecu_lcd.c: 386:             state &= lcd_8bit
      +                          _send_char_data(lcd_8bit, str[local_index]);
  1046  00F2FE  C027  F014         	movff	lcd_8bit_send_custome_char@lcd_8bit,lcd_8bit_send_char_data@lcd_8bit
  1047  00F302  C028  F015         	movff	lcd_8bit_send_custome_char@lcd_8bit+1,lcd_8bit_send_char_data@lcd_8bit+1
  1048  00F306  502F               	movf	lcd_8bit_send_custome_char@local_index^0,w,c
  1049  00F308  242B               	addwf	lcd_8bit_send_custome_char@str^0,w,c
  1050  00F30A  6ED9               	movwf	fsr2l,c
  1051  00F30C  0E00               	movlw	0
  1052  00F30E  202C               	addwfc	(lcd_8bit_send_custome_char@str+1)^0,w,c
  1053  00F310  6EDA               	movwf	fsr2h,c
  1054  00F312  50DF               	movf	indf2,w,c
  1055  00F314  6E16               	movwf	lcd_8bit_send_char_data@ch^0,c
  1056  00F316  EC5A  F078         	call	_lcd_8bit_send_char_data	;wreg free
  1057  00F31A  162E               	andwf	lcd_8bit_send_custome_char@state^0,f,c
  1058  00F31C                     
  1059                           ;ECU/LCD/ecu_lcd.c: 387:         }
  1060  00F31C  2A2F               	incf	lcd_8bit_send_custome_char@local_index^0,f,c
  1061  00F31E  0E07               	movlw	7
  1062  00F320  642F               	cpfsgt	lcd_8bit_send_custome_char@local_index^0,c
  1063  00F322  EF95  F079         	goto	u1841
  1064  00F326  EF97  F079         	goto	u1840
  1065  00F32A                     u1841:
  1066  00F32A  EF7F  F079         	goto	l3338
  1067  00F32E                     u1840:
  1068  00F32E                     
  1069                           ;ECU/LCD/ecu_lcd.c: 388:         state &= lcd_8bit_send_char_at_position(lcd_8bit, row, 
      +                          col, mem_pos);
  1070  00F32E  C027  F021         	movff	lcd_8bit_send_custome_char@lcd_8bit,lcd_8bit_send_char_at_position@lcd_8bit
  1071  00F332  C028  F022         	movff	lcd_8bit_send_custome_char@lcd_8bit+1,lcd_8bit_send_char_at_position@lcd_8bit+1
  1072  00F336  C029  F023         	movff	lcd_8bit_send_custome_char@row,lcd_8bit_send_char_at_position@row
  1073  00F33A  C02A  F024         	movff	lcd_8bit_send_custome_char@col,lcd_8bit_send_char_at_position@col
  1074  00F33E  C02D  F025         	movff	lcd_8bit_send_custome_char@mem_pos,lcd_8bit_send_char_at_position@ch
  1075  00F342  EC0E  F077         	call	_lcd_8bit_send_char_at_position	;wreg free
  1076  00F346  162E               	andwf	lcd_8bit_send_custome_char@state^0,f,c
  1077  00F348                     l596:
  1078  00F348  0012               	return		;funcret
  1079  00F34A                     __end_of_lcd_8bit_send_custome_char:
  1080                           	callstack 0
  1081                           
  1082 ;; *************** function _lcd_8bit_send_char_at_position *****************
  1083 ;; Defined at:
  1084 ;;		line 326 in file "ECU/LCD/ecu_lcd.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;  lcd_8bit        2   32[COMRAM] PTR const struct .
  1087 ;;		 -> lcd_8bit(10), 
  1088 ;;  row             1   34[COMRAM] const unsigned char 
  1089 ;;  col             1   35[COMRAM] const unsigned char 
  1090 ;;  ch              1   36[COMRAM] const unsigned char 
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;  state           1   37[COMRAM] unsigned char 
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      unsigned char 
  1095 ;; Registers used:
  1096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1102 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1103 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1105 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1106 ;;Total ram usage:        6 bytes
  1107 ;; Hardware stack levels used: 1
  1108 ;; Hardware stack levels required when called: 4
  1109 ;; This function calls:
  1110 ;;		_lcd_8bit_send_char_data
  1111 ;;		_lcd_8bit_set_position
  1112 ;; This function is called by:
  1113 ;;		_main
  1114 ;;		_lcd_8bit_send_custome_char
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           	psect	text2
  1119  00EE1C                     __ptext2:
  1120                           	callstack 0
  1121  00EE1C                     _lcd_8bit_send_char_at_position:
  1122                           	callstack 25
  1123  00EE1C                     
  1124                           ;ECU/LCD/ecu_lcd.c: 326: Std_ReturnType lcd_8bit_send_char_at_position(const lcd_8bit_t*
      +                           lcd_8bit, const uint8 row, const uint8 col, const uint8 ch);ECU/LCD/ecu_lcd.c: 327: {;E
      +                          CU/LCD/ecu_lcd.c: 328:     Std_ReturnType state = (Std_ReturnType)1;
  1125  00EE1C  0E01               	movlw	1
  1126  00EE1E  6E26               	movwf	lcd_8bit_send_char_at_position@state^0,c
  1127  00EE20                     
  1128                           ;ECU/LCD/ecu_lcd.c: 329:     if(lcd_8bit == ((void*)0) || row > 4 || col > 80)
  1129  00EE20  5021               	movf	lcd_8bit_send_char_at_position@lcd_8bit^0,w,c
  1130  00EE22  1022               	iorwf	(lcd_8bit_send_char_at_position@lcd_8bit+1)^0,w,c
  1131  00EE24  B4D8               	btfsc	status,2,c
  1132  00EE26  EF17  F077         	goto	u1671
  1133  00EE2A  EF19  F077         	goto	u1670
  1134  00EE2E                     u1671:
  1135  00EE2E  EF29  F077         	goto	l3130
  1136  00EE32                     u1670:
  1137  00EE32  0E05               	movlw	5
  1138  00EE34  6023               	cpfslt	lcd_8bit_send_char_at_position@row^0,c
  1139  00EE36  EF1F  F077         	goto	u1681
  1140  00EE3A  EF21  F077         	goto	u1680
  1141  00EE3E                     u1681:
  1142  00EE3E  EF29  F077         	goto	l3130
  1143  00EE42                     u1680:
  1144  00EE42  0E50               	movlw	80
  1145  00EE44  6424               	cpfsgt	lcd_8bit_send_char_at_position@col^0,c
  1146  00EE46  EF27  F077         	goto	u1691
  1147  00EE4A  EF29  F077         	goto	u1690
  1148  00EE4E                     u1691:
  1149  00EE4E  EF2D  F077         	goto	l3132
  1150  00EE52                     u1690:
  1151  00EE52                     l3130:
  1152                           
  1153                           ;ECU/LCD/ecu_lcd.c: 330:     {;ECU/LCD/ecu_lcd.c: 331:         state = (Std_ReturnType)0
      +                          ;
  1154  00EE52  0E00               	movlw	0
  1155  00EE54  6E26               	movwf	lcd_8bit_send_char_at_position@state^0,c
  1156                           
  1157                           ;ECU/LCD/ecu_lcd.c: 332:     }
  1158  00EE56  EF41  F077         	goto	l3134
  1159  00EE5A                     l3132:
  1160                           
  1161                           ;ECU/LCD/ecu_lcd.c: 334:     {;ECU/LCD/ecu_lcd.c: 335:         state &= lcd_8bit_set_pos
      +                          ition(lcd_8bit,row,col);
  1162  00EE5A  C021  F01A         	movff	lcd_8bit_send_char_at_position@lcd_8bit,lcd_8bit_set_position@lcd_8bit
  1163  00EE5E  C022  F01B         	movff	lcd_8bit_send_char_at_position@lcd_8bit+1,lcd_8bit_set_position@lcd_8bit+1
  1164  00EE62  C023  F01C         	movff	lcd_8bit_send_char_at_position@row,lcd_8bit_set_position@row
  1165  00EE66  C024  F01D         	movff	lcd_8bit_send_char_at_position@col,lcd_8bit_set_position@col
  1166  00EE6A  ECF7  F07B         	call	_lcd_8bit_set_position	;wreg free
  1167  00EE6E  1626               	andwf	lcd_8bit_send_char_at_position@state^0,f,c
  1168                           
  1169                           ;ECU/LCD/ecu_lcd.c: 336:         state &= lcd_8bit_send_char_data(lcd_8bit,ch);
  1170  00EE70  C021  F014         	movff	lcd_8bit_send_char_at_position@lcd_8bit,lcd_8bit_send_char_data@lcd_8bit
  1171  00EE74  C022  F015         	movff	lcd_8bit_send_char_at_position@lcd_8bit+1,lcd_8bit_send_char_data@lcd_8bit+1
  1172  00EE78  C025  F016         	movff	lcd_8bit_send_char_at_position@ch,lcd_8bit_send_char_data@ch
  1173  00EE7C  EC5A  F078         	call	_lcd_8bit_send_char_data	;wreg free
  1174  00EE80  1626               	andwf	lcd_8bit_send_char_at_position@state^0,f,c
  1175  00EE82                     l3134:
  1176                           
  1177                           ;ECU/LCD/ecu_lcd.c: 338:     return state;
  1178  00EE82  5026               	movf	lcd_8bit_send_char_at_position@state^0,w,c
  1179  00EE84  0012               	return		;funcret
  1180  00EE86                     __end_of_lcd_8bit_send_char_at_position:
  1181                           	callstack 0
  1182                           
  1183 ;; *************** function _lcd_8bit_set_position *****************
  1184 ;; Defined at:
  1185 ;;		line 393 in file "ECU/LCD/ecu_lcd.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  lcd_8bit        2   25[COMRAM] PTR const struct .
  1188 ;;		 -> lcd_8bit(10), 
  1189 ;;  row             1   27[COMRAM] unsigned char 
  1190 ;;  col             1   28[COMRAM] unsigned char 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  state           1   31[COMRAM] unsigned char 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      unsigned char 
  1195 ;; Registers used:
  1196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1202 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;Total ram usage:        7 bytes
  1207 ;; Hardware stack levels used: 1
  1208 ;; Hardware stack levels required when called: 3
  1209 ;; This function calls:
  1210 ;;		_lcd_8bit_send_command
  1211 ;; This function is called by:
  1212 ;;		_lcd_8bit_send_char_at_position
  1213 ;;		_lcd_8bit_send_string_at_position
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text3
  1218  00F7EE                     __ptext3:
  1219                           	callstack 0
  1220  00F7EE                     _lcd_8bit_set_position:
  1221                           	callstack 25
  1222  00F7EE                     
  1223                           ;ECU/LCD/ecu_lcd.c: 393: Std_ReturnType lcd_8bit_set_position(const lcd_8bit_t* lcd_8bit
      +                          , uint8 row, uint8 col);ECU/LCD/ecu_lcd.c: 394: {;ECU/LCD/ecu_lcd.c: 395:     Std_Return
      +                          Type state = (Std_ReturnType)1;
  1224  00F7EE  0E01               	movlw	1
  1225  00F7F0  6E20               	movwf	lcd_8bit_set_position@state^0,c
  1226  00F7F2                     
  1227                           ;ECU/LCD/ecu_lcd.c: 396:     if(lcd_8bit == ((void*)0) || row > 4 || col > 80)
  1228  00F7F2  501A               	movf	lcd_8bit_set_position@lcd_8bit^0,w,c
  1229  00F7F4  101B               	iorwf	(lcd_8bit_set_position@lcd_8bit+1)^0,w,c
  1230  00F7F6  B4D8               	btfsc	status,2,c
  1231  00F7F8  EF00  F07C         	goto	u1611
  1232  00F7FC  EF02  F07C         	goto	u1610
  1233  00F800                     u1611:
  1234  00F800  EF12  F07C         	goto	l3082
  1235  00F804                     u1610:
  1236  00F804  0E05               	movlw	5
  1237  00F806  601C               	cpfslt	lcd_8bit_set_position@row^0,c
  1238  00F808  EF08  F07C         	goto	u1621
  1239  00F80C  EF0A  F07C         	goto	u1620
  1240  00F810                     u1621:
  1241  00F810  EF12  F07C         	goto	l3082
  1242  00F814                     u1620:
  1243  00F814  0E50               	movlw	80
  1244  00F816  641D               	cpfsgt	lcd_8bit_set_position@col^0,c
  1245  00F818  EF10  F07C         	goto	u1631
  1246  00F81C  EF12  F07C         	goto	u1630
  1247  00F820                     u1631:
  1248  00F820  EF16  F07C         	goto	l3084
  1249  00F824                     u1630:
  1250  00F824                     l3082:
  1251                           
  1252                           ;ECU/LCD/ecu_lcd.c: 397:     {;ECU/LCD/ecu_lcd.c: 398:         state = (Std_ReturnType)0
      +                          ;
  1253  00F824  0E00               	movlw	0
  1254  00F826  6E20               	movwf	lcd_8bit_set_position@state^0,c
  1255                           
  1256                           ;ECU/LCD/ecu_lcd.c: 399:     }
  1257  00F828  EF66  F07C         	goto	l3098
  1258  00F82C                     l3084:
  1259                           
  1260                           ;ECU/LCD/ecu_lcd.c: 401:     {;ECU/LCD/ecu_lcd.c: 402:         col--;
  1261  00F82C  061D               	decf	lcd_8bit_set_position@col^0,f,c
  1262                           
  1263                           ;ECU/LCD/ecu_lcd.c: 403:         switch(row)
  1264  00F82E  EF49  F07C         	goto	l3096
  1265  00F832                     l3086:
  1266                           
  1267                           ;ECU/LCD/ecu_lcd.c: 406:                 state &= lcd_8bit_send_command(lcd_8bit, (0x80 
      +                          + col));
  1268  00F832  C01A  F014         	movff	lcd_8bit_set_position@lcd_8bit,lcd_8bit_send_command@lcd_8bit
  1269  00F836  C01B  F015         	movff	lcd_8bit_set_position@lcd_8bit+1,lcd_8bit_send_command@lcd_8bit+1
  1270  00F83A  501D               	movf	lcd_8bit_set_position@col^0,w,c
  1271  00F83C  0F80               	addlw	128
  1272  00F83E  6E16               	movwf	lcd_8bit_send_command@command^0,c
  1273  00F840  EC0F  F078         	call	_lcd_8bit_send_command	;wreg free
  1274  00F844  1620               	andwf	lcd_8bit_set_position@state^0,f,c
  1275                           
  1276                           ;ECU/LCD/ecu_lcd.c: 407:                 break;
  1277  00F846  EF66  F07C         	goto	l3098
  1278  00F84A                     l3088:
  1279                           
  1280                           ;ECU/LCD/ecu_lcd.c: 409:                 state &= lcd_8bit_send_command(lcd_8bit, (0xC0 
      +                          + col));
  1281  00F84A  C01A  F014         	movff	lcd_8bit_set_position@lcd_8bit,lcd_8bit_send_command@lcd_8bit
  1282  00F84E  C01B  F015         	movff	lcd_8bit_set_position@lcd_8bit+1,lcd_8bit_send_command@lcd_8bit+1
  1283  00F852  501D               	movf	lcd_8bit_set_position@col^0,w,c
  1284  00F854  0FC0               	addlw	192
  1285  00F856  6E16               	movwf	lcd_8bit_send_command@command^0,c
  1286  00F858  EC0F  F078         	call	_lcd_8bit_send_command	;wreg free
  1287  00F85C  1620               	andwf	lcd_8bit_set_position@state^0,f,c
  1288                           
  1289                           ;ECU/LCD/ecu_lcd.c: 410:                 break;
  1290  00F85E  EF66  F07C         	goto	l3098
  1291  00F862                     l3090:
  1292                           
  1293                           ;ECU/LCD/ecu_lcd.c: 412:                 state &= lcd_8bit_send_command(lcd_8bit, (0x94 
      +                          + col));
  1294  00F862  C01A  F014         	movff	lcd_8bit_set_position@lcd_8bit,lcd_8bit_send_command@lcd_8bit
  1295  00F866  C01B  F015         	movff	lcd_8bit_set_position@lcd_8bit+1,lcd_8bit_send_command@lcd_8bit+1
  1296  00F86A  501D               	movf	lcd_8bit_set_position@col^0,w,c
  1297  00F86C  0F94               	addlw	148
  1298  00F86E  6E16               	movwf	lcd_8bit_send_command@command^0,c
  1299  00F870  EC0F  F078         	call	_lcd_8bit_send_command	;wreg free
  1300  00F874  1620               	andwf	lcd_8bit_set_position@state^0,f,c
  1301                           
  1302                           ;ECU/LCD/ecu_lcd.c: 413:                 break;
  1303  00F876  EF66  F07C         	goto	l3098
  1304  00F87A                     l3092:
  1305                           
  1306                           ;ECU/LCD/ecu_lcd.c: 415:                 state &= lcd_8bit_send_command(lcd_8bit, (0xD4 
      +                          + col));
  1307  00F87A  C01A  F014         	movff	lcd_8bit_set_position@lcd_8bit,lcd_8bit_send_command@lcd_8bit
  1308  00F87E  C01B  F015         	movff	lcd_8bit_set_position@lcd_8bit+1,lcd_8bit_send_command@lcd_8bit+1
  1309  00F882  501D               	movf	lcd_8bit_set_position@col^0,w,c
  1310  00F884  0FD4               	addlw	212
  1311  00F886  6E16               	movwf	lcd_8bit_send_command@command^0,c
  1312  00F888  EC0F  F078         	call	_lcd_8bit_send_command	;wreg free
  1313  00F88C  1620               	andwf	lcd_8bit_set_position@state^0,f,c
  1314                           
  1315                           ;ECU/LCD/ecu_lcd.c: 416:                 break;
  1316  00F88E  EF66  F07C         	goto	l3098
  1317  00F892                     l3096:
  1318  00F892  501C               	movf	lcd_8bit_set_position@row^0,w,c
  1319  00F894  6E1E               	movwf	??_lcd_8bit_set_position^0,c
  1320  00F896  6A1F               	clrf	(??_lcd_8bit_set_position+1)^0,c
  1321                           
  1322                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1323                           ; Switch size 1, requested type "simple"
  1324                           ; Number of cases is 1, Range of values is 0 to 0
  1325                           ; switch strategies available:
  1326                           ; Name         Instructions Cycles
  1327                           ; simple_byte            4     3 (average)
  1328                           ;	Chosen strategy is simple_byte
  1329  00F898  501F               	movf	(??_lcd_8bit_set_position+1)^0,w,c
  1330  00F89A  0A00               	xorlw	0	; case 0
  1331  00F89C  B4D8               	btfsc	status,2,c
  1332  00F89E  EF53  F07C         	goto	l4122
  1333  00F8A2  EF66  F07C         	goto	l3098
  1334  00F8A6                     l4122:
  1335                           
  1336                           ; Switch size 1, requested type "simple"
  1337                           ; Number of cases is 4, Range of values is 1 to 4
  1338                           ; switch strategies available:
  1339                           ; Name         Instructions Cycles
  1340                           ; simple_byte           13     7 (average)
  1341                           ;	Chosen strategy is simple_byte
  1342  00F8A6  501E               	movf	??_lcd_8bit_set_position^0,w,c
  1343  00F8A8  0A01               	xorlw	1	; case 1
  1344  00F8AA  B4D8               	btfsc	status,2,c
  1345  00F8AC  EF19  F07C         	goto	l3086
  1346  00F8B0  0A03               	xorlw	3	; case 2
  1347  00F8B2  B4D8               	btfsc	status,2,c
  1348  00F8B4  EF25  F07C         	goto	l3088
  1349  00F8B8  0A01               	xorlw	1	; case 3
  1350  00F8BA  B4D8               	btfsc	status,2,c
  1351  00F8BC  EF31  F07C         	goto	l3090
  1352  00F8C0  0A07               	xorlw	7	; case 4
  1353  00F8C2  B4D8               	btfsc	status,2,c
  1354  00F8C4  EF3D  F07C         	goto	l3092
  1355  00F8C8  EF66  F07C         	goto	l3098
  1356  00F8CC                     l3098:
  1357                           
  1358                           ;ECU/LCD/ecu_lcd.c: 419:     return state;
  1359  00F8CC  5020               	movf	lcd_8bit_set_position@state^0,w,c
  1360  00F8CE  0012               	return		;funcret
  1361  00F8D0                     __end_of_lcd_8bit_set_position:
  1362                           	callstack 0
  1363                           
  1364 ;; *************** function _lcd_8bit_send_char_data *****************
  1365 ;; Defined at:
  1366 ;;		line 308 in file "ECU/LCD/ecu_lcd.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  lcd_8bit        2   19[COMRAM] PTR const struct .
  1369 ;;		 -> lcd_8bit(10), 
  1370 ;;  ch              1   21[COMRAM] const unsigned char 
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;  rs_pin          1   24[COMRAM] struct .
  1373 ;;  state           1   23[COMRAM] unsigned char 
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      unsigned char 
  1376 ;; Registers used:
  1377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1383 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1384 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;Total ram usage:        6 bytes
  1388 ;; Hardware stack levels used: 1
  1389 ;; Hardware stack levels required when called: 2
  1390 ;; This function calls:
  1391 ;;		_gpio_pin_write_logic
  1392 ;;		_lcd_8bit_send_enable_signal
  1393 ;;		_lcd_send_8bits
  1394 ;; This function is called by:
  1395 ;;		_lcd_8bit_send_char_at_position
  1396 ;;		_lcd_8bit_send_custome_char
  1397 ;;		_lcd_8bit_send_string_data
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text4
  1402  00F0B4                     __ptext4:
  1403                           	callstack 0
  1404  00F0B4                     _lcd_8bit_send_char_data:
  1405                           	callstack 27
  1406  00F0B4                     
  1407                           ;ECU/LCD/ecu_lcd.c: 308: Std_ReturnType lcd_8bit_send_char_data(const lcd_8bit_t* lcd_8b
      +                          it, const uint8 ch);ECU/LCD/ecu_lcd.c: 309: {;ECU/LCD/ecu_lcd.c: 310:     Std_ReturnType
      +                           state = (Std_ReturnType)1;
  1408  00F0B4  0E01               	movlw	1
  1409  00F0B6  6E18               	movwf	lcd_8bit_send_char_data@state^0,c
  1410  00F0B8                     
  1411                           ;ECU/LCD/ecu_lcd.c: 311:     if(lcd_8bit == ((void*)0))
  1412  00F0B8  5014               	movf	lcd_8bit_send_char_data@lcd_8bit^0,w,c
  1413  00F0BA  1015               	iorwf	(lcd_8bit_send_char_data@lcd_8bit+1)^0,w,c
  1414  00F0BC  A4D8               	btfss	status,2,c
  1415  00F0BE  EF63  F078         	goto	u1601
  1416  00F0C2  EF65  F078         	goto	u1600
  1417  00F0C6                     u1601:
  1418  00F0C6  EF69  F078         	goto	l559
  1419  00F0CA                     u1600:
  1420  00F0CA                     
  1421                           ;ECU/LCD/ecu_lcd.c: 312:     {;ECU/LCD/ecu_lcd.c: 313:         state = (Std_ReturnType)0
      +                          ;
  1422  00F0CA  0E00               	movlw	0
  1423  00F0CC  6E18               	movwf	lcd_8bit_send_char_data@state^0,c
  1424                           
  1425                           ;ECU/LCD/ecu_lcd.c: 314:     }
  1426  00F0CE  EFA3  F078         	goto	l3070
  1427  00F0D2                     l559:
  1428                           
  1429                           ;ECU/LCD/ecu_lcd.c: 316:     {;ECU/LCD/ecu_lcd.c: 317:         pin_config_t rs_pin={.por
      +                          t=lcd_8bit->lcd_rs_pin.port,.pin=lcd_8bit->lcd_rs_pin.pin,.direction=GPIO_OUTPUT,.logic=
      +                          GPIO_LOW};
  1430  00F0D2  C03D  F019         	movff	lcd_8bit_send_char_data@F3055,lcd_8bit_send_char_data@rs_pin
  1431  00F0D6  C014  FFD9         	movff	lcd_8bit_send_char_data@lcd_8bit,fsr2l
  1432  00F0DA  C015  FFDA         	movff	lcd_8bit_send_char_data@lcd_8bit+1,fsr2h
  1433  00F0DE  50DF               	movf	223,w,c
  1434  00F0E0  0B07               	andlw	7
  1435  00F0E2  6E17               	movwf	??_lcd_8bit_send_char_data^0,c
  1436  00F0E4  5019               	movf	lcd_8bit_send_char_data@rs_pin^0,w,c
  1437  00F0E6  1817               	xorwf	??_lcd_8bit_send_char_data^0,w,c
  1438  00F0E8  0BF8               	andlw	-8
  1439  00F0EA  1817               	xorwf	??_lcd_8bit_send_char_data^0,w,c
  1440  00F0EC  6E19               	movwf	lcd_8bit_send_char_data@rs_pin^0,c
  1441  00F0EE  C014  FFD9         	movff	lcd_8bit_send_char_data@lcd_8bit,fsr2l
  1442  00F0F2  C015  FFDA         	movff	lcd_8bit_send_char_data@lcd_8bit+1,fsr2h
  1443  00F0F6  30DF               	rrcf	223,w,c
  1444  00F0F8  32E8               	rrcf	wreg,f,c
  1445  00F0FA  32E8               	rrcf	wreg,f,c
  1446  00F0FC  0B07               	andlw	7
  1447  00F0FE  6E17               	movwf	??_lcd_8bit_send_char_data^0,c
  1448  00F100  4617               	rlncf	??_lcd_8bit_send_char_data^0,f,c
  1449  00F102  4617               	rlncf	??_lcd_8bit_send_char_data^0,f,c
  1450  00F104  4617               	rlncf	??_lcd_8bit_send_char_data^0,f,c
  1451  00F106  5019               	movf	lcd_8bit_send_char_data@rs_pin^0,w,c
  1452  00F108  1817               	xorwf	??_lcd_8bit_send_char_data^0,w,c
  1453  00F10A  0BC7               	andlw	-57
  1454  00F10C  1817               	xorwf	??_lcd_8bit_send_char_data^0,w,c
  1455  00F10E  6E19               	movwf	lcd_8bit_send_char_data@rs_pin^0,c
  1456  00F110  9C19               	bcf	lcd_8bit_send_char_data@rs_pin^0,6,c
  1457  00F112  9E19               	bcf	lcd_8bit_send_char_data@rs_pin^0,7,c
  1458  00F114                     
  1459                           ;ECU/LCD/ecu_lcd.c: 318:         state &= gpio_pin_write_logic(&rs_pin,GPIO_HIGH);
  1460  00F114  0E19               	movlw	low lcd_8bit_send_char_data@rs_pin
  1461  00F116  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1462  00F118  0E00               	movlw	high lcd_8bit_send_char_data@rs_pin
  1463  00F11A  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1464  00F11C  0E01               	movlw	1
  1465  00F11E  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1466  00F120  EC68  F07C         	call	_gpio_pin_write_logic	;wreg free
  1467  00F124  1618               	andwf	lcd_8bit_send_char_data@state^0,f,c
  1468  00F126                     
  1469                           ;ECU/LCD/ecu_lcd.c: 320:         state &= lcd_send_8bits(lcd_8bit,ch);
  1470  00F126  C014  F00B         	movff	lcd_8bit_send_char_data@lcd_8bit,lcd_send_8bits@lcd_8bit
  1471  00F12A  C015  F00C         	movff	lcd_8bit_send_char_data@lcd_8bit+1,lcd_send_8bits@lcd_8bit+1
  1472  00F12E  C016  F00D         	movff	lcd_8bit_send_char_data@ch,lcd_send_8bits@data_or_command
  1473  00F132  ECBE  F07A         	call	_lcd_send_8bits	;wreg free
  1474  00F136  1618               	andwf	lcd_8bit_send_char_data@state^0,f,c
  1475  00F138                     
  1476                           ;ECU/LCD/ecu_lcd.c: 321:         state &= lcd_8bit_send_enable_signal(lcd_8bit);
  1477  00F138  C014  F00B         	movff	lcd_8bit_send_char_data@lcd_8bit,lcd_8bit_send_enable_signal@lcd_8bit
  1478  00F13C  C015  F00C         	movff	lcd_8bit_send_char_data@lcd_8bit+1,lcd_8bit_send_enable_signal@lcd_8bit+1
  1479  00F140  ECF8  F078         	call	_lcd_8bit_send_enable_signal	;wreg free
  1480  00F144  1618               	andwf	lcd_8bit_send_char_data@state^0,f,c
  1481  00F146                     l3070:
  1482                           
  1483                           ;ECU/LCD/ecu_lcd.c: 323:     return state;
  1484  00F146  5018               	movf	lcd_8bit_send_char_data@state^0,w,c
  1485  00F148  0012               	return		;funcret
  1486  00F14A                     __end_of_lcd_8bit_send_char_data:
  1487                           	callstack 0
  1488                           
  1489 ;; *************** function _lcd_4bit_send_custome_char *****************
  1490 ;; Defined at:
  1491 ;;		line 165 in file "ECU/LCD/ecu_lcd.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  lcd_4bit        2   38[COMRAM] PTR const struct .
  1494 ;;		 -> lcd_4bit(6), 
  1495 ;;  row             1   40[COMRAM] const unsigned char 
  1496 ;;  col             1   41[COMRAM] const unsigned char 
  1497 ;;  str             2   42[COMRAM] PTR const unsigned char 
  1498 ;;		 -> customChars(56), 
  1499 ;;  mem_pos         1   44[COMRAM] unsigned char 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  local_index     1   46[COMRAM] unsigned char 
  1502 ;;  state           1   45[COMRAM] unsigned char 
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      unsigned char 
  1505 ;; Registers used:
  1506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1512 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1513 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1515 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1516 ;;Total ram usage:        9 bytes
  1517 ;; Hardware stack levels used: 1
  1518 ;; Hardware stack levels required when called: 5
  1519 ;; This function calls:
  1520 ;;		_lcd_4bit_send_char_at_position
  1521 ;;		_lcd_4bit_send_char_data
  1522 ;;		_lcd_4bit_send_command
  1523 ;; This function is called by:
  1524 ;;		_main
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           	psect	text5
  1529  00EE86                     __ptext5:
  1530                           	callstack 0
  1531  00EE86                     _lcd_4bit_send_custome_char:
  1532                           	callstack 25
  1533  00EE86                     
  1534                           ;ECU/LCD/ecu_lcd.c: 165: Std_ReturnType lcd_4bit_send_custome_char(const lcd_4bit_t* lcd
      +                          _4bit, const uint8 row, const uint8 col, const char* str, uint8 mem_pos);ECU/LCD/ecu_lcd
      +                          .c: 166: {;ECU/LCD/ecu_lcd.c: 167:     Std_ReturnType state = (Std_ReturnType)1;
  1535  00EE86  0E01               	movlw	1
  1536  00EE88  6E2E               	movwf	lcd_4bit_send_custome_char@state^0,c
  1537  00EE8A                     
  1538                           ;ECU/LCD/ecu_lcd.c: 168:     if(lcd_4bit == ((void*)0))
  1539  00EE8A  5027               	movf	lcd_4bit_send_custome_char@lcd_4bit^0,w,c
  1540  00EE8C  1028               	iorwf	(lcd_4bit_send_custome_char@lcd_4bit+1)^0,w,c
  1541  00EE8E  A4D8               	btfss	status,2,c
  1542  00EE90  EF4C  F077         	goto	u1851
  1543  00EE94  EF4E  F077         	goto	u1850
  1544  00EE98                     u1851:
  1545  00EE98  EF50  F077         	goto	l3354
  1546  00EE9C                     u1850:
  1547  00EE9C                     
  1548                           ;ECU/LCD/ecu_lcd.c: 171:     }
  1549  00EE9C  EF83  F077         	goto	l507
  1550  00EEA0                     l3354:
  1551                           
  1552                           ;ECU/LCD/ecu_lcd.c: 173:     {;ECU/LCD/ecu_lcd.c: 174:         state &= lcd_4bit_send_co
      +                          mmand(lcd_4bit, 0x40 + (mem_pos * 8));
  1553  00EEA0  C027  F014         	movff	lcd_4bit_send_custome_char@lcd_4bit,lcd_4bit_send_command@lcd_4bit
  1554  00EEA4  C028  F015         	movff	lcd_4bit_send_custome_char@lcd_4bit+1,lcd_4bit_send_command@lcd_4bit+1
  1555  00EEA8  502D               	movf	lcd_4bit_send_custome_char@mem_pos^0,w,c
  1556  00EEAA  0D08               	mullw	8
  1557  00EEAC  50F3               	movf	243,w,c
  1558  00EEAE  0F40               	addlw	64
  1559  00EEB0  6E16               	movwf	lcd_4bit_send_command@command^0,c
  1560  00EEB2  ECA5  F079         	call	_lcd_4bit_send_command	;wreg free
  1561  00EEB6  162E               	andwf	lcd_4bit_send_custome_char@state^0,f,c
  1562  00EEB8                     
  1563                           ;ECU/LCD/ecu_lcd.c: 175:         for(uint8 local_index=0; local_index<8; local_index++)
  1564  00EEB8  0E00               	movlw	0
  1565  00EEBA  6E2F               	movwf	lcd_4bit_send_custome_char@local_index^0,c
  1566  00EEBC                     l3362:
  1567                           
  1568                           ;ECU/LCD/ecu_lcd.c: 176:         {;ECU/LCD/ecu_lcd.c: 177:             state &= lcd_4bit
      +                          _send_char_data(lcd_4bit, str[local_index]);
  1569  00EEBC  C027  F014         	movff	lcd_4bit_send_custome_char@lcd_4bit,lcd_4bit_send_char_data@lcd_4bit
  1570  00EEC0  C028  F015         	movff	lcd_4bit_send_custome_char@lcd_4bit+1,lcd_4bit_send_char_data@lcd_4bit+1
  1571  00EEC4  502F               	movf	lcd_4bit_send_custome_char@local_index^0,w,c
  1572  00EEC6  242B               	addwf	lcd_4bit_send_custome_char@str^0,w,c
  1573  00EEC8  6ED9               	movwf	fsr2l,c
  1574  00EECA  0E00               	movlw	0
  1575  00EECC  202C               	addwfc	(lcd_4bit_send_custome_char@str+1)^0,w,c
  1576  00EECE  6EDA               	movwf	fsr2h,c
  1577  00EED0  50DF               	movf	indf2,w,c
  1578  00EED2  6E16               	movwf	lcd_4bit_send_char_data@ch^0,c
  1579  00EED4  EC01  F07A         	call	_lcd_4bit_send_char_data	;wreg free
  1580  00EED8  162E               	andwf	lcd_4bit_send_custome_char@state^0,f,c
  1581  00EEDA                     
  1582                           ;ECU/LCD/ecu_lcd.c: 178:         }
  1583  00EEDA  2A2F               	incf	lcd_4bit_send_custome_char@local_index^0,f,c
  1584  00EEDC  0E07               	movlw	7
  1585  00EEDE  642F               	cpfsgt	lcd_4bit_send_custome_char@local_index^0,c
  1586  00EEE0  EF74  F077         	goto	u1861
  1587  00EEE4  EF76  F077         	goto	u1860
  1588  00EEE8                     u1861:
  1589  00EEE8  EF5E  F077         	goto	l3362
  1590  00EEEC                     u1860:
  1591  00EEEC                     
  1592                           ;ECU/LCD/ecu_lcd.c: 179:         state &= lcd_4bit_send_char_at_position(lcd_4bit, row, 
      +                          col, mem_pos);
  1593  00EEEC  C027  F021         	movff	lcd_4bit_send_custome_char@lcd_4bit,lcd_4bit_send_char_at_position@lcd_4bit
  1594  00EEF0  C028  F022         	movff	lcd_4bit_send_custome_char@lcd_4bit+1,lcd_4bit_send_char_at_position@lcd_4bit+1
  1595  00EEF4  C029  F023         	movff	lcd_4bit_send_custome_char@row,lcd_4bit_send_char_at_position@row
  1596  00EEF8  C02A  F024         	movff	lcd_4bit_send_custome_char@col,lcd_4bit_send_char_at_position@col
  1597  00EEFC  C02D  F025         	movff	lcd_4bit_send_custome_char@mem_pos,lcd_4bit_send_char_at_position@ch
  1598  00EF00  ECD9  F076         	call	_lcd_4bit_send_char_at_position	;wreg free
  1599  00EF04  162E               	andwf	lcd_4bit_send_custome_char@state^0,f,c
  1600  00EF06                     l507:
  1601  00EF06  0012               	return		;funcret
  1602  00EF08                     __end_of_lcd_4bit_send_custome_char:
  1603                           	callstack 0
  1604                           
  1605 ;; *************** function _lcd_4bit_send_char_at_position *****************
  1606 ;; Defined at:
  1607 ;;		line 117 in file "ECU/LCD/ecu_lcd.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  lcd_4bit        2   32[COMRAM] PTR const struct .
  1610 ;;		 -> lcd_4bit(6), 
  1611 ;;  row             1   34[COMRAM] const unsigned char 
  1612 ;;  col             1   35[COMRAM] const unsigned char 
  1613 ;;  ch              1   36[COMRAM] const unsigned char 
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;  state           1   37[COMRAM] unsigned char 
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      unsigned char 
  1618 ;; Registers used:
  1619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1625 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1629 ;;Total ram usage:        6 bytes
  1630 ;; Hardware stack levels used: 1
  1631 ;; Hardware stack levels required when called: 4
  1632 ;; This function calls:
  1633 ;;		_lcd_4bit_send_char_data
  1634 ;;		_lcd_4bit_set_position
  1635 ;; This function is called by:
  1636 ;;		_main
  1637 ;;		_lcd_4bit_send_custome_char
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text6
  1642  00EDB2                     __ptext6:
  1643                           	callstack 0
  1644  00EDB2                     _lcd_4bit_send_char_at_position:
  1645                           	callstack 25
  1646  00EDB2                     
  1647                           ;ECU/LCD/ecu_lcd.c: 117: Std_ReturnType lcd_4bit_send_char_at_position(const lcd_4bit_t*
      +                           lcd_4bit, const uint8 row, const uint8 col, const uint8 ch);ECU/LCD/ecu_lcd.c: 118: {;E
      +                          CU/LCD/ecu_lcd.c: 119:     Std_ReturnType state = (Std_ReturnType)1;
  1648  00EDB2  0E01               	movlw	1
  1649  00EDB4  6E26               	movwf	lcd_4bit_send_char_at_position@state^0,c
  1650  00EDB6                     
  1651                           ;ECU/LCD/ecu_lcd.c: 120:     if(lcd_4bit == ((void*)0) || row > 4 || col > 80)
  1652  00EDB6  5021               	movf	lcd_4bit_send_char_at_position@lcd_4bit^0,w,c
  1653  00EDB8  1022               	iorwf	(lcd_4bit_send_char_at_position@lcd_4bit+1)^0,w,c
  1654  00EDBA  B4D8               	btfsc	status,2,c
  1655  00EDBC  EFE2  F076         	goto	u1641
  1656  00EDC0  EFE4  F076         	goto	u1640
  1657  00EDC4                     u1641:
  1658  00EDC4  EFF4  F076         	goto	l3114
  1659  00EDC8                     u1640:
  1660  00EDC8  0E05               	movlw	5
  1661  00EDCA  6023               	cpfslt	lcd_4bit_send_char_at_position@row^0,c
  1662  00EDCC  EFEA  F076         	goto	u1651
  1663  00EDD0  EFEC  F076         	goto	u1650
  1664  00EDD4                     u1651:
  1665  00EDD4  EFF4  F076         	goto	l3114
  1666  00EDD8                     u1650:
  1667  00EDD8  0E50               	movlw	80
  1668  00EDDA  6424               	cpfsgt	lcd_4bit_send_char_at_position@col^0,c
  1669  00EDDC  EFF2  F076         	goto	u1661
  1670  00EDE0  EFF4  F076         	goto	u1660
  1671  00EDE4                     u1661:
  1672  00EDE4  EFF8  F076         	goto	l3116
  1673  00EDE8                     u1660:
  1674  00EDE8                     l3114:
  1675                           
  1676                           ;ECU/LCD/ecu_lcd.c: 121:     {;ECU/LCD/ecu_lcd.c: 122:         state = (Std_ReturnType)0
      +                          ;
  1677  00EDE8  0E00               	movlw	0
  1678  00EDEA  6E26               	movwf	lcd_4bit_send_char_at_position@state^0,c
  1679                           
  1680                           ;ECU/LCD/ecu_lcd.c: 123:     }
  1681  00EDEC  EF0C  F077         	goto	l3118
  1682  00EDF0                     l3116:
  1683                           
  1684                           ;ECU/LCD/ecu_lcd.c: 125:     {;ECU/LCD/ecu_lcd.c: 126:         state &= lcd_4bit_set_pos
      +                          ition(lcd_4bit,row,col);
  1685  00EDF0  C021  F01A         	movff	lcd_4bit_send_char_at_position@lcd_4bit,lcd_4bit_set_position@lcd_4bit
  1686  00EDF4  C022  F01B         	movff	lcd_4bit_send_char_at_position@lcd_4bit+1,lcd_4bit_set_position@lcd_4bit+1
  1687  00EDF8  C023  F01C         	movff	lcd_4bit_send_char_at_position@row,lcd_4bit_set_position@row
  1688  00EDFC  C024  F01D         	movff	lcd_4bit_send_char_at_position@col,lcd_4bit_set_position@col
  1689  00EE00  EC86  F07B         	call	_lcd_4bit_set_position	;wreg free
  1690  00EE04  1626               	andwf	lcd_4bit_send_char_at_position@state^0,f,c
  1691                           
  1692                           ;ECU/LCD/ecu_lcd.c: 127:         state &= lcd_4bit_send_char_data(lcd_4bit,ch);
  1693  00EE06  C021  F014         	movff	lcd_4bit_send_char_at_position@lcd_4bit,lcd_4bit_send_char_data@lcd_4bit
  1694  00EE0A  C022  F015         	movff	lcd_4bit_send_char_at_position@lcd_4bit+1,lcd_4bit_send_char_data@lcd_4bit+1
  1695  00EE0E  C025  F016         	movff	lcd_4bit_send_char_at_position@ch,lcd_4bit_send_char_data@ch
  1696  00EE12  EC01  F07A         	call	_lcd_4bit_send_char_data	;wreg free
  1697  00EE16  1626               	andwf	lcd_4bit_send_char_at_position@state^0,f,c
  1698  00EE18                     l3118:
  1699                           
  1700                           ;ECU/LCD/ecu_lcd.c: 129:     return state;
  1701  00EE18  5026               	movf	lcd_4bit_send_char_at_position@state^0,w,c
  1702  00EE1A  0012               	return		;funcret
  1703  00EE1C                     __end_of_lcd_4bit_send_char_at_position:
  1704                           	callstack 0
  1705                           
  1706 ;; *************** function _lcd_4bit_set_position *****************
  1707 ;; Defined at:
  1708 ;;		line 184 in file "ECU/LCD/ecu_lcd.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  lcd_4bit        2   25[COMRAM] PTR const struct .
  1711 ;;		 -> lcd_4bit(6), 
  1712 ;;  row             1   27[COMRAM] unsigned char 
  1713 ;;  col             1   28[COMRAM] unsigned char 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  state           1   31[COMRAM] unsigned char 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      unsigned char 
  1718 ;; Registers used:
  1719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1725 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1726 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;Total ram usage:        7 bytes
  1730 ;; Hardware stack levels used: 1
  1731 ;; Hardware stack levels required when called: 3
  1732 ;; This function calls:
  1733 ;;		_lcd_4bit_send_command
  1734 ;; This function is called by:
  1735 ;;		_lcd_4bit_send_char_at_position
  1736 ;;		_lcd_4bit_send_string_at_position
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text7
  1741  00F70C                     __ptext7:
  1742                           	callstack 0
  1743  00F70C                     _lcd_4bit_set_position:
  1744                           	callstack 25
  1745  00F70C                     
  1746                           ;ECU/LCD/ecu_lcd.c: 184: Std_ReturnType lcd_4bit_set_position(const lcd_4bit_t* lcd_4bit
      +                          , uint8 row, uint8 col);ECU/LCD/ecu_lcd.c: 185: {;ECU/LCD/ecu_lcd.c: 186:     Std_Return
      +                          Type state = (Std_ReturnType)1;
  1747  00F70C  0E01               	movlw	1
  1748  00F70E  6E20               	movwf	lcd_4bit_set_position@state^0,c
  1749  00F710                     
  1750                           ;ECU/LCD/ecu_lcd.c: 187:     if(lcd_4bit == ((void*)0) || row > 4 || col > 80)
  1751  00F710  501A               	movf	lcd_4bit_set_position@lcd_4bit^0,w,c
  1752  00F712  101B               	iorwf	(lcd_4bit_set_position@lcd_4bit+1)^0,w,c
  1753  00F714  B4D8               	btfsc	status,2,c
  1754  00F716  EF8F  F07B         	goto	u1571
  1755  00F71A  EF91  F07B         	goto	u1570
  1756  00F71E                     u1571:
  1757  00F71E  EFA1  F07B         	goto	l3028
  1758  00F722                     u1570:
  1759  00F722  0E05               	movlw	5
  1760  00F724  601C               	cpfslt	lcd_4bit_set_position@row^0,c
  1761  00F726  EF97  F07B         	goto	u1581
  1762  00F72A  EF99  F07B         	goto	u1580
  1763  00F72E                     u1581:
  1764  00F72E  EFA1  F07B         	goto	l3028
  1765  00F732                     u1580:
  1766  00F732  0E50               	movlw	80
  1767  00F734  641D               	cpfsgt	lcd_4bit_set_position@col^0,c
  1768  00F736  EF9F  F07B         	goto	u1591
  1769  00F73A  EFA1  F07B         	goto	u1590
  1770  00F73E                     u1591:
  1771  00F73E  EFA5  F07B         	goto	l3030
  1772  00F742                     u1590:
  1773  00F742                     l3028:
  1774                           
  1775                           ;ECU/LCD/ecu_lcd.c: 188:     {;ECU/LCD/ecu_lcd.c: 189:         state = (Std_ReturnType)0
      +                          ;
  1776  00F742  0E00               	movlw	0
  1777  00F744  6E20               	movwf	lcd_4bit_set_position@state^0,c
  1778                           
  1779                           ;ECU/LCD/ecu_lcd.c: 190:     }
  1780  00F746  EFF5  F07B         	goto	l3044
  1781  00F74A                     l3030:
  1782                           
  1783                           ;ECU/LCD/ecu_lcd.c: 192:     {;ECU/LCD/ecu_lcd.c: 193:         col--;
  1784  00F74A  061D               	decf	lcd_4bit_set_position@col^0,f,c
  1785                           
  1786                           ;ECU/LCD/ecu_lcd.c: 194:         switch(row)
  1787  00F74C  EFD8  F07B         	goto	l3042
  1788  00F750                     l3032:
  1789                           
  1790                           ;ECU/LCD/ecu_lcd.c: 197:                 state &= lcd_4bit_send_command(lcd_4bit, (0x80 
      +                          + col));
  1791  00F750  C01A  F014         	movff	lcd_4bit_set_position@lcd_4bit,lcd_4bit_send_command@lcd_4bit
  1792  00F754  C01B  F015         	movff	lcd_4bit_set_position@lcd_4bit+1,lcd_4bit_send_command@lcd_4bit+1
  1793  00F758  501D               	movf	lcd_4bit_set_position@col^0,w,c
  1794  00F75A  0F80               	addlw	128
  1795  00F75C  6E16               	movwf	lcd_4bit_send_command@command^0,c
  1796  00F75E  ECA5  F079         	call	_lcd_4bit_send_command	;wreg free
  1797  00F762  1620               	andwf	lcd_4bit_set_position@state^0,f,c
  1798                           
  1799                           ;ECU/LCD/ecu_lcd.c: 198:                 break;
  1800  00F764  EFF5  F07B         	goto	l3044
  1801  00F768                     l3034:
  1802                           
  1803                           ;ECU/LCD/ecu_lcd.c: 200:                 state &= lcd_4bit_send_command(lcd_4bit, (0xC0 
      +                          + col));
  1804  00F768  C01A  F014         	movff	lcd_4bit_set_position@lcd_4bit,lcd_4bit_send_command@lcd_4bit
  1805  00F76C  C01B  F015         	movff	lcd_4bit_set_position@lcd_4bit+1,lcd_4bit_send_command@lcd_4bit+1
  1806  00F770  501D               	movf	lcd_4bit_set_position@col^0,w,c
  1807  00F772  0FC0               	addlw	192
  1808  00F774  6E16               	movwf	lcd_4bit_send_command@command^0,c
  1809  00F776  ECA5  F079         	call	_lcd_4bit_send_command	;wreg free
  1810  00F77A  1620               	andwf	lcd_4bit_set_position@state^0,f,c
  1811                           
  1812                           ;ECU/LCD/ecu_lcd.c: 201:                 break;
  1813  00F77C  EFF5  F07B         	goto	l3044
  1814  00F780                     l3036:
  1815                           
  1816                           ;ECU/LCD/ecu_lcd.c: 203:                 state &= lcd_4bit_send_command(lcd_4bit, (0x94 
      +                          + col));
  1817  00F780  C01A  F014         	movff	lcd_4bit_set_position@lcd_4bit,lcd_4bit_send_command@lcd_4bit
  1818  00F784  C01B  F015         	movff	lcd_4bit_set_position@lcd_4bit+1,lcd_4bit_send_command@lcd_4bit+1
  1819  00F788  501D               	movf	lcd_4bit_set_position@col^0,w,c
  1820  00F78A  0F94               	addlw	148
  1821  00F78C  6E16               	movwf	lcd_4bit_send_command@command^0,c
  1822  00F78E  ECA5  F079         	call	_lcd_4bit_send_command	;wreg free
  1823  00F792  1620               	andwf	lcd_4bit_set_position@state^0,f,c
  1824                           
  1825                           ;ECU/LCD/ecu_lcd.c: 204:                 break;
  1826  00F794  EFF5  F07B         	goto	l3044
  1827  00F798                     l3038:
  1828                           
  1829                           ;ECU/LCD/ecu_lcd.c: 206:                 state &= lcd_4bit_send_command(lcd_4bit, (0xD4 
      +                          + col));
  1830  00F798  C01A  F014         	movff	lcd_4bit_set_position@lcd_4bit,lcd_4bit_send_command@lcd_4bit
  1831  00F79C  C01B  F015         	movff	lcd_4bit_set_position@lcd_4bit+1,lcd_4bit_send_command@lcd_4bit+1
  1832  00F7A0  501D               	movf	lcd_4bit_set_position@col^0,w,c
  1833  00F7A2  0FD4               	addlw	212
  1834  00F7A4  6E16               	movwf	lcd_4bit_send_command@command^0,c
  1835  00F7A6  ECA5  F079         	call	_lcd_4bit_send_command	;wreg free
  1836  00F7AA  1620               	andwf	lcd_4bit_set_position@state^0,f,c
  1837                           
  1838                           ;ECU/LCD/ecu_lcd.c: 207:                 break;
  1839  00F7AC  EFF5  F07B         	goto	l3044
  1840  00F7B0                     l3042:
  1841  00F7B0  501C               	movf	lcd_4bit_set_position@row^0,w,c
  1842  00F7B2  6E1E               	movwf	??_lcd_4bit_set_position^0,c
  1843  00F7B4  6A1F               	clrf	(??_lcd_4bit_set_position+1)^0,c
  1844                           
  1845                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1846                           ; Switch size 1, requested type "simple"
  1847                           ; Number of cases is 1, Range of values is 0 to 0
  1848                           ; switch strategies available:
  1849                           ; Name         Instructions Cycles
  1850                           ; simple_byte            4     3 (average)
  1851                           ;	Chosen strategy is simple_byte
  1852  00F7B6  501F               	movf	(??_lcd_4bit_set_position+1)^0,w,c
  1853  00F7B8  0A00               	xorlw	0	; case 0
  1854  00F7BA  B4D8               	btfsc	status,2,c
  1855  00F7BC  EFE2  F07B         	goto	l4124
  1856  00F7C0  EFF5  F07B         	goto	l3044
  1857  00F7C4                     l4124:
  1858                           
  1859                           ; Switch size 1, requested type "simple"
  1860                           ; Number of cases is 4, Range of values is 1 to 4
  1861                           ; switch strategies available:
  1862                           ; Name         Instructions Cycles
  1863                           ; simple_byte           13     7 (average)
  1864                           ;	Chosen strategy is simple_byte
  1865  00F7C4  501E               	movf	??_lcd_4bit_set_position^0,w,c
  1866  00F7C6  0A01               	xorlw	1	; case 1
  1867  00F7C8  B4D8               	btfsc	status,2,c
  1868  00F7CA  EFA8  F07B         	goto	l3032
  1869  00F7CE  0A03               	xorlw	3	; case 2
  1870  00F7D0  B4D8               	btfsc	status,2,c
  1871  00F7D2  EFB4  F07B         	goto	l3034
  1872  00F7D6  0A01               	xorlw	1	; case 3
  1873  00F7D8  B4D8               	btfsc	status,2,c
  1874  00F7DA  EFC0  F07B         	goto	l3036
  1875  00F7DE  0A07               	xorlw	7	; case 4
  1876  00F7E0  B4D8               	btfsc	status,2,c
  1877  00F7E2  EFCC  F07B         	goto	l3038
  1878  00F7E6  EFF5  F07B         	goto	l3044
  1879  00F7EA                     l3044:
  1880                           
  1881                           ;ECU/LCD/ecu_lcd.c: 210:     return state;
  1882  00F7EA  5020               	movf	lcd_4bit_set_position@state^0,w,c
  1883  00F7EC  0012               	return		;funcret
  1884  00F7EE                     __end_of_lcd_4bit_set_position:
  1885                           	callstack 0
  1886                           
  1887 ;; *************** function _lcd_4bit_send_char_data *****************
  1888 ;; Defined at:
  1889 ;;		line 97 in file "ECU/LCD/ecu_lcd.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;  lcd_4bit        2   19[COMRAM] PTR const struct .
  1892 ;;		 -> lcd_4bit(6), 
  1893 ;;  ch              1   21[COMRAM] const unsigned char 
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;  rs_pin          1   24[COMRAM] struct .
  1896 ;;  state           1   23[COMRAM] unsigned char 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      unsigned char 
  1899 ;; Registers used:
  1900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1906 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1908 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1909 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1910 ;;Total ram usage:        6 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; Hardware stack levels required when called: 2
  1913 ;; This function calls:
  1914 ;;		_gpio_pin_write_logic
  1915 ;;		_lcd_4bit_send_enable_signal
  1916 ;;		_lcd_send_4bits
  1917 ;; This function is called by:
  1918 ;;		_lcd_4bit_send_char_at_position
  1919 ;;		_lcd_4bit_send_custome_char
  1920 ;;		_lcd_4bit_send_string_data
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           	psect	text8
  1925  00F402                     __ptext8:
  1926                           	callstack 0
  1927  00F402                     _lcd_4bit_send_char_data:
  1928                           	callstack 27
  1929  00F402                     
  1930                           ;ECU/LCD/ecu_lcd.c: 97: Std_ReturnType lcd_4bit_send_char_data(const lcd_4bit_t* lcd_4bi
      +                          t, const uint8 ch);ECU/LCD/ecu_lcd.c: 98: {;ECU/LCD/ecu_lcd.c: 99:     Std_ReturnType st
      +                          ate = (Std_ReturnType)1;
  1931  00F402  0E01               	movlw	1
  1932  00F404  6E18               	movwf	lcd_4bit_send_char_data@state^0,c
  1933  00F406                     
  1934                           ;ECU/LCD/ecu_lcd.c: 100:     if(lcd_4bit == ((void*)0))
  1935  00F406  5014               	movf	lcd_4bit_send_char_data@lcd_4bit^0,w,c
  1936  00F408  1015               	iorwf	(lcd_4bit_send_char_data@lcd_4bit+1)^0,w,c
  1937  00F40A  A4D8               	btfss	status,2,c
  1938  00F40C  EF0A  F07A         	goto	u1561
  1939  00F410  EF0C  F07A         	goto	u1560
  1940  00F414                     u1561:
  1941  00F414  EF10  F07A         	goto	l472
  1942  00F418                     u1560:
  1943  00F418                     
  1944                           ;ECU/LCD/ecu_lcd.c: 101:     {;ECU/LCD/ecu_lcd.c: 102:         state = (Std_ReturnType)0
      +                          ;
  1945  00F418  0E00               	movlw	0
  1946  00F41A  6E18               	movwf	lcd_4bit_send_char_data@state^0,c
  1947                           
  1948                           ;ECU/LCD/ecu_lcd.c: 103:     }
  1949  00F41C  EF5B  F07A         	goto	l3016
  1950  00F420                     l472:
  1951                           
  1952                           ;ECU/LCD/ecu_lcd.c: 105:     {;ECU/LCD/ecu_lcd.c: 106:         pin_config_t rs_pin={.por
      +                          t=lcd_4bit->lcd_rs_pin.port,.pin=lcd_4bit->lcd_rs_pin.pin,.direction=GPIO_OUTPUT,.logic=
      +                          GPIO_LOW};
  1953  00F420  C042  F019         	movff	lcd_4bit_send_char_data@F2990,lcd_4bit_send_char_data@rs_pin
  1954  00F424  C014  FFD9         	movff	lcd_4bit_send_char_data@lcd_4bit,fsr2l
  1955  00F428  C015  FFDA         	movff	lcd_4bit_send_char_data@lcd_4bit+1,fsr2h
  1956  00F42C  50DF               	movf	223,w,c
  1957  00F42E  0B07               	andlw	7
  1958  00F430  6E17               	movwf	??_lcd_4bit_send_char_data^0,c
  1959  00F432  5019               	movf	lcd_4bit_send_char_data@rs_pin^0,w,c
  1960  00F434  1817               	xorwf	??_lcd_4bit_send_char_data^0,w,c
  1961  00F436  0BF8               	andlw	-8
  1962  00F438  1817               	xorwf	??_lcd_4bit_send_char_data^0,w,c
  1963  00F43A  6E19               	movwf	lcd_4bit_send_char_data@rs_pin^0,c
  1964  00F43C  C014  FFD9         	movff	lcd_4bit_send_char_data@lcd_4bit,fsr2l
  1965  00F440  C015  FFDA         	movff	lcd_4bit_send_char_data@lcd_4bit+1,fsr2h
  1966  00F444  30DF               	rrcf	223,w,c
  1967  00F446  32E8               	rrcf	wreg,f,c
  1968  00F448  32E8               	rrcf	wreg,f,c
  1969  00F44A  0B07               	andlw	7
  1970  00F44C  6E17               	movwf	??_lcd_4bit_send_char_data^0,c
  1971  00F44E  4617               	rlncf	??_lcd_4bit_send_char_data^0,f,c
  1972  00F450  4617               	rlncf	??_lcd_4bit_send_char_data^0,f,c
  1973  00F452  4617               	rlncf	??_lcd_4bit_send_char_data^0,f,c
  1974  00F454  5019               	movf	lcd_4bit_send_char_data@rs_pin^0,w,c
  1975  00F456  1817               	xorwf	??_lcd_4bit_send_char_data^0,w,c
  1976  00F458  0BC7               	andlw	-57
  1977  00F45A  1817               	xorwf	??_lcd_4bit_send_char_data^0,w,c
  1978  00F45C  6E19               	movwf	lcd_4bit_send_char_data@rs_pin^0,c
  1979  00F45E  9C19               	bcf	lcd_4bit_send_char_data@rs_pin^0,6,c
  1980  00F460  9E19               	bcf	lcd_4bit_send_char_data@rs_pin^0,7,c
  1981  00F462                     
  1982                           ;ECU/LCD/ecu_lcd.c: 107:         state &= gpio_pin_write_logic(&rs_pin,GPIO_HIGH);
  1983  00F462  0E19               	movlw	low lcd_4bit_send_char_data@rs_pin
  1984  00F464  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1985  00F466  0E00               	movlw	high lcd_4bit_send_char_data@rs_pin
  1986  00F468  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1987  00F46A  0E01               	movlw	1
  1988  00F46C  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1989  00F46E  EC68  F07C         	call	_gpio_pin_write_logic	;wreg free
  1990  00F472  1618               	andwf	lcd_4bit_send_char_data@state^0,f,c
  1991  00F474                     
  1992                           ;ECU/LCD/ecu_lcd.c: 109:         state &= lcd_send_4bits(lcd_4bit,ch >> 4);
  1993  00F474  C014  F00B         	movff	lcd_4bit_send_char_data@lcd_4bit,lcd_send_4bits@lcd_4bit
  1994  00F478  C015  F00C         	movff	lcd_4bit_send_char_data@lcd_4bit+1,lcd_send_4bits@lcd_4bit+1
  1995  00F47C  3816               	swapf	lcd_4bit_send_char_data@ch^0,w,c
  1996  00F47E  0B0F               	andlw	15
  1997  00F480  6E0D               	movwf	lcd_send_4bits@data_or_command^0,c
  1998  00F482  EC5D  F07A         	call	_lcd_send_4bits	;wreg free
  1999  00F486  1618               	andwf	lcd_4bit_send_char_data@state^0,f,c
  2000  00F488                     
  2001                           ;ECU/LCD/ecu_lcd.c: 110:         state &= lcd_4bit_send_enable_signal(lcd_4bit);
  2002  00F488  C014  F00B         	movff	lcd_4bit_send_char_data@lcd_4bit,lcd_4bit_send_enable_signal@lcd_4bit
  2003  00F48C  C015  F00C         	movff	lcd_4bit_send_char_data@lcd_4bit+1,lcd_4bit_send_enable_signal@lcd_4bit+1
  2004  00F490  ECA5  F078         	call	_lcd_4bit_send_enable_signal	;wreg free
  2005  00F494  1618               	andwf	lcd_4bit_send_char_data@state^0,f,c
  2006  00F496                     
  2007                           ;ECU/LCD/ecu_lcd.c: 111:         state &= lcd_send_4bits(lcd_4bit,ch);
  2008  00F496  C014  F00B         	movff	lcd_4bit_send_char_data@lcd_4bit,lcd_send_4bits@lcd_4bit
  2009  00F49A  C015  F00C         	movff	lcd_4bit_send_char_data@lcd_4bit+1,lcd_send_4bits@lcd_4bit+1
  2010  00F49E  C016  F00D         	movff	lcd_4bit_send_char_data@ch,lcd_send_4bits@data_or_command
  2011  00F4A2  EC5D  F07A         	call	_lcd_send_4bits	;wreg free
  2012  00F4A6  1618               	andwf	lcd_4bit_send_char_data@state^0,f,c
  2013  00F4A8                     
  2014                           ;ECU/LCD/ecu_lcd.c: 112:         state &= lcd_4bit_send_enable_signal(lcd_4bit);
  2015  00F4A8  C014  F00B         	movff	lcd_4bit_send_char_data@lcd_4bit,lcd_4bit_send_enable_signal@lcd_4bit
  2016  00F4AC  C015  F00C         	movff	lcd_4bit_send_char_data@lcd_4bit+1,lcd_4bit_send_enable_signal@lcd_4bit+1
  2017  00F4B0  ECA5  F078         	call	_lcd_4bit_send_enable_signal	;wreg free
  2018  00F4B4  1618               	andwf	lcd_4bit_send_char_data@state^0,f,c
  2019  00F4B6                     l3016:
  2020                           
  2021                           ;ECU/LCD/ecu_lcd.c: 114:     return state;
  2022  00F4B6  5018               	movf	lcd_4bit_send_char_data@state^0,w,c
  2023  00F4B8  0012               	return		;funcret
  2024  00F4BA                     __end_of_lcd_4bit_send_char_data:
  2025                           	callstack 0
  2026                           
  2027 ;; *************** function _application_initialize *****************
  2028 ;; Defined at:
  2029 ;;		line 70 in file "application.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;  state           1   35[COMRAM] unsigned char 
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      unsigned char 
  2036 ;; Registers used:
  2037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2044 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2046 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2047 ;;Total ram usage:        1 bytes
  2048 ;; Hardware stack levels used: 1
  2049 ;; Hardware stack levels required when called: 4
  2050 ;; This function calls:
  2051 ;;		_lcd_4bit_initialize
  2052 ;;		_lcd_8bit_initialize
  2053 ;; This function is called by:
  2054 ;;		_main
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           	psect	text9
  2059  00ED58                     __ptext9:
  2060                           	callstack 0
  2061  00ED58                     _application_initialize:
  2062                           	callstack 26
  2063  00ED58                     
  2064                           ;application.c: 72:     Std_ReturnType state = (Std_ReturnType)1;
  2065  00ED58  0E01               	movlw	1
  2066  00ED5A  6E24               	movwf	application_initialize@state^0,c
  2067  00ED5C                     
  2068                           ;application.c: 73:     state &= lcd_4bit_initialize(&lcd_4bit);
  2069  00ED5C  0E77               	movlw	low _lcd_4bit
  2070  00ED5E  6E1A               	movwf	lcd_4bit_initialize@lcd_4bit^0,c
  2071  00ED60  0E00               	movlw	high _lcd_4bit
  2072  00ED62  6E1B               	movwf	(lcd_4bit_initialize@lcd_4bit+1)^0,c
  2073  00ED64  ECE5  F07D         	call	_lcd_4bit_initialize	;wreg free
  2074  00ED68  1624               	andwf	application_initialize@state^0,f,c
  2075  00ED6A                     
  2076                           ;application.c: 74:     state &= lcd_8bit_initialize(&lcd_8bit);
  2077  00ED6A  0ED2               	movlw	low _lcd_8bit
  2078  00ED6C  6E1A               	movwf	lcd_8bit_initialize@lcd_8bit^0,c
  2079  00ED6E  0E00               	movlw	high _lcd_8bit
  2080  00ED70  6E1B               	movwf	(lcd_8bit_initialize@lcd_8bit+1)^0,c
  2081  00ED72  ECED  F07C         	call	_lcd_8bit_initialize	;wreg free
  2082  00ED76  1624               	andwf	application_initialize@state^0,f,c
  2083  00ED78  0012               	return		;funcret
  2084  00ED7A                     __end_of_application_initialize:
  2085                           	callstack 0
  2086                           
  2087 ;; *************** function _lcd_8bit_initialize *****************
  2088 ;; Defined at:
  2089 ;;		line 247 in file "ECU/LCD/ecu_lcd.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  lcd_8bit        2   25[COMRAM] PTR const struct .
  2092 ;;		 -> lcd_8bit(10), 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  data_pin        1   34[COMRAM] struct .
  2095 ;;  local_index     1   31[COMRAM] unsigned char 
  2096 ;;  en_pin          1   33[COMRAM] struct .
  2097 ;;  rs_pin          1   32[COMRAM] struct .
  2098 ;;  state           1   30[COMRAM] unsigned char 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  1    wreg      unsigned char 
  2101 ;; Registers used:
  2102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2108 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2110 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2111 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;Total ram usage:       10 bytes
  2113 ;; Hardware stack levels used: 1
  2114 ;; Hardware stack levels required when called: 3
  2115 ;; This function calls:
  2116 ;;		_gpio_pin_direction_initialize
  2117 ;;		_lcd_8bit_send_command
  2118 ;; This function is called by:
  2119 ;;		_application_initialize
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           	psect	text10
  2124  00F9DA                     __ptext10:
  2125                           	callstack 0
  2126  00F9DA                     _lcd_8bit_initialize:
  2127                           	callstack 26
  2128  00F9DA                     
  2129                           ;ECU/LCD/ecu_lcd.c: 247: Std_ReturnType lcd_8bit_initialize(const lcd_8bit_t* lcd_8bit);
      +                          ECU/LCD/ecu_lcd.c: 248: {;ECU/LCD/ecu_lcd.c: 249:     Std_ReturnType state = (Std_Return
      +                          Type)1;
  2130  00F9DA  0E01               	movlw	1
  2131  00F9DC  6E1F               	movwf	lcd_8bit_initialize@state^0,c
  2132  00F9DE                     
  2133                           ;ECU/LCD/ecu_lcd.c: 250:     if(lcd_8bit == ((void*)0))
  2134  00F9DE  501A               	movf	lcd_8bit_initialize@lcd_8bit^0,w,c
  2135  00F9E0  101B               	iorwf	(lcd_8bit_initialize@lcd_8bit+1)^0,w,c
  2136  00F9E2  A4D8               	btfss	status,2,c
  2137  00F9E4  EFF6  F07C         	goto	u1721
  2138  00F9E8  EFF8  F07C         	goto	u1720
  2139  00F9EC                     u1721:
  2140  00F9EC  EFFC  F07C         	goto	l539
  2141  00F9F0                     u1720:
  2142  00F9F0                     
  2143                           ;ECU/LCD/ecu_lcd.c: 251:     {;ECU/LCD/ecu_lcd.c: 252:         state = (Std_ReturnType)0
      +                          ;
  2144  00F9F0  0E00               	movlw	0
  2145  00F9F2  6E1F               	movwf	lcd_8bit_initialize@state^0,c
  2146                           
  2147                           ;ECU/LCD/ecu_lcd.c: 253:     }
  2148  00F9F4  EFE3  F07D         	goto	l3270
  2149  00F9F8                     l539:
  2150                           
  2151                           ;ECU/LCD/ecu_lcd.c: 255:     {;ECU/LCD/ecu_lcd.c: 256:         pin_config_t rs_pin = { .
      +                          port = lcd_8bit->lcd_rs_pin.port,
  2152  00F9F8  C041  F021         	movff	lcd_8bit_initialize@F3038,lcd_8bit_initialize@rs_pin
  2153  00F9FC  C01A  FFD9         	movff	lcd_8bit_initialize@lcd_8bit,fsr2l
  2154  00FA00  C01B  FFDA         	movff	lcd_8bit_initialize@lcd_8bit+1,fsr2h
  2155  00FA04  50DF               	movf	223,w,c
  2156  00FA06  0B07               	andlw	7
  2157  00FA08  6E1C               	movwf	??_lcd_8bit_initialize^0,c
  2158  00FA0A  5021               	movf	lcd_8bit_initialize@rs_pin^0,w,c
  2159  00FA0C  181C               	xorwf	??_lcd_8bit_initialize^0,w,c
  2160  00FA0E  0BF8               	andlw	-8
  2161  00FA10  181C               	xorwf	??_lcd_8bit_initialize^0,w,c
  2162  00FA12  6E21               	movwf	lcd_8bit_initialize@rs_pin^0,c
  2163  00FA14  C01A  FFD9         	movff	lcd_8bit_initialize@lcd_8bit,fsr2l
  2164  00FA18  C01B  FFDA         	movff	lcd_8bit_initialize@lcd_8bit+1,fsr2h
  2165  00FA1C  30DF               	rrcf	223,w,c
  2166  00FA1E  32E8               	rrcf	wreg,f,c
  2167  00FA20  32E8               	rrcf	wreg,f,c
  2168  00FA22  0B07               	andlw	7
  2169  00FA24  6E1C               	movwf	??_lcd_8bit_initialize^0,c
  2170  00FA26  461C               	rlncf	??_lcd_8bit_initialize^0,f,c
  2171  00FA28  461C               	rlncf	??_lcd_8bit_initialize^0,f,c
  2172  00FA2A  461C               	rlncf	??_lcd_8bit_initialize^0,f,c
  2173  00FA2C  5021               	movf	lcd_8bit_initialize@rs_pin^0,w,c
  2174  00FA2E  181C               	xorwf	??_lcd_8bit_initialize^0,w,c
  2175  00FA30  0BC7               	andlw	-57
  2176  00FA32  181C               	xorwf	??_lcd_8bit_initialize^0,w,c
  2177  00FA34  6E21               	movwf	lcd_8bit_initialize@rs_pin^0,c
  2178  00FA36  9C21               	bcf	lcd_8bit_initialize@rs_pin^0,6,c
  2179  00FA38  9E21               	bcf	lcd_8bit_initialize@rs_pin^0,7,c
  2180  00FA3A                     
  2181                           ;ECU/LCD/ecu_lcd.c: 260:         state &= gpio_pin_direction_initialize(&rs_pin);
  2182  00FA3A  0E21               	movlw	low lcd_8bit_initialize@rs_pin
  2183  00FA3C  6E01               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
  2184  00FA3E  0E00               	movlw	high lcd_8bit_initialize@rs_pin
  2185  00FA40  6E02               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
  2186  00FA42  ECEF  F07E         	call	_gpio_pin_direction_initialize	;wreg free
  2187  00FA46  161F               	andwf	lcd_8bit_initialize@state^0,f,c
  2188  00FA48                     
  2189                           ;ECU/LCD/ecu_lcd.c: 261:         pin_config_t en_pin = { .port = lcd_8bit->lcd_en_pin.po
      +                          rt,
  2190  00FA48  C040  F022         	movff	lcd_8bit_initialize@F3040,lcd_8bit_initialize@en_pin
  2191  00FA4C  EE20 F001          	lfsr	2,1
  2192  00FA50  501A               	movf	lcd_8bit_initialize@lcd_8bit^0,w,c
  2193  00FA52  26D9               	addwf	fsr2l,f,c
  2194  00FA54  501B               	movf	(lcd_8bit_initialize@lcd_8bit+1)^0,w,c
  2195  00FA56  22DA               	addwfc	fsr2h,f,c
  2196  00FA58  50DF               	movf	223,w,c
  2197  00FA5A  0B07               	andlw	7
  2198  00FA5C  6E1C               	movwf	??_lcd_8bit_initialize^0,c
  2199  00FA5E  5022               	movf	lcd_8bit_initialize@en_pin^0,w,c
  2200  00FA60  181C               	xorwf	??_lcd_8bit_initialize^0,w,c
  2201  00FA62  0BF8               	andlw	-8
  2202  00FA64  181C               	xorwf	??_lcd_8bit_initialize^0,w,c
  2203  00FA66  6E22               	movwf	lcd_8bit_initialize@en_pin^0,c
  2204  00FA68  EE20 F001          	lfsr	2,1
  2205  00FA6C  501A               	movf	lcd_8bit_initialize@lcd_8bit^0,w,c
  2206  00FA6E  26D9               	addwf	fsr2l,f,c
  2207  00FA70  501B               	movf	(lcd_8bit_initialize@lcd_8bit+1)^0,w,c
  2208  00FA72  22DA               	addwfc	fsr2h,f,c
  2209  00FA74  30DF               	rrcf	223,w,c
  2210  00FA76  32E8               	rrcf	wreg,f,c
  2211  00FA78  32E8               	rrcf	wreg,f,c
  2212  00FA7A  0B07               	andlw	7
  2213  00FA7C  6E1C               	movwf	??_lcd_8bit_initialize^0,c
  2214  00FA7E  461C               	rlncf	??_lcd_8bit_initialize^0,f,c
  2215  00FA80  461C               	rlncf	??_lcd_8bit_initialize^0,f,c
  2216  00FA82  461C               	rlncf	??_lcd_8bit_initialize^0,f,c
  2217  00FA84  5022               	movf	lcd_8bit_initialize@en_pin^0,w,c
  2218  00FA86  181C               	xorwf	??_lcd_8bit_initialize^0,w,c
  2219  00FA88  0BC7               	andlw	-57
  2220  00FA8A  181C               	xorwf	??_lcd_8bit_initialize^0,w,c
  2221  00FA8C  6E22               	movwf	lcd_8bit_initialize@en_pin^0,c
  2222  00FA8E  9C22               	bcf	lcd_8bit_initialize@en_pin^0,6,c
  2223  00FA90  9E22               	bcf	lcd_8bit_initialize@en_pin^0,7,c
  2224  00FA92                     
  2225                           ;ECU/LCD/ecu_lcd.c: 265:         state &= gpio_pin_direction_initialize(&en_pin);
  2226  00FA92  0E22               	movlw	low lcd_8bit_initialize@en_pin
  2227  00FA94  6E01               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
  2228  00FA96  0E00               	movlw	high lcd_8bit_initialize@en_pin
  2229  00FA98  6E02               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
  2230  00FA9A  ECEF  F07E         	call	_gpio_pin_direction_initialize	;wreg free
  2231  00FA9E  161F               	andwf	lcd_8bit_initialize@state^0,f,c
  2232  00FAA0                     
  2233                           ;ECU/LCD/ecu_lcd.c: 267:         for(uint8 local_index=0; local_index<8; local_index++)
  2234  00FAA0  0E00               	movlw	0
  2235  00FAA2  6E20               	movwf	lcd_8bit_initialize@local_index^0,c
  2236  00FAA4                     l545:
  2237                           
  2238                           ;ECU/LCD/ecu_lcd.c: 268:         {;ECU/LCD/ecu_lcd.c: 269:             pin_config_t data
      +                          _pin = { .port = lcd_8bit->lcd_data_pins[local_index].port,
  2239  00FAA4  C03F  F023         	movff	lcd_8bit_initialize@F3043,lcd_8bit_initialize@data_pin
  2240  00FAA8  5020               	movf	lcd_8bit_initialize@local_index^0,w,c
  2241  00FAAA  241A               	addwf	lcd_8bit_initialize@lcd_8bit^0,w,c
  2242  00FAAC  6E1C               	movwf	??_lcd_8bit_initialize^0,c
  2243  00FAAE  0E00               	movlw	0
  2244  00FAB0  201B               	addwfc	(lcd_8bit_initialize@lcd_8bit+1)^0,w,c
  2245  00FAB2  6E1D               	movwf	(??_lcd_8bit_initialize+1)^0,c
  2246  00FAB4  0E02               	movlw	2
  2247  00FAB6  241C               	addwf	??_lcd_8bit_initialize^0,w,c
  2248  00FAB8  6ED9               	movwf	fsr2l,c
  2249  00FABA  0E00               	movlw	0
  2250  00FABC  201D               	addwfc	(??_lcd_8bit_initialize+1)^0,w,c
  2251  00FABE  6EDA               	movwf	fsr2h,c
  2252  00FAC0  50DF               	movf	223,w,c
  2253  00FAC2  0B07               	andlw	7
  2254  00FAC4  6E1E               	movwf	(??_lcd_8bit_initialize+2)^0,c
  2255  00FAC6  5023               	movf	lcd_8bit_initialize@data_pin^0,w,c
  2256  00FAC8  181E               	xorwf	(??_lcd_8bit_initialize+2)^0,w,c
  2257  00FACA  0BF8               	andlw	-8
  2258  00FACC  181E               	xorwf	(??_lcd_8bit_initialize+2)^0,w,c
  2259  00FACE  6E23               	movwf	lcd_8bit_initialize@data_pin^0,c
  2260  00FAD0  5020               	movf	lcd_8bit_initialize@local_index^0,w,c
  2261  00FAD2  241A               	addwf	lcd_8bit_initialize@lcd_8bit^0,w,c
  2262  00FAD4  6E1C               	movwf	??_lcd_8bit_initialize^0,c
  2263  00FAD6  0E00               	movlw	0
  2264  00FAD8  201B               	addwfc	(lcd_8bit_initialize@lcd_8bit+1)^0,w,c
  2265  00FADA  6E1D               	movwf	(??_lcd_8bit_initialize+1)^0,c
  2266  00FADC  0E02               	movlw	2
  2267  00FADE  241C               	addwf	??_lcd_8bit_initialize^0,w,c
  2268  00FAE0  6ED9               	movwf	fsr2l,c
  2269  00FAE2  0E00               	movlw	0
  2270  00FAE4  201D               	addwfc	(??_lcd_8bit_initialize+1)^0,w,c
  2271  00FAE6  6EDA               	movwf	fsr2h,c
  2272  00FAE8  30DF               	rrcf	223,w,c
  2273  00FAEA  32E8               	rrcf	wreg,f,c
  2274  00FAEC  32E8               	rrcf	wreg,f,c
  2275  00FAEE  0B07               	andlw	7
  2276  00FAF0  6E1E               	movwf	(??_lcd_8bit_initialize+2)^0,c
  2277  00FAF2  461E               	rlncf	(??_lcd_8bit_initialize+2)^0,f,c
  2278  00FAF4  461E               	rlncf	(??_lcd_8bit_initialize+2)^0,f,c
  2279  00FAF6  461E               	rlncf	(??_lcd_8bit_initialize+2)^0,f,c
  2280  00FAF8  5023               	movf	lcd_8bit_initialize@data_pin^0,w,c
  2281  00FAFA  181E               	xorwf	(??_lcd_8bit_initialize+2)^0,w,c
  2282  00FAFC  0BC7               	andlw	-57
  2283  00FAFE  181E               	xorwf	(??_lcd_8bit_initialize+2)^0,w,c
  2284  00FB00  6E23               	movwf	lcd_8bit_initialize@data_pin^0,c
  2285  00FB02  9C23               	bcf	lcd_8bit_initialize@data_pin^0,6,c
  2286  00FB04  9E23               	bcf	lcd_8bit_initialize@data_pin^0,7,c
  2287  00FB06                     
  2288                           ;ECU/LCD/ecu_lcd.c: 273:             state &= gpio_pin_direction_initialize(&data_pin);
  2289  00FB06  0E23               	movlw	low lcd_8bit_initialize@data_pin
  2290  00FB08  6E01               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
  2291  00FB0A  0E00               	movlw	high lcd_8bit_initialize@data_pin
  2292  00FB0C  6E02               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
  2293  00FB0E  ECEF  F07E         	call	_gpio_pin_direction_initialize	;wreg free
  2294  00FB12  161F               	andwf	lcd_8bit_initialize@state^0,f,c
  2295  00FB14                     
  2296                           ;ECU/LCD/ecu_lcd.c: 274:         }
  2297  00FB14  2A20               	incf	lcd_8bit_initialize@local_index^0,f,c
  2298  00FB16  0E07               	movlw	7
  2299  00FB18  6420               	cpfsgt	lcd_8bit_initialize@local_index^0,c
  2300  00FB1A  EF91  F07D         	goto	u1731
  2301  00FB1E  EF93  F07D         	goto	u1730
  2302  00FB22                     u1731:
  2303  00FB22  EF52  F07D         	goto	l545
  2304  00FB26                     u1730:
  2305  00FB26                     
  2306                           ;ECU/LCD/ecu_lcd.c: 275:         _delay((unsigned long)((20)*(8000000/4000.0)));
  2307  00FB26  0E34               	movlw	52
  2308  00FB28  6E1C               	movwf	??_lcd_8bit_initialize^0,c
  2309  00FB2A  0EF2               	movlw	242
  2310  00FB2C                     u2617:
  2311  00FB2C  2EE8               	decfsz	wreg,f,c
  2312  00FB2E  D7FE               	bra	u2617
  2313  00FB30  2E1C               	decfsz	??_lcd_8bit_initialize^0,f,c
  2314  00FB32  D7FC               	bra	u2617
  2315  00FB34                     
  2316                           ;ECU/LCD/ecu_lcd.c: 276:         state &= lcd_8bit_send_command(lcd_8bit, 0x38);
  2317  00FB34  C01A  F014         	movff	lcd_8bit_initialize@lcd_8bit,lcd_8bit_send_command@lcd_8bit
  2318  00FB38  C01B  F015         	movff	lcd_8bit_initialize@lcd_8bit+1,lcd_8bit_send_command@lcd_8bit+1
  2319  00FB3C  0E38               	movlw	56
  2320  00FB3E  6E16               	movwf	lcd_8bit_send_command@command^0,c
  2321  00FB40  EC0F  F078         	call	_lcd_8bit_send_command	;wreg free
  2322  00FB44  161F               	andwf	lcd_8bit_initialize@state^0,f,c
  2323  00FB46                     
  2324                           ;ECU/LCD/ecu_lcd.c: 277:         _delay((unsigned long)((5)*(8000000/4000.0)));
  2325  00FB46  0E0D               	movlw	13
  2326  00FB48  6E1C               	movwf	??_lcd_8bit_initialize^0,c
  2327  00FB4A  0EFC               	movlw	252
  2328  00FB4C                     u2627:
  2329  00FB4C  2EE8               	decfsz	wreg,f,c
  2330  00FB4E  D7FE               	bra	u2627
  2331  00FB50  2E1C               	decfsz	??_lcd_8bit_initialize^0,f,c
  2332  00FB52  D7FC               	bra	u2627
  2333                           
  2334                           ;ECU/LCD/ecu_lcd.c: 278:         state &= lcd_8bit_send_command(lcd_8bit, 0x38);
  2335  00FB54  C01A  F014         	movff	lcd_8bit_initialize@lcd_8bit,lcd_8bit_send_command@lcd_8bit
  2336  00FB58  C01B  F015         	movff	lcd_8bit_initialize@lcd_8bit+1,lcd_8bit_send_command@lcd_8bit+1
  2337  00FB5C  0E38               	movlw	56
  2338  00FB5E  6E16               	movwf	lcd_8bit_send_command@command^0,c
  2339  00FB60  EC0F  F078         	call	_lcd_8bit_send_command	;wreg free
  2340  00FB64  161F               	andwf	lcd_8bit_initialize@state^0,f,c
  2341  00FB66                     
  2342                           ;ECU/LCD/ecu_lcd.c: 279:         _delay((unsigned long)((150)*(8000000/4000000.0)));
  2343  00FB66  0E64               	movlw	100
  2344  00FB68                     u2637:
  2345  00FB68  2EE8               	decfsz	wreg,f,c
  2346  00FB6A  D7FE               	bra	u2637
  2347  00FB6C                     
  2348                           ;ECU/LCD/ecu_lcd.c: 280:         state &= lcd_8bit_send_command(lcd_8bit, 0x38);
  2349  00FB6C  C01A  F014         	movff	lcd_8bit_initialize@lcd_8bit,lcd_8bit_send_command@lcd_8bit
  2350  00FB70  C01B  F015         	movff	lcd_8bit_initialize@lcd_8bit+1,lcd_8bit_send_command@lcd_8bit+1
  2351  00FB74  0E38               	movlw	56
  2352  00FB76  6E16               	movwf	lcd_8bit_send_command@command^0,c
  2353  00FB78  EC0F  F078         	call	_lcd_8bit_send_command	;wreg free
  2354  00FB7C  161F               	andwf	lcd_8bit_initialize@state^0,f,c
  2355  00FB7E                     
  2356                           ;ECU/LCD/ecu_lcd.c: 282:         state &= lcd_8bit_send_command(lcd_8bit, 0x01);
  2357  00FB7E  C01A  F014         	movff	lcd_8bit_initialize@lcd_8bit,lcd_8bit_send_command@lcd_8bit
  2358  00FB82  C01B  F015         	movff	lcd_8bit_initialize@lcd_8bit+1,lcd_8bit_send_command@lcd_8bit+1
  2359  00FB86  0E01               	movlw	1
  2360  00FB88  6E16               	movwf	lcd_8bit_send_command@command^0,c
  2361  00FB8A  EC0F  F078         	call	_lcd_8bit_send_command	;wreg free
  2362  00FB8E  161F               	andwf	lcd_8bit_initialize@state^0,f,c
  2363  00FB90                     
  2364                           ;ECU/LCD/ecu_lcd.c: 283:         state &= lcd_8bit_send_command(lcd_8bit, 0x02);
  2365  00FB90  C01A  F014         	movff	lcd_8bit_initialize@lcd_8bit,lcd_8bit_send_command@lcd_8bit
  2366  00FB94  C01B  F015         	movff	lcd_8bit_initialize@lcd_8bit+1,lcd_8bit_send_command@lcd_8bit+1
  2367  00FB98  0E02               	movlw	2
  2368  00FB9A  6E16               	movwf	lcd_8bit_send_command@command^0,c
  2369  00FB9C  EC0F  F078         	call	_lcd_8bit_send_command	;wreg free
  2370  00FBA0  161F               	andwf	lcd_8bit_initialize@state^0,f,c
  2371  00FBA2                     
  2372                           ;ECU/LCD/ecu_lcd.c: 284:         state &= lcd_8bit_send_command(lcd_8bit, 0x0c);
  2373  00FBA2  C01A  F014         	movff	lcd_8bit_initialize@lcd_8bit,lcd_8bit_send_command@lcd_8bit
  2374  00FBA6  C01B  F015         	movff	lcd_8bit_initialize@lcd_8bit+1,lcd_8bit_send_command@lcd_8bit+1
  2375  00FBAA  0E0C               	movlw	12
  2376  00FBAC  6E16               	movwf	lcd_8bit_send_command@command^0,c
  2377  00FBAE  EC0F  F078         	call	_lcd_8bit_send_command	;wreg free
  2378  00FBB2  161F               	andwf	lcd_8bit_initialize@state^0,f,c
  2379  00FBB4                     
  2380                           ;ECU/LCD/ecu_lcd.c: 285:         state &= lcd_8bit_send_command(lcd_8bit, 0x06);
  2381  00FBB4  C01A  F014         	movff	lcd_8bit_initialize@lcd_8bit,lcd_8bit_send_command@lcd_8bit
  2382  00FBB8  C01B  F015         	movff	lcd_8bit_initialize@lcd_8bit+1,lcd_8bit_send_command@lcd_8bit+1
  2383  00FBBC  0E06               	movlw	6
  2384  00FBBE  6E16               	movwf	lcd_8bit_send_command@command^0,c
  2385  00FBC0  EC0F  F078         	call	_lcd_8bit_send_command	;wreg free
  2386  00FBC4  161F               	andwf	lcd_8bit_initialize@state^0,f,c
  2387  00FBC6                     l3270:
  2388                           
  2389                           ;ECU/LCD/ecu_lcd.c: 287:     return state;
  2390  00FBC6  501F               	movf	lcd_8bit_initialize@state^0,w,c
  2391  00FBC8  0012               	return		;funcret
  2392  00FBCA                     __end_of_lcd_8bit_initialize:
  2393                           	callstack 0
  2394                           
  2395 ;; *************** function _lcd_8bit_send_command *****************
  2396 ;; Defined at:
  2397 ;;		line 290 in file "ECU/LCD/ecu_lcd.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  lcd_8bit        2   19[COMRAM] PTR const struct .
  2400 ;;		 -> lcd_8bit(10), 
  2401 ;;  command         1   21[COMRAM] const unsigned char 
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;  rs_pin          1   24[COMRAM] struct .
  2404 ;;  state           1   23[COMRAM] unsigned char 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1    wreg      unsigned char 
  2407 ;; Registers used:
  2408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2414 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2417 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2418 ;;Total ram usage:        6 bytes
  2419 ;; Hardware stack levels used: 1
  2420 ;; Hardware stack levels required when called: 2
  2421 ;; This function calls:
  2422 ;;		_gpio_pin_write_logic
  2423 ;;		_lcd_8bit_send_enable_signal
  2424 ;;		_lcd_send_8bits
  2425 ;; This function is called by:
  2426 ;;		_lcd_8bit_initialize
  2427 ;;		_lcd_8bit_send_custome_char
  2428 ;;		_lcd_8bit_set_position
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text11
  2433  00F01E                     __ptext11:
  2434                           	callstack 0
  2435  00F01E                     _lcd_8bit_send_command:
  2436                           	callstack 27
  2437  00F01E                     
  2438                           ;ECU/LCD/ecu_lcd.c: 290: Std_ReturnType lcd_8bit_send_command(const lcd_8bit_t* lcd_8bit
      +                          , const uint8 command);ECU/LCD/ecu_lcd.c: 291: {;ECU/LCD/ecu_lcd.c: 292:     Std_ReturnT
      +                          ype state = (Std_ReturnType)1;
  2439  00F01E  0E01               	movlw	1
  2440  00F020  6E18               	movwf	lcd_8bit_send_command@state^0,c
  2441  00F022                     
  2442                           ;ECU/LCD/ecu_lcd.c: 293:     if(lcd_8bit == ((void*)0))
  2443  00F022  5014               	movf	lcd_8bit_send_command@lcd_8bit^0,w,c
  2444  00F024  1015               	iorwf	(lcd_8bit_send_command@lcd_8bit+1)^0,w,c
  2445  00F026  A4D8               	btfss	status,2,c
  2446  00F028  EF18  F078         	goto	u1451
  2447  00F02C  EF1A  F078         	goto	u1450
  2448  00F030                     u1451:
  2449  00F030  EF1E  F078         	goto	l552
  2450  00F034                     u1450:
  2451  00F034                     
  2452                           ;ECU/LCD/ecu_lcd.c: 294:     {;ECU/LCD/ecu_lcd.c: 295:         state = (Std_ReturnType)0
      +                          ;
  2453  00F034  0E00               	movlw	0
  2454  00F036  6E18               	movwf	lcd_8bit_send_command@state^0,c
  2455                           
  2456                           ;ECU/LCD/ecu_lcd.c: 296:     }
  2457  00F038  EF58  F078         	goto	l2932
  2458  00F03C                     l552:
  2459                           
  2460                           ;ECU/LCD/ecu_lcd.c: 298:     {;ECU/LCD/ecu_lcd.c: 299:         pin_config_t rs_pin={.por
      +                          t=lcd_8bit->lcd_rs_pin.port,.pin=lcd_8bit->lcd_rs_pin.pin,.direction=GPIO_OUTPUT,.logic=
      +                          GPIO_LOW};
  2461  00F03C  C03E  F019         	movff	lcd_8bit_send_command@F3049,lcd_8bit_send_command@rs_pin
  2462  00F040  C014  FFD9         	movff	lcd_8bit_send_command@lcd_8bit,fsr2l
  2463  00F044  C015  FFDA         	movff	lcd_8bit_send_command@lcd_8bit+1,fsr2h
  2464  00F048  50DF               	movf	223,w,c
  2465  00F04A  0B07               	andlw	7
  2466  00F04C  6E17               	movwf	??_lcd_8bit_send_command^0,c
  2467  00F04E  5019               	movf	lcd_8bit_send_command@rs_pin^0,w,c
  2468  00F050  1817               	xorwf	??_lcd_8bit_send_command^0,w,c
  2469  00F052  0BF8               	andlw	-8
  2470  00F054  1817               	xorwf	??_lcd_8bit_send_command^0,w,c
  2471  00F056  6E19               	movwf	lcd_8bit_send_command@rs_pin^0,c
  2472  00F058  C014  FFD9         	movff	lcd_8bit_send_command@lcd_8bit,fsr2l
  2473  00F05C  C015  FFDA         	movff	lcd_8bit_send_command@lcd_8bit+1,fsr2h
  2474  00F060  30DF               	rrcf	223,w,c
  2475  00F062  32E8               	rrcf	wreg,f,c
  2476  00F064  32E8               	rrcf	wreg,f,c
  2477  00F066  0B07               	andlw	7
  2478  00F068  6E17               	movwf	??_lcd_8bit_send_command^0,c
  2479  00F06A  4617               	rlncf	??_lcd_8bit_send_command^0,f,c
  2480  00F06C  4617               	rlncf	??_lcd_8bit_send_command^0,f,c
  2481  00F06E  4617               	rlncf	??_lcd_8bit_send_command^0,f,c
  2482  00F070  5019               	movf	lcd_8bit_send_command@rs_pin^0,w,c
  2483  00F072  1817               	xorwf	??_lcd_8bit_send_command^0,w,c
  2484  00F074  0BC7               	andlw	-57
  2485  00F076  1817               	xorwf	??_lcd_8bit_send_command^0,w,c
  2486  00F078  6E19               	movwf	lcd_8bit_send_command@rs_pin^0,c
  2487  00F07A  9C19               	bcf	lcd_8bit_send_command@rs_pin^0,6,c
  2488  00F07C  9E19               	bcf	lcd_8bit_send_command@rs_pin^0,7,c
  2489  00F07E                     
  2490                           ;ECU/LCD/ecu_lcd.c: 300:         state &= gpio_pin_write_logic(&rs_pin,GPIO_LOW);
  2491  00F07E  0E19               	movlw	low lcd_8bit_send_command@rs_pin
  2492  00F080  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2493  00F082  0E00               	movlw	high lcd_8bit_send_command@rs_pin
  2494  00F084  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2495  00F086  0E00               	movlw	0
  2496  00F088  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2497  00F08A  EC68  F07C         	call	_gpio_pin_write_logic	;wreg free
  2498  00F08E  1618               	andwf	lcd_8bit_send_command@state^0,f,c
  2499  00F090                     
  2500                           ;ECU/LCD/ecu_lcd.c: 302:         state &= lcd_send_8bits(lcd_8bit,command);
  2501  00F090  C014  F00B         	movff	lcd_8bit_send_command@lcd_8bit,lcd_send_8bits@lcd_8bit
  2502  00F094  C015  F00C         	movff	lcd_8bit_send_command@lcd_8bit+1,lcd_send_8bits@lcd_8bit+1
  2503  00F098  C016  F00D         	movff	lcd_8bit_send_command@command,lcd_send_8bits@data_or_command
  2504  00F09C  ECBE  F07A         	call	_lcd_send_8bits	;wreg free
  2505  00F0A0  1618               	andwf	lcd_8bit_send_command@state^0,f,c
  2506  00F0A2                     
  2507                           ;ECU/LCD/ecu_lcd.c: 303:         state &= lcd_8bit_send_enable_signal(lcd_8bit);
  2508  00F0A2  C014  F00B         	movff	lcd_8bit_send_command@lcd_8bit,lcd_8bit_send_enable_signal@lcd_8bit
  2509  00F0A6  C015  F00C         	movff	lcd_8bit_send_command@lcd_8bit+1,lcd_8bit_send_enable_signal@lcd_8bit+1
  2510  00F0AA  ECF8  F078         	call	_lcd_8bit_send_enable_signal	;wreg free
  2511  00F0AE  1618               	andwf	lcd_8bit_send_command@state^0,f,c
  2512  00F0B0                     l2932:
  2513                           
  2514                           ;ECU/LCD/ecu_lcd.c: 305:     return state;
  2515  00F0B0  5018               	movf	lcd_8bit_send_command@state^0,w,c
  2516  00F0B2  0012               	return		;funcret
  2517  00F0B4                     __end_of_lcd_8bit_send_command:
  2518                           	callstack 0
  2519                           
  2520 ;; *************** function _lcd_send_8bits *****************
  2521 ;; Defined at:
  2522 ;;		line 585 in file "ECU/LCD/ecu_lcd.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;  lcd_8bit        2   10[COMRAM] PTR const struct .
  2525 ;;		 -> lcd_8bit(10), 
  2526 ;;  data_or_comm    1   12[COMRAM] unsigned char 
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;  data_pin        1   17[COMRAM] struct .
  2529 ;;  local_index     1   18[COMRAM] unsigned char 
  2530 ;;  state           1   16[COMRAM] unsigned char 
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  1    wreg      unsigned char 
  2533 ;; Registers used:
  2534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2540 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2541 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2542 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2543 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2544 ;;Total ram usage:        9 bytes
  2545 ;; Hardware stack levels used: 1
  2546 ;; Hardware stack levels required when called: 1
  2547 ;; This function calls:
  2548 ;;		_gpio_pin_write_logic
  2549 ;; This function is called by:
  2550 ;;		_lcd_8bit_send_command
  2551 ;;		_lcd_8bit_send_char_data
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           	psect	text12
  2556  00F57C                     __ptext12:
  2557                           	callstack 0
  2558  00F57C                     _lcd_send_8bits:
  2559                           	callstack 27
  2560  00F57C                     
  2561                           ;ECU/LCD/ecu_lcd.c: 585: static Std_ReturnType lcd_send_8bits(const lcd_8bit_t *lcd_8bit
      +                          , uint8 data_or_command);ECU/LCD/ecu_lcd.c: 586: {;ECU/LCD/ecu_lcd.c: 587:     Std_Retur
      +                          nType state = (Std_ReturnType)1;
  2562  00F57C  0E01               	movlw	1
  2563  00F57E  6E11               	movwf	lcd_send_8bits@state^0,c
  2564  00F580                     
  2565                           ;ECU/LCD/ecu_lcd.c: 588:     if(lcd_8bit == ((void*)0))
  2566  00F580  500B               	movf	lcd_send_8bits@lcd_8bit^0,w,c
  2567  00F582  100C               	iorwf	(lcd_send_8bits@lcd_8bit+1)^0,w,c
  2568  00F584  A4D8               	btfss	status,2,c
  2569  00F586  EFC7  F07A         	goto	u1401
  2570  00F58A  EFC9  F07A         	goto	u1400
  2571  00F58E                     u1401:
  2572  00F58E  EFCD  F07A         	goto	l2846
  2573  00F592                     u1400:
  2574  00F592                     
  2575                           ;ECU/LCD/ecu_lcd.c: 589:     {;ECU/LCD/ecu_lcd.c: 590:         state = (Std_ReturnType)0
      +                          ;
  2576  00F592  0E00               	movlw	0
  2577  00F594  6E11               	movwf	lcd_send_8bits@state^0,c
  2578                           
  2579                           ;ECU/LCD/ecu_lcd.c: 591:     }
  2580  00F596  EF1D  F07B         	goto	l2860
  2581  00F59A                     l2846:
  2582                           
  2583                           ;ECU/LCD/ecu_lcd.c: 593:     {;ECU/LCD/ecu_lcd.c: 594:         for(uint8 local_index=0; 
      +                          local_index<8; local_index++)
  2584  00F59A  0E00               	movlw	0
  2585  00F59C  6E13               	movwf	lcd_send_8bits@local_index^0,c
  2586  00F59E                     l671:
  2587                           
  2588                           ;ECU/LCD/ecu_lcd.c: 595:         {;ECU/LCD/ecu_lcd.c: 596:             pin_config_t data
      +                          _pin = {.port = lcd_8bit->lcd_data_pins[local_index].port,
  2589  00F59E  C039  F012         	movff	lcd_send_8bits@F3136,lcd_send_8bits@data_pin
  2590  00F5A2  5013               	movf	lcd_send_8bits@local_index^0,w,c
  2591  00F5A4  240B               	addwf	lcd_send_8bits@lcd_8bit^0,w,c
  2592  00F5A6  6E0E               	movwf	??_lcd_send_8bits^0,c
  2593  00F5A8  0E00               	movlw	0
  2594  00F5AA  200C               	addwfc	(lcd_send_8bits@lcd_8bit+1)^0,w,c
  2595  00F5AC  6E0F               	movwf	(??_lcd_send_8bits+1)^0,c
  2596  00F5AE  0E02               	movlw	2
  2597  00F5B0  240E               	addwf	??_lcd_send_8bits^0,w,c
  2598  00F5B2  6ED9               	movwf	fsr2l,c
  2599  00F5B4  0E00               	movlw	0
  2600  00F5B6  200F               	addwfc	(??_lcd_send_8bits+1)^0,w,c
  2601  00F5B8  6EDA               	movwf	fsr2h,c
  2602  00F5BA  50DF               	movf	223,w,c
  2603  00F5BC  0B07               	andlw	7
  2604  00F5BE  6E10               	movwf	(??_lcd_send_8bits+2)^0,c
  2605  00F5C0  5012               	movf	lcd_send_8bits@data_pin^0,w,c
  2606  00F5C2  1810               	xorwf	(??_lcd_send_8bits+2)^0,w,c
  2607  00F5C4  0BF8               	andlw	-8
  2608  00F5C6  1810               	xorwf	(??_lcd_send_8bits+2)^0,w,c
  2609  00F5C8  6E12               	movwf	lcd_send_8bits@data_pin^0,c
  2610  00F5CA  5013               	movf	lcd_send_8bits@local_index^0,w,c
  2611  00F5CC  240B               	addwf	lcd_send_8bits@lcd_8bit^0,w,c
  2612  00F5CE  6E0E               	movwf	??_lcd_send_8bits^0,c
  2613  00F5D0  0E00               	movlw	0
  2614  00F5D2  200C               	addwfc	(lcd_send_8bits@lcd_8bit+1)^0,w,c
  2615  00F5D4  6E0F               	movwf	(??_lcd_send_8bits+1)^0,c
  2616  00F5D6  0E02               	movlw	2
  2617  00F5D8  240E               	addwf	??_lcd_send_8bits^0,w,c
  2618  00F5DA  6ED9               	movwf	fsr2l,c
  2619  00F5DC  0E00               	movlw	0
  2620  00F5DE  200F               	addwfc	(??_lcd_send_8bits+1)^0,w,c
  2621  00F5E0  6EDA               	movwf	fsr2h,c
  2622  00F5E2  30DF               	rrcf	223,w,c
  2623  00F5E4  32E8               	rrcf	wreg,f,c
  2624  00F5E6  32E8               	rrcf	wreg,f,c
  2625  00F5E8  0B07               	andlw	7
  2626  00F5EA  6E10               	movwf	(??_lcd_send_8bits+2)^0,c
  2627  00F5EC  4610               	rlncf	(??_lcd_send_8bits+2)^0,f,c
  2628  00F5EE  4610               	rlncf	(??_lcd_send_8bits+2)^0,f,c
  2629  00F5F0  4610               	rlncf	(??_lcd_send_8bits+2)^0,f,c
  2630  00F5F2  5012               	movf	lcd_send_8bits@data_pin^0,w,c
  2631  00F5F4  1810               	xorwf	(??_lcd_send_8bits+2)^0,w,c
  2632  00F5F6  0BC7               	andlw	-57
  2633  00F5F8  1810               	xorwf	(??_lcd_send_8bits+2)^0,w,c
  2634  00F5FA  6E12               	movwf	lcd_send_8bits@data_pin^0,c
  2635  00F5FC                     
  2636                           ;ECU/LCD/ecu_lcd.c: 598:             state &= gpio_pin_write_logic(&data_pin, (data_or_c
      +                          ommand >> local_index) & 0x01);
  2637  00F5FC  0E12               	movlw	low lcd_send_8bits@data_pin
  2638  00F5FE  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2639  00F600  0E00               	movlw	high lcd_send_8bits@data_pin
  2640  00F602  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2641  00F604  C013  F00E         	movff	lcd_send_8bits@local_index,??_lcd_send_8bits
  2642  00F608  C00D  F00F         	movff	lcd_send_8bits@data_or_command,??_lcd_send_8bits+1
  2643  00F60C  2A0E               	incf	??_lcd_send_8bits^0,f,c
  2644  00F60E  EF0B  F07B         	goto	u1414
  2645  00F612                     u1415:
  2646  00F612  90D8               	bcf	status,0,c
  2647  00F614  320F               	rrcf	(??_lcd_send_8bits+1)^0,f,c
  2648  00F616                     u1414:
  2649  00F616  2E0E               	decfsz	??_lcd_send_8bits^0,f,c
  2650  00F618  EF09  F07B         	goto	u1415
  2651  00F61C  500F               	movf	(??_lcd_send_8bits+1)^0,w,c
  2652  00F61E  0B01               	andlw	1
  2653  00F620  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2654  00F622  EC68  F07C         	call	_gpio_pin_write_logic	;wreg free
  2655  00F626  1611               	andwf	lcd_send_8bits@state^0,f,c
  2656  00F628                     
  2657                           ;ECU/LCD/ecu_lcd.c: 599:         }
  2658  00F628  2A13               	incf	lcd_send_8bits@local_index^0,f,c
  2659  00F62A  0E07               	movlw	7
  2660  00F62C  6413               	cpfsgt	lcd_send_8bits@local_index^0,c
  2661  00F62E  EF1B  F07B         	goto	u1421
  2662  00F632  EF1D  F07B         	goto	u1420
  2663  00F636                     u1421:
  2664  00F636  EFCF  F07A         	goto	l671
  2665  00F63A                     u1420:
  2666  00F63A                     l2860:
  2667                           
  2668                           ;ECU/LCD/ecu_lcd.c: 601:     return state;
  2669  00F63A  5011               	movf	lcd_send_8bits@state^0,w,c
  2670  00F63C  0012               	return		;funcret
  2671  00F63E                     __end_of_lcd_send_8bits:
  2672                           	callstack 0
  2673                           
  2674 ;; *************** function _lcd_8bit_send_enable_signal *****************
  2675 ;; Defined at:
  2676 ;;		line 604 in file "ECU/LCD/ecu_lcd.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  lcd_8bit        2   10[COMRAM] PTR const struct .
  2679 ;;		 -> lcd_8bit(10), 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  en_pin          1   14[COMRAM] struct .
  2682 ;;  state           1   13[COMRAM] unsigned char 
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  1    wreg      unsigned char 
  2685 ;; Registers used:
  2686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2692 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2693 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;Total ram usage:        5 bytes
  2697 ;; Hardware stack levels used: 1
  2698 ;; Hardware stack levels required when called: 1
  2699 ;; This function calls:
  2700 ;;		_gpio_pin_write_logic
  2701 ;; This function is called by:
  2702 ;;		_lcd_8bit_send_command
  2703 ;;		_lcd_8bit_send_char_data
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           	psect	text13
  2708  00F1F0                     __ptext13:
  2709                           	callstack 0
  2710  00F1F0                     _lcd_8bit_send_enable_signal:
  2711                           	callstack 27
  2712  00F1F0                     
  2713                           ;ECU/LCD/ecu_lcd.c: 604: static Std_ReturnType lcd_8bit_send_enable_signal(const lcd_8bi
      +                          t_t *lcd_8bit);ECU/LCD/ecu_lcd.c: 605: {;ECU/LCD/ecu_lcd.c: 606:     Std_ReturnType stat
      +                          e = (Std_ReturnType)1;
  2714  00F1F0  0E01               	movlw	1
  2715  00F1F2  6E0E               	movwf	lcd_8bit_send_enable_signal@state^0,c
  2716  00F1F4                     
  2717                           ;ECU/LCD/ecu_lcd.c: 607:     if(lcd_8bit == ((void*)0))
  2718  00F1F4  500B               	movf	lcd_8bit_send_enable_signal@lcd_8bit^0,w,c
  2719  00F1F6  100C               	iorwf	(lcd_8bit_send_enable_signal@lcd_8bit+1)^0,w,c
  2720  00F1F8  A4D8               	btfss	status,2,c
  2721  00F1FA  EF01  F079         	goto	u1431
  2722  00F1FE  EF03  F079         	goto	u1430
  2723  00F202                     u1431:
  2724  00F202  EF07  F079         	goto	l678
  2725  00F206                     u1430:
  2726  00F206                     
  2727                           ;ECU/LCD/ecu_lcd.c: 608:     {;ECU/LCD/ecu_lcd.c: 609:         state = (Std_ReturnType)0
      +                          ;
  2728  00F206  0E00               	movlw	0
  2729  00F208  6E0E               	movwf	lcd_8bit_send_enable_signal@state^0,c
  2730                           
  2731                           ;ECU/LCD/ecu_lcd.c: 610:     }
  2732  00F20A  EF49  F079         	goto	l2884
  2733  00F20E                     l678:
  2734                           
  2735                           ;ECU/LCD/ecu_lcd.c: 612:     {;ECU/LCD/ecu_lcd.c: 613:         pin_config_t en_pin={.por
      +                          t=lcd_8bit->lcd_en_pin.port,.pin=lcd_8bit->lcd_en_pin.pin,.direction=GPIO_OUTPUT,.logic=
      +                          GPIO_LOW};
  2736  00F20E  C038  F00F         	movff	lcd_8bit_send_enable_signal@F3141,lcd_8bit_send_enable_signal@en_pin
  2737  00F212  EE20 F001          	lfsr	2,1
  2738  00F216  500B               	movf	lcd_8bit_send_enable_signal@lcd_8bit^0,w,c
  2739  00F218  26D9               	addwf	fsr2l,f,c
  2740  00F21A  500C               	movf	(lcd_8bit_send_enable_signal@lcd_8bit+1)^0,w,c
  2741  00F21C  22DA               	addwfc	fsr2h,f,c
  2742  00F21E  50DF               	movf	223,w,c
  2743  00F220  0B07               	andlw	7
  2744  00F222  6E0D               	movwf	??_lcd_8bit_send_enable_signal^0,c
  2745  00F224  500F               	movf	lcd_8bit_send_enable_signal@en_pin^0,w,c
  2746  00F226  180D               	xorwf	??_lcd_8bit_send_enable_signal^0,w,c
  2747  00F228  0BF8               	andlw	-8
  2748  00F22A  180D               	xorwf	??_lcd_8bit_send_enable_signal^0,w,c
  2749  00F22C  6E0F               	movwf	lcd_8bit_send_enable_signal@en_pin^0,c
  2750  00F22E  EE20 F001          	lfsr	2,1
  2751  00F232  500B               	movf	lcd_8bit_send_enable_signal@lcd_8bit^0,w,c
  2752  00F234  26D9               	addwf	fsr2l,f,c
  2753  00F236  500C               	movf	(lcd_8bit_send_enable_signal@lcd_8bit+1)^0,w,c
  2754  00F238  22DA               	addwfc	fsr2h,f,c
  2755  00F23A  30DF               	rrcf	223,w,c
  2756  00F23C  32E8               	rrcf	wreg,f,c
  2757  00F23E  32E8               	rrcf	wreg,f,c
  2758  00F240  0B07               	andlw	7
  2759  00F242  6E0D               	movwf	??_lcd_8bit_send_enable_signal^0,c
  2760  00F244  460D               	rlncf	??_lcd_8bit_send_enable_signal^0,f,c
  2761  00F246  460D               	rlncf	??_lcd_8bit_send_enable_signal^0,f,c
  2762  00F248  460D               	rlncf	??_lcd_8bit_send_enable_signal^0,f,c
  2763  00F24A  500F               	movf	lcd_8bit_send_enable_signal@en_pin^0,w,c
  2764  00F24C  180D               	xorwf	??_lcd_8bit_send_enable_signal^0,w,c
  2765  00F24E  0BC7               	andlw	-57
  2766  00F250  180D               	xorwf	??_lcd_8bit_send_enable_signal^0,w,c
  2767  00F252  6E0F               	movwf	lcd_8bit_send_enable_signal@en_pin^0,c
  2768  00F254  9C0F               	bcf	lcd_8bit_send_enable_signal@en_pin^0,6,c
  2769  00F256  9E0F               	bcf	lcd_8bit_send_enable_signal@en_pin^0,7,c
  2770  00F258                     
  2771                           ;ECU/LCD/ecu_lcd.c: 614:         state &= gpio_pin_write_logic(&en_pin,GPIO_HIGH);
  2772  00F258  0E0F               	movlw	low lcd_8bit_send_enable_signal@en_pin
  2773  00F25A  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2774  00F25C  0E00               	movlw	high lcd_8bit_send_enable_signal@en_pin
  2775  00F25E  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2776  00F260  0E01               	movlw	1
  2777  00F262  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2778  00F264  EC68  F07C         	call	_gpio_pin_write_logic	;wreg free
  2779  00F268  160E               	andwf	lcd_8bit_send_enable_signal@state^0,f,c
  2780  00F26A                     
  2781                           ;ECU/LCD/ecu_lcd.c: 615:         _delay((unsigned long)((1)*(8000000/4000.0)));
  2782  00F26A  0E03               	movlw	3
  2783  00F26C  6E0D               	movwf	??_lcd_8bit_send_enable_signal^0,c
  2784  00F26E  0E98               	movlw	152
  2785  00F270                     u2647:
  2786  00F270  2EE8               	decfsz	wreg,f,c
  2787  00F272  D7FE               	bra	u2647
  2788  00F274  2E0D               	decfsz	??_lcd_8bit_send_enable_signal^0,f,c
  2789  00F276  D7FC               	bra	u2647
  2790  00F278                     
  2791                           ;ECU/LCD/ecu_lcd.c: 616:         state &= gpio_pin_write_logic(&en_pin,GPIO_LOW);
  2792  00F278  0E0F               	movlw	low lcd_8bit_send_enable_signal@en_pin
  2793  00F27A  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2794  00F27C  0E00               	movlw	high lcd_8bit_send_enable_signal@en_pin
  2795  00F27E  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2796  00F280  0E00               	movlw	0
  2797  00F282  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2798  00F284  EC68  F07C         	call	_gpio_pin_write_logic	;wreg free
  2799  00F288  160E               	andwf	lcd_8bit_send_enable_signal@state^0,f,c
  2800  00F28A                     
  2801                           ;ECU/LCD/ecu_lcd.c: 617:         _delay((unsigned long)((100)*(8000000/4000000.0)));
  2802  00F28A  0E42               	movlw	66
  2803  00F28C                     u2657:
  2804  00F28C  2EE8               	decfsz	wreg,f,c
  2805  00F28E  D7FE               	bra	u2657
  2806  00F290  D000               	nop2	
  2807  00F292                     l2884:
  2808                           
  2809                           ;ECU/LCD/ecu_lcd.c: 619:     return state;
  2810  00F292  500E               	movf	lcd_8bit_send_enable_signal@state^0,w,c
  2811  00F294  0012               	return		;funcret
  2812  00F296                     __end_of_lcd_8bit_send_enable_signal:
  2813                           	callstack 0
  2814                           
  2815 ;; *************** function _lcd_4bit_initialize *****************
  2816 ;; Defined at:
  2817 ;;		line 19 in file "ECU/LCD/ecu_lcd.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;  lcd_4bit        2   25[COMRAM] PTR const struct .
  2820 ;;		 -> lcd_4bit(6), 
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;  data_pin        1   34[COMRAM] struct .
  2823 ;;  local_index     1   31[COMRAM] unsigned char 
  2824 ;;  en_pin          1   33[COMRAM] struct .
  2825 ;;  rs_pin          1   32[COMRAM] struct .
  2826 ;;  state           1   30[COMRAM] unsigned char 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      unsigned char 
  2829 ;; Registers used:
  2830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2837 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2838 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2840 ;;Total ram usage:       10 bytes
  2841 ;; Hardware stack levels used: 1
  2842 ;; Hardware stack levels required when called: 3
  2843 ;; This function calls:
  2844 ;;		_gpio_pin_direction_initialize
  2845 ;;		_lcd_4bit_send_command
  2846 ;;		_lcd_send_higher_nibble
  2847 ;; This function is called by:
  2848 ;;		_application_initialize
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           	psect	text14
  2853  00FBCA                     __ptext14:
  2854                           	callstack 0
  2855  00FBCA                     _lcd_4bit_initialize:
  2856                           	callstack 26
  2857  00FBCA                     
  2858                           ;ECU/LCD/ecu_lcd.c: 19: Std_ReturnType lcd_4bit_initialize(const lcd_4bit_t* lcd_4bit);E
      +                          CU/LCD/ecu_lcd.c: 20: {;ECU/LCD/ecu_lcd.c: 21:     Std_ReturnType state = (Std_ReturnTyp
      +                          e)1;
  2859  00FBCA  0E01               	movlw	1
  2860  00FBCC  6E1F               	movwf	lcd_4bit_initialize@state^0,c
  2861  00FBCE                     
  2862                           ;ECU/LCD/ecu_lcd.c: 22:     if(lcd_4bit == ((void*)0))
  2863  00FBCE  501A               	movf	lcd_4bit_initialize@lcd_4bit^0,w,c
  2864  00FBD0  101B               	iorwf	(lcd_4bit_initialize@lcd_4bit+1)^0,w,c
  2865  00FBD2  A4D8               	btfss	status,2,c
  2866  00FBD4  EFEE  F07D         	goto	u1701
  2867  00FBD8  EFF0  F07D         	goto	u1700
  2868  00FBDC                     u1701:
  2869  00FBDC  EFF4  F07D         	goto	l452
  2870  00FBE0                     u1700:
  2871  00FBE0                     
  2872                           ;ECU/LCD/ecu_lcd.c: 23:     {;ECU/LCD/ecu_lcd.c: 24:         state = (Std_ReturnType)0;
  2873  00FBE0  0E00               	movlw	0
  2874  00FBE2  6E1F               	movwf	lcd_4bit_initialize@state^0,c
  2875                           
  2876                           ;ECU/LCD/ecu_lcd.c: 25:     }
  2877  00FBE4  EFED  F07E         	goto	l3204
  2878  00FBE8                     l452:
  2879                           
  2880                           ;ECU/LCD/ecu_lcd.c: 27:     {;ECU/LCD/ecu_lcd.c: 28:         pin_config_t rs_pin = {.por
      +                          t = lcd_4bit->lcd_rs_pin.port,
  2881  00FBE8  C046  F021         	movff	lcd_4bit_initialize@F2973,lcd_4bit_initialize@rs_pin
  2882  00FBEC  C01A  FFD9         	movff	lcd_4bit_initialize@lcd_4bit,fsr2l
  2883  00FBF0  C01B  FFDA         	movff	lcd_4bit_initialize@lcd_4bit+1,fsr2h
  2884  00FBF4  50DF               	movf	223,w,c
  2885  00FBF6  0B07               	andlw	7
  2886  00FBF8  6E1C               	movwf	??_lcd_4bit_initialize^0,c
  2887  00FBFA  5021               	movf	lcd_4bit_initialize@rs_pin^0,w,c
  2888  00FBFC  181C               	xorwf	??_lcd_4bit_initialize^0,w,c
  2889  00FBFE  0BF8               	andlw	-8
  2890  00FC00  181C               	xorwf	??_lcd_4bit_initialize^0,w,c
  2891  00FC02  6E21               	movwf	lcd_4bit_initialize@rs_pin^0,c
  2892  00FC04  C01A  FFD9         	movff	lcd_4bit_initialize@lcd_4bit,fsr2l
  2893  00FC08  C01B  FFDA         	movff	lcd_4bit_initialize@lcd_4bit+1,fsr2h
  2894  00FC0C  30DF               	rrcf	223,w,c
  2895  00FC0E  32E8               	rrcf	wreg,f,c
  2896  00FC10  32E8               	rrcf	wreg,f,c
  2897  00FC12  0B07               	andlw	7
  2898  00FC14  6E1C               	movwf	??_lcd_4bit_initialize^0,c
  2899  00FC16  461C               	rlncf	??_lcd_4bit_initialize^0,f,c
  2900  00FC18  461C               	rlncf	??_lcd_4bit_initialize^0,f,c
  2901  00FC1A  461C               	rlncf	??_lcd_4bit_initialize^0,f,c
  2902  00FC1C  5021               	movf	lcd_4bit_initialize@rs_pin^0,w,c
  2903  00FC1E  181C               	xorwf	??_lcd_4bit_initialize^0,w,c
  2904  00FC20  0BC7               	andlw	-57
  2905  00FC22  181C               	xorwf	??_lcd_4bit_initialize^0,w,c
  2906  00FC24  6E21               	movwf	lcd_4bit_initialize@rs_pin^0,c
  2907  00FC26  9C21               	bcf	lcd_4bit_initialize@rs_pin^0,6,c
  2908  00FC28  9E21               	bcf	lcd_4bit_initialize@rs_pin^0,7,c
  2909  00FC2A                     
  2910                           ;ECU/LCD/ecu_lcd.c: 32:         state &= gpio_pin_direction_initialize(&rs_pin);
  2911  00FC2A  0E21               	movlw	low lcd_4bit_initialize@rs_pin
  2912  00FC2C  6E01               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
  2913  00FC2E  0E00               	movlw	high lcd_4bit_initialize@rs_pin
  2914  00FC30  6E02               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
  2915  00FC32  ECEF  F07E         	call	_gpio_pin_direction_initialize	;wreg free
  2916  00FC36  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  2917  00FC38                     
  2918                           ;ECU/LCD/ecu_lcd.c: 33:         pin_config_t en_pin = {.port = lcd_4bit->lcd_en_pin.port
      +                          ,
  2919  00FC38  C045  F022         	movff	lcd_4bit_initialize@F2975,lcd_4bit_initialize@en_pin
  2920  00FC3C  EE20 F001          	lfsr	2,1
  2921  00FC40  501A               	movf	lcd_4bit_initialize@lcd_4bit^0,w,c
  2922  00FC42  26D9               	addwf	fsr2l,f,c
  2923  00FC44  501B               	movf	(lcd_4bit_initialize@lcd_4bit+1)^0,w,c
  2924  00FC46  22DA               	addwfc	fsr2h,f,c
  2925  00FC48  50DF               	movf	223,w,c
  2926  00FC4A  0B07               	andlw	7
  2927  00FC4C  6E1C               	movwf	??_lcd_4bit_initialize^0,c
  2928  00FC4E  5022               	movf	lcd_4bit_initialize@en_pin^0,w,c
  2929  00FC50  181C               	xorwf	??_lcd_4bit_initialize^0,w,c
  2930  00FC52  0BF8               	andlw	-8
  2931  00FC54  181C               	xorwf	??_lcd_4bit_initialize^0,w,c
  2932  00FC56  6E22               	movwf	lcd_4bit_initialize@en_pin^0,c
  2933  00FC58  EE20 F001          	lfsr	2,1
  2934  00FC5C  501A               	movf	lcd_4bit_initialize@lcd_4bit^0,w,c
  2935  00FC5E  26D9               	addwf	fsr2l,f,c
  2936  00FC60  501B               	movf	(lcd_4bit_initialize@lcd_4bit+1)^0,w,c
  2937  00FC62  22DA               	addwfc	fsr2h,f,c
  2938  00FC64  30DF               	rrcf	223,w,c
  2939  00FC66  32E8               	rrcf	wreg,f,c
  2940  00FC68  32E8               	rrcf	wreg,f,c
  2941  00FC6A  0B07               	andlw	7
  2942  00FC6C  6E1C               	movwf	??_lcd_4bit_initialize^0,c
  2943  00FC6E  461C               	rlncf	??_lcd_4bit_initialize^0,f,c
  2944  00FC70  461C               	rlncf	??_lcd_4bit_initialize^0,f,c
  2945  00FC72  461C               	rlncf	??_lcd_4bit_initialize^0,f,c
  2946  00FC74  5022               	movf	lcd_4bit_initialize@en_pin^0,w,c
  2947  00FC76  181C               	xorwf	??_lcd_4bit_initialize^0,w,c
  2948  00FC78  0BC7               	andlw	-57
  2949  00FC7A  181C               	xorwf	??_lcd_4bit_initialize^0,w,c
  2950  00FC7C  6E22               	movwf	lcd_4bit_initialize@en_pin^0,c
  2951  00FC7E  9C22               	bcf	lcd_4bit_initialize@en_pin^0,6,c
  2952  00FC80  9E22               	bcf	lcd_4bit_initialize@en_pin^0,7,c
  2953  00FC82                     
  2954                           ;ECU/LCD/ecu_lcd.c: 37:         state &= gpio_pin_direction_initialize(&en_pin);
  2955  00FC82  0E22               	movlw	low lcd_4bit_initialize@en_pin
  2956  00FC84  6E01               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
  2957  00FC86  0E00               	movlw	high lcd_4bit_initialize@en_pin
  2958  00FC88  6E02               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
  2959  00FC8A  ECEF  F07E         	call	_gpio_pin_direction_initialize	;wreg free
  2960  00FC8E  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  2961  00FC90                     
  2962                           ;ECU/LCD/ecu_lcd.c: 39:         for(uint8 local_index=0; local_index<4; local_index++)
  2963  00FC90  0E00               	movlw	0
  2964  00FC92  6E20               	movwf	lcd_4bit_initialize@local_index^0,c
  2965  00FC94                     l458:
  2966                           
  2967                           ;ECU/LCD/ecu_lcd.c: 40:         {;ECU/LCD/ecu_lcd.c: 41:             pin_config_t data_p
      +                          in = {.port = lcd_4bit->lcd_data_pins[local_index].port,
  2968  00FC94  C044  F023         	movff	lcd_4bit_initialize@F2978,lcd_4bit_initialize@data_pin
  2969  00FC98  5020               	movf	lcd_4bit_initialize@local_index^0,w,c
  2970  00FC9A  241A               	addwf	lcd_4bit_initialize@lcd_4bit^0,w,c
  2971  00FC9C  6E1C               	movwf	??_lcd_4bit_initialize^0,c
  2972  00FC9E  0E00               	movlw	0
  2973  00FCA0  201B               	addwfc	(lcd_4bit_initialize@lcd_4bit+1)^0,w,c
  2974  00FCA2  6E1D               	movwf	(??_lcd_4bit_initialize+1)^0,c
  2975  00FCA4  0E02               	movlw	2
  2976  00FCA6  241C               	addwf	??_lcd_4bit_initialize^0,w,c
  2977  00FCA8  6ED9               	movwf	fsr2l,c
  2978  00FCAA  0E00               	movlw	0
  2979  00FCAC  201D               	addwfc	(??_lcd_4bit_initialize+1)^0,w,c
  2980  00FCAE  6EDA               	movwf	fsr2h,c
  2981  00FCB0  50DF               	movf	223,w,c
  2982  00FCB2  0B07               	andlw	7
  2983  00FCB4  6E1E               	movwf	(??_lcd_4bit_initialize+2)^0,c
  2984  00FCB6  5023               	movf	lcd_4bit_initialize@data_pin^0,w,c
  2985  00FCB8  181E               	xorwf	(??_lcd_4bit_initialize+2)^0,w,c
  2986  00FCBA  0BF8               	andlw	-8
  2987  00FCBC  181E               	xorwf	(??_lcd_4bit_initialize+2)^0,w,c
  2988  00FCBE  6E23               	movwf	lcd_4bit_initialize@data_pin^0,c
  2989  00FCC0  5020               	movf	lcd_4bit_initialize@local_index^0,w,c
  2990  00FCC2  241A               	addwf	lcd_4bit_initialize@lcd_4bit^0,w,c
  2991  00FCC4  6E1C               	movwf	??_lcd_4bit_initialize^0,c
  2992  00FCC6  0E00               	movlw	0
  2993  00FCC8  201B               	addwfc	(lcd_4bit_initialize@lcd_4bit+1)^0,w,c
  2994  00FCCA  6E1D               	movwf	(??_lcd_4bit_initialize+1)^0,c
  2995  00FCCC  0E02               	movlw	2
  2996  00FCCE  241C               	addwf	??_lcd_4bit_initialize^0,w,c
  2997  00FCD0  6ED9               	movwf	fsr2l,c
  2998  00FCD2  0E00               	movlw	0
  2999  00FCD4  201D               	addwfc	(??_lcd_4bit_initialize+1)^0,w,c
  3000  00FCD6  6EDA               	movwf	fsr2h,c
  3001  00FCD8  30DF               	rrcf	223,w,c
  3002  00FCDA  32E8               	rrcf	wreg,f,c
  3003  00FCDC  32E8               	rrcf	wreg,f,c
  3004  00FCDE  0B07               	andlw	7
  3005  00FCE0  6E1E               	movwf	(??_lcd_4bit_initialize+2)^0,c
  3006  00FCE2  461E               	rlncf	(??_lcd_4bit_initialize+2)^0,f,c
  3007  00FCE4  461E               	rlncf	(??_lcd_4bit_initialize+2)^0,f,c
  3008  00FCE6  461E               	rlncf	(??_lcd_4bit_initialize+2)^0,f,c
  3009  00FCE8  5023               	movf	lcd_4bit_initialize@data_pin^0,w,c
  3010  00FCEA  181E               	xorwf	(??_lcd_4bit_initialize+2)^0,w,c
  3011  00FCEC  0BC7               	andlw	-57
  3012  00FCEE  181E               	xorwf	(??_lcd_4bit_initialize+2)^0,w,c
  3013  00FCF0  6E23               	movwf	lcd_4bit_initialize@data_pin^0,c
  3014  00FCF2  9C23               	bcf	lcd_4bit_initialize@data_pin^0,6,c
  3015  00FCF4  9E23               	bcf	lcd_4bit_initialize@data_pin^0,7,c
  3016  00FCF6                     
  3017                           ;ECU/LCD/ecu_lcd.c: 45:             state &= gpio_pin_direction_initialize(&data_pin);
  3018  00FCF6  0E23               	movlw	low lcd_4bit_initialize@data_pin
  3019  00FCF8  6E01               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
  3020  00FCFA  0E00               	movlw	high lcd_4bit_initialize@data_pin
  3021  00FCFC  6E02               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
  3022  00FCFE  ECEF  F07E         	call	_gpio_pin_direction_initialize	;wreg free
  3023  00FD02  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  3024  00FD04                     
  3025                           ;ECU/LCD/ecu_lcd.c: 46:         }
  3026  00FD04  2A20               	incf	lcd_4bit_initialize@local_index^0,f,c
  3027  00FD06  0E03               	movlw	3
  3028  00FD08  6420               	cpfsgt	lcd_4bit_initialize@local_index^0,c
  3029  00FD0A  EF89  F07E         	goto	u1711
  3030  00FD0E  EF8B  F07E         	goto	u1710
  3031  00FD12                     u1711:
  3032  00FD12  EF4A  F07E         	goto	l458
  3033  00FD16                     u1710:
  3034  00FD16                     
  3035                           ;ECU/LCD/ecu_lcd.c: 47:         _delay((unsigned long)((20)*(8000000/4000.0)));
  3036  00FD16  0E34               	movlw	52
  3037  00FD18  6E1C               	movwf	??_lcd_4bit_initialize^0,c
  3038  00FD1A  0EF2               	movlw	242
  3039  00FD1C                     u2667:
  3040  00FD1C  2EE8               	decfsz	wreg,f,c
  3041  00FD1E  D7FE               	bra	u2667
  3042  00FD20  2E1C               	decfsz	??_lcd_4bit_initialize^0,f,c
  3043  00FD22  D7FC               	bra	u2667
  3044  00FD24                     
  3045                           ;ECU/LCD/ecu_lcd.c: 48:         state &= lcd_send_higher_nibble(lcd_4bit, 0x38);
  3046  00FD24  C01A  F014         	movff	lcd_4bit_initialize@lcd_4bit,lcd_send_higher_nibble@lcd_4bit
  3047  00FD28  C01B  F015         	movff	lcd_4bit_initialize@lcd_4bit+1,lcd_send_higher_nibble@lcd_4bit+1
  3048  00FD2C  0E38               	movlw	56
  3049  00FD2E  6E16               	movwf	lcd_send_higher_nibble@data^0,c
  3050  00FD30  ECC5  F077         	call	_lcd_send_higher_nibble	;wreg free
  3051  00FD34  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  3052  00FD36                     
  3053                           ;ECU/LCD/ecu_lcd.c: 49:         _delay((unsigned long)((5)*(8000000/4000.0)));
  3054  00FD36  0E0D               	movlw	13
  3055  00FD38  6E1C               	movwf	??_lcd_4bit_initialize^0,c
  3056  00FD3A  0EFC               	movlw	252
  3057  00FD3C                     u2677:
  3058  00FD3C  2EE8               	decfsz	wreg,f,c
  3059  00FD3E  D7FE               	bra	u2677
  3060  00FD40  2E1C               	decfsz	??_lcd_4bit_initialize^0,f,c
  3061  00FD42  D7FC               	bra	u2677
  3062                           
  3063                           ;ECU/LCD/ecu_lcd.c: 50:         state &= lcd_send_higher_nibble(lcd_4bit, 0x38);
  3064  00FD44  C01A  F014         	movff	lcd_4bit_initialize@lcd_4bit,lcd_send_higher_nibble@lcd_4bit
  3065  00FD48  C01B  F015         	movff	lcd_4bit_initialize@lcd_4bit+1,lcd_send_higher_nibble@lcd_4bit+1
  3066  00FD4C  0E38               	movlw	56
  3067  00FD4E  6E16               	movwf	lcd_send_higher_nibble@data^0,c
  3068  00FD50  ECC5  F077         	call	_lcd_send_higher_nibble	;wreg free
  3069  00FD54  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  3070  00FD56                     
  3071                           ;ECU/LCD/ecu_lcd.c: 51:         _delay((unsigned long)((150)*(8000000/4000000.0)));
  3072  00FD56  0E64               	movlw	100
  3073  00FD58                     u2687:
  3074  00FD58  2EE8               	decfsz	wreg,f,c
  3075  00FD5A  D7FE               	bra	u2687
  3076  00FD5C                     
  3077                           ;ECU/LCD/ecu_lcd.c: 52:         state &= lcd_send_higher_nibble(lcd_4bit, 0x38);
  3078  00FD5C  C01A  F014         	movff	lcd_4bit_initialize@lcd_4bit,lcd_send_higher_nibble@lcd_4bit
  3079  00FD60  C01B  F015         	movff	lcd_4bit_initialize@lcd_4bit+1,lcd_send_higher_nibble@lcd_4bit+1
  3080  00FD64  0E38               	movlw	56
  3081  00FD66  6E16               	movwf	lcd_send_higher_nibble@data^0,c
  3082  00FD68  ECC5  F077         	call	_lcd_send_higher_nibble	;wreg free
  3083  00FD6C  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  3084  00FD6E                     
  3085                           ;ECU/LCD/ecu_lcd.c: 53:         state &= lcd_send_higher_nibble(lcd_4bit, 0x28);
  3086  00FD6E  C01A  F014         	movff	lcd_4bit_initialize@lcd_4bit,lcd_send_higher_nibble@lcd_4bit
  3087  00FD72  C01B  F015         	movff	lcd_4bit_initialize@lcd_4bit+1,lcd_send_higher_nibble@lcd_4bit+1
  3088  00FD76  0E28               	movlw	40
  3089  00FD78  6E16               	movwf	lcd_send_higher_nibble@data^0,c
  3090  00FD7A  ECC5  F077         	call	_lcd_send_higher_nibble	;wreg free
  3091  00FD7E  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  3092  00FD80                     
  3093                           ;ECU/LCD/ecu_lcd.c: 55:         state &= lcd_4bit_send_command(lcd_4bit, 0x28);
  3094  00FD80  C01A  F014         	movff	lcd_4bit_initialize@lcd_4bit,lcd_4bit_send_command@lcd_4bit
  3095  00FD84  C01B  F015         	movff	lcd_4bit_initialize@lcd_4bit+1,lcd_4bit_send_command@lcd_4bit+1
  3096  00FD88  0E28               	movlw	40
  3097  00FD8A  6E16               	movwf	lcd_4bit_send_command@command^0,c
  3098  00FD8C  ECA5  F079         	call	_lcd_4bit_send_command	;wreg free
  3099  00FD90  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  3100  00FD92                     
  3101                           ;ECU/LCD/ecu_lcd.c: 56:         state &= lcd_4bit_send_command(lcd_4bit, 0x01);
  3102  00FD92  C01A  F014         	movff	lcd_4bit_initialize@lcd_4bit,lcd_4bit_send_command@lcd_4bit
  3103  00FD96  C01B  F015         	movff	lcd_4bit_initialize@lcd_4bit+1,lcd_4bit_send_command@lcd_4bit+1
  3104  00FD9A  0E01               	movlw	1
  3105  00FD9C  6E16               	movwf	lcd_4bit_send_command@command^0,c
  3106  00FD9E  ECA5  F079         	call	_lcd_4bit_send_command	;wreg free
  3107  00FDA2  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  3108  00FDA4                     
  3109                           ;ECU/LCD/ecu_lcd.c: 57:         state &= lcd_4bit_send_command(lcd_4bit, 0x02);
  3110  00FDA4  C01A  F014         	movff	lcd_4bit_initialize@lcd_4bit,lcd_4bit_send_command@lcd_4bit
  3111  00FDA8  C01B  F015         	movff	lcd_4bit_initialize@lcd_4bit+1,lcd_4bit_send_command@lcd_4bit+1
  3112  00FDAC  0E02               	movlw	2
  3113  00FDAE  6E16               	movwf	lcd_4bit_send_command@command^0,c
  3114  00FDB0  ECA5  F079         	call	_lcd_4bit_send_command	;wreg free
  3115  00FDB4  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  3116  00FDB6                     
  3117                           ;ECU/LCD/ecu_lcd.c: 58:         state &= lcd_4bit_send_command(lcd_4bit, 0x0c);
  3118  00FDB6  C01A  F014         	movff	lcd_4bit_initialize@lcd_4bit,lcd_4bit_send_command@lcd_4bit
  3119  00FDBA  C01B  F015         	movff	lcd_4bit_initialize@lcd_4bit+1,lcd_4bit_send_command@lcd_4bit+1
  3120  00FDBE  0E0C               	movlw	12
  3121  00FDC0  6E16               	movwf	lcd_4bit_send_command@command^0,c
  3122  00FDC2  ECA5  F079         	call	_lcd_4bit_send_command	;wreg free
  3123  00FDC6  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  3124  00FDC8                     
  3125                           ;ECU/LCD/ecu_lcd.c: 59:         state &= lcd_4bit_send_command(lcd_4bit, 0x06);
  3126  00FDC8  C01A  F014         	movff	lcd_4bit_initialize@lcd_4bit,lcd_4bit_send_command@lcd_4bit
  3127  00FDCC  C01B  F015         	movff	lcd_4bit_initialize@lcd_4bit+1,lcd_4bit_send_command@lcd_4bit+1
  3128  00FDD0  0E06               	movlw	6
  3129  00FDD2  6E16               	movwf	lcd_4bit_send_command@command^0,c
  3130  00FDD4  ECA5  F079         	call	_lcd_4bit_send_command	;wreg free
  3131  00FDD8  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  3132  00FDDA                     l3204:
  3133                           
  3134                           ;ECU/LCD/ecu_lcd.c: 74:     return state;
  3135  00FDDA  501F               	movf	lcd_4bit_initialize@state^0,w,c
  3136  00FDDC  0012               	return		;funcret
  3137  00FDDE                     __end_of_lcd_4bit_initialize:
  3138                           	callstack 0
  3139                           
  3140 ;; *************** function _lcd_send_higher_nibble *****************
  3141 ;; Defined at:
  3142 ;;		line 454 in file "ECU/LCD/ecu_lcd.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  lcd_4bit        2   19[COMRAM] PTR const struct .
  3145 ;;		 -> lcd_4bit(6), 
  3146 ;;  data            1   21[COMRAM] unsigned char 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  rs_pin          1   24[COMRAM] struct .
  3149 ;;  state           1   23[COMRAM] unsigned char 
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  1    wreg      unsigned char 
  3152 ;; Registers used:
  3153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3159 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3161 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3163 ;;Total ram usage:        6 bytes
  3164 ;; Hardware stack levels used: 1
  3165 ;; Hardware stack levels required when called: 2
  3166 ;; This function calls:
  3167 ;;		_gpio_pin_write_logic
  3168 ;;		_lcd_4bit_send_enable_signal
  3169 ;;		_lcd_send_4bits
  3170 ;; This function is called by:
  3171 ;;		_lcd_4bit_initialize
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           	psect	text15
  3176  00EF8A                     __ptext15:
  3177                           	callstack 0
  3178  00EF8A                     _lcd_send_higher_nibble:
  3179                           	callstack 26
  3180  00EF8A                     
  3181                           ;ECU/LCD/ecu_lcd.c: 454: static Std_ReturnType lcd_send_higher_nibble(const lcd_4bit_t* 
      +                          lcd_4bit, uint8 data);ECU/LCD/ecu_lcd.c: 455: {;ECU/LCD/ecu_lcd.c: 456:     Std_ReturnTy
      +                          pe state = (Std_ReturnType)1;
  3182  00EF8A  0E01               	movlw	1
  3183  00EF8C  6E18               	movwf	lcd_send_higher_nibble@state^0,c
  3184  00EF8E                     
  3185                           ;ECU/LCD/ecu_lcd.c: 457:     if(lcd_4bit == ((void*)0)) return (Std_ReturnType)0;
  3186  00EF8E  5014               	movf	lcd_send_higher_nibble@lcd_4bit^0,w,c
  3187  00EF90  1015               	iorwf	(lcd_send_higher_nibble@lcd_4bit+1)^0,w,c
  3188  00EF92  A4D8               	btfss	status,2,c
  3189  00EF94  EFCE  F077         	goto	u1551
  3190  00EF98  EFD0  F077         	goto	u1550
  3191  00EF9C                     u1551:
  3192  00EF9C  EFD3  F077         	goto	l628
  3193  00EFA0                     u1550:
  3194  00EFA0  0E00               	movlw	0
  3195  00EFA2  EF0E  F078         	goto	l629
  3196  00EFA6                     l628:
  3197                           
  3198                           ;ECU/LCD/ecu_lcd.c: 459:     pin_config_t rs_pin = {
  3199  00EFA6  C03C  F019         	movff	lcd_send_higher_nibble@F3104,lcd_send_higher_nibble@rs_pin
  3200  00EFAA  C014  FFD9         	movff	lcd_send_higher_nibble@lcd_4bit,fsr2l
  3201  00EFAE  C015  FFDA         	movff	lcd_send_higher_nibble@lcd_4bit+1,fsr2h
  3202  00EFB2  50DF               	movf	223,w,c
  3203  00EFB4  0B07               	andlw	7
  3204  00EFB6  6E17               	movwf	??_lcd_send_higher_nibble^0,c
  3205  00EFB8  5019               	movf	lcd_send_higher_nibble@rs_pin^0,w,c
  3206  00EFBA  1817               	xorwf	??_lcd_send_higher_nibble^0,w,c
  3207  00EFBC  0BF8               	andlw	-8
  3208  00EFBE  1817               	xorwf	??_lcd_send_higher_nibble^0,w,c
  3209  00EFC0  6E19               	movwf	lcd_send_higher_nibble@rs_pin^0,c
  3210  00EFC2  C014  FFD9         	movff	lcd_send_higher_nibble@lcd_4bit,fsr2l
  3211  00EFC6  C015  FFDA         	movff	lcd_send_higher_nibble@lcd_4bit+1,fsr2h
  3212  00EFCA  30DF               	rrcf	223,w,c
  3213  00EFCC  32E8               	rrcf	wreg,f,c
  3214  00EFCE  32E8               	rrcf	wreg,f,c
  3215  00EFD0  0B07               	andlw	7
  3216  00EFD2  6E17               	movwf	??_lcd_send_higher_nibble^0,c
  3217  00EFD4  4617               	rlncf	??_lcd_send_higher_nibble^0,f,c
  3218  00EFD6  4617               	rlncf	??_lcd_send_higher_nibble^0,f,c
  3219  00EFD8  4617               	rlncf	??_lcd_send_higher_nibble^0,f,c
  3220  00EFDA  5019               	movf	lcd_send_higher_nibble@rs_pin^0,w,c
  3221  00EFDC  1817               	xorwf	??_lcd_send_higher_nibble^0,w,c
  3222  00EFDE  0BC7               	andlw	-57
  3223  00EFE0  1817               	xorwf	??_lcd_send_higher_nibble^0,w,c
  3224  00EFE2  6E19               	movwf	lcd_send_higher_nibble@rs_pin^0,c
  3225  00EFE4  9C19               	bcf	lcd_send_higher_nibble@rs_pin^0,6,c
  3226  00EFE6  9E19               	bcf	lcd_send_higher_nibble@rs_pin^0,7,c
  3227  00EFE8                     
  3228                           ;ECU/LCD/ecu_lcd.c: 465:     gpio_pin_write_logic(&rs_pin, GPIO_LOW);
  3229  00EFE8  0E19               	movlw	low lcd_send_higher_nibble@rs_pin
  3230  00EFEA  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3231  00EFEC  0E00               	movlw	high lcd_send_higher_nibble@rs_pin
  3232  00EFEE  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  3233  00EFF0  0E00               	movlw	0
  3234  00EFF2  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  3235  00EFF4  EC68  F07C         	call	_gpio_pin_write_logic	;wreg free
  3236  00EFF8                     
  3237                           ;ECU/LCD/ecu_lcd.c: 467:     state &= lcd_send_4bits(lcd_4bit, data >> 4);
  3238  00EFF8  C014  F00B         	movff	lcd_send_higher_nibble@lcd_4bit,lcd_send_4bits@lcd_4bit
  3239  00EFFC  C015  F00C         	movff	lcd_send_higher_nibble@lcd_4bit+1,lcd_send_4bits@lcd_4bit+1
  3240  00F000  3816               	swapf	lcd_send_higher_nibble@data^0,w,c
  3241  00F002  0B0F               	andlw	15
  3242  00F004  6E0D               	movwf	lcd_send_4bits@data_or_command^0,c
  3243  00F006  EC5D  F07A         	call	_lcd_send_4bits	;wreg free
  3244  00F00A  1618               	andwf	lcd_send_higher_nibble@state^0,f,c
  3245  00F00C                     
  3246                           ;ECU/LCD/ecu_lcd.c: 468:     state &= lcd_4bit_send_enable_signal(lcd_4bit);
  3247  00F00C  C014  F00B         	movff	lcd_send_higher_nibble@lcd_4bit,lcd_4bit_send_enable_signal@lcd_4bit
  3248  00F010  C015  F00C         	movff	lcd_send_higher_nibble@lcd_4bit+1,lcd_4bit_send_enable_signal@lcd_4bit+1
  3249  00F014  ECA5  F078         	call	_lcd_4bit_send_enable_signal	;wreg free
  3250  00F018  1618               	andwf	lcd_send_higher_nibble@state^0,f,c
  3251  00F01A                     
  3252                           ;ECU/LCD/ecu_lcd.c: 469:     return state;
  3253  00F01A  5018               	movf	lcd_send_higher_nibble@state^0,w,c
  3254  00F01C                     l629:
  3255  00F01C  0012               	return		;funcret
  3256  00F01E                     __end_of_lcd_send_higher_nibble:
  3257                           	callstack 0
  3258                           
  3259 ;; *************** function _lcd_4bit_send_command *****************
  3260 ;; Defined at:
  3261 ;;		line 77 in file "ECU/LCD/ecu_lcd.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  lcd_4bit        2   19[COMRAM] PTR const struct .
  3264 ;;		 -> lcd_4bit(6), 
  3265 ;;  command         1   21[COMRAM] const unsigned char 
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;  rs_pin          1   24[COMRAM] struct .
  3268 ;;  state           1   23[COMRAM] unsigned char 
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      unsigned char 
  3271 ;; Registers used:
  3272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3278 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;Total ram usage:        6 bytes
  3283 ;; Hardware stack levels used: 1
  3284 ;; Hardware stack levels required when called: 2
  3285 ;; This function calls:
  3286 ;;		_gpio_pin_write_logic
  3287 ;;		_lcd_4bit_send_enable_signal
  3288 ;;		_lcd_send_4bits
  3289 ;; This function is called by:
  3290 ;;		_lcd_4bit_initialize
  3291 ;;		_lcd_4bit_send_custome_char
  3292 ;;		_lcd_4bit_set_position
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           	psect	text16
  3297  00F34A                     __ptext16:
  3298                           	callstack 0
  3299  00F34A                     _lcd_4bit_send_command:
  3300                           	callstack 27
  3301  00F34A                     
  3302                           ;ECU/LCD/ecu_lcd.c: 77: Std_ReturnType lcd_4bit_send_command(const lcd_4bit_t* lcd_4bit,
      +                           const uint8 command);ECU/LCD/ecu_lcd.c: 78: {;ECU/LCD/ecu_lcd.c: 79:     Std_ReturnType
      +                           state = (Std_ReturnType)1;
  3303  00F34A  0E01               	movlw	1
  3304  00F34C  6E18               	movwf	lcd_4bit_send_command@state^0,c
  3305  00F34E                     
  3306                           ;ECU/LCD/ecu_lcd.c: 80:     if(lcd_4bit == ((void*)0))
  3307  00F34E  5014               	movf	lcd_4bit_send_command@lcd_4bit^0,w,c
  3308  00F350  1015               	iorwf	(lcd_4bit_send_command@lcd_4bit+1)^0,w,c
  3309  00F352  A4D8               	btfss	status,2,c
  3310  00F354  EFAE  F079         	goto	u1441
  3311  00F358  EFB0  F079         	goto	u1440
  3312  00F35C                     u1441:
  3313  00F35C  EFB4  F079         	goto	l465
  3314  00F360                     u1440:
  3315  00F360                     
  3316                           ;ECU/LCD/ecu_lcd.c: 81:     {;ECU/LCD/ecu_lcd.c: 82:         state = (Std_ReturnType)0;
  3317  00F360  0E00               	movlw	0
  3318  00F362  6E18               	movwf	lcd_4bit_send_command@state^0,c
  3319                           
  3320                           ;ECU/LCD/ecu_lcd.c: 83:     }
  3321  00F364  EFFF  F079         	goto	l2910
  3322  00F368                     l465:
  3323                           
  3324                           ;ECU/LCD/ecu_lcd.c: 85:     {;ECU/LCD/ecu_lcd.c: 86:         pin_config_t rs_pin={.port=
      +                          lcd_4bit->lcd_rs_pin.port,.pin=lcd_4bit->lcd_rs_pin.pin,.direction=GPIO_OUTPUT,.logic=GP
      +                          IO_LOW};
  3325  00F368  C043  F019         	movff	lcd_4bit_send_command@F2984,lcd_4bit_send_command@rs_pin
  3326  00F36C  C014  FFD9         	movff	lcd_4bit_send_command@lcd_4bit,fsr2l
  3327  00F370  C015  FFDA         	movff	lcd_4bit_send_command@lcd_4bit+1,fsr2h
  3328  00F374  50DF               	movf	223,w,c
  3329  00F376  0B07               	andlw	7
  3330  00F378  6E17               	movwf	??_lcd_4bit_send_command^0,c
  3331  00F37A  5019               	movf	lcd_4bit_send_command@rs_pin^0,w,c
  3332  00F37C  1817               	xorwf	??_lcd_4bit_send_command^0,w,c
  3333  00F37E  0BF8               	andlw	-8
  3334  00F380  1817               	xorwf	??_lcd_4bit_send_command^0,w,c
  3335  00F382  6E19               	movwf	lcd_4bit_send_command@rs_pin^0,c
  3336  00F384  C014  FFD9         	movff	lcd_4bit_send_command@lcd_4bit,fsr2l
  3337  00F388  C015  FFDA         	movff	lcd_4bit_send_command@lcd_4bit+1,fsr2h
  3338  00F38C  30DF               	rrcf	223,w,c
  3339  00F38E  32E8               	rrcf	wreg,f,c
  3340  00F390  32E8               	rrcf	wreg,f,c
  3341  00F392  0B07               	andlw	7
  3342  00F394  6E17               	movwf	??_lcd_4bit_send_command^0,c
  3343  00F396  4617               	rlncf	??_lcd_4bit_send_command^0,f,c
  3344  00F398  4617               	rlncf	??_lcd_4bit_send_command^0,f,c
  3345  00F39A  4617               	rlncf	??_lcd_4bit_send_command^0,f,c
  3346  00F39C  5019               	movf	lcd_4bit_send_command@rs_pin^0,w,c
  3347  00F39E  1817               	xorwf	??_lcd_4bit_send_command^0,w,c
  3348  00F3A0  0BC7               	andlw	-57
  3349  00F3A2  1817               	xorwf	??_lcd_4bit_send_command^0,w,c
  3350  00F3A4  6E19               	movwf	lcd_4bit_send_command@rs_pin^0,c
  3351  00F3A6  9C19               	bcf	lcd_4bit_send_command@rs_pin^0,6,c
  3352  00F3A8  9E19               	bcf	lcd_4bit_send_command@rs_pin^0,7,c
  3353  00F3AA                     
  3354                           ;ECU/LCD/ecu_lcd.c: 87:         state &= gpio_pin_write_logic(&rs_pin,GPIO_LOW);
  3355  00F3AA  0E19               	movlw	low lcd_4bit_send_command@rs_pin
  3356  00F3AC  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3357  00F3AE  0E00               	movlw	high lcd_4bit_send_command@rs_pin
  3358  00F3B0  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  3359  00F3B2  0E00               	movlw	0
  3360  00F3B4  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  3361  00F3B6  EC68  F07C         	call	_gpio_pin_write_logic	;wreg free
  3362  00F3BA  1618               	andwf	lcd_4bit_send_command@state^0,f,c
  3363  00F3BC                     
  3364                           ;ECU/LCD/ecu_lcd.c: 89:         state &= lcd_send_4bits(lcd_4bit,command >> 4);
  3365  00F3BC  C014  F00B         	movff	lcd_4bit_send_command@lcd_4bit,lcd_send_4bits@lcd_4bit
  3366  00F3C0  C015  F00C         	movff	lcd_4bit_send_command@lcd_4bit+1,lcd_send_4bits@lcd_4bit+1
  3367  00F3C4  3816               	swapf	lcd_4bit_send_command@command^0,w,c
  3368  00F3C6  0B0F               	andlw	15
  3369  00F3C8  6E0D               	movwf	lcd_send_4bits@data_or_command^0,c
  3370  00F3CA  EC5D  F07A         	call	_lcd_send_4bits	;wreg free
  3371  00F3CE  1618               	andwf	lcd_4bit_send_command@state^0,f,c
  3372  00F3D0                     
  3373                           ;ECU/LCD/ecu_lcd.c: 90:         state &= lcd_4bit_send_enable_signal(lcd_4bit);
  3374  00F3D0  C014  F00B         	movff	lcd_4bit_send_command@lcd_4bit,lcd_4bit_send_enable_signal@lcd_4bit
  3375  00F3D4  C015  F00C         	movff	lcd_4bit_send_command@lcd_4bit+1,lcd_4bit_send_enable_signal@lcd_4bit+1
  3376  00F3D8  ECA5  F078         	call	_lcd_4bit_send_enable_signal	;wreg free
  3377  00F3DC  1618               	andwf	lcd_4bit_send_command@state^0,f,c
  3378  00F3DE                     
  3379                           ;ECU/LCD/ecu_lcd.c: 91:         state &= lcd_send_4bits(lcd_4bit,command);
  3380  00F3DE  C014  F00B         	movff	lcd_4bit_send_command@lcd_4bit,lcd_send_4bits@lcd_4bit
  3381  00F3E2  C015  F00C         	movff	lcd_4bit_send_command@lcd_4bit+1,lcd_send_4bits@lcd_4bit+1
  3382  00F3E6  C016  F00D         	movff	lcd_4bit_send_command@command,lcd_send_4bits@data_or_command
  3383  00F3EA  EC5D  F07A         	call	_lcd_send_4bits	;wreg free
  3384  00F3EE  1618               	andwf	lcd_4bit_send_command@state^0,f,c
  3385  00F3F0                     
  3386                           ;ECU/LCD/ecu_lcd.c: 92:         state &= lcd_4bit_send_enable_signal(lcd_4bit);
  3387  00F3F0  C014  F00B         	movff	lcd_4bit_send_command@lcd_4bit,lcd_4bit_send_enable_signal@lcd_4bit
  3388  00F3F4  C015  F00C         	movff	lcd_4bit_send_command@lcd_4bit+1,lcd_4bit_send_enable_signal@lcd_4bit+1
  3389  00F3F8  ECA5  F078         	call	_lcd_4bit_send_enable_signal	;wreg free
  3390  00F3FC  1618               	andwf	lcd_4bit_send_command@state^0,f,c
  3391  00F3FE                     l2910:
  3392                           
  3393                           ;ECU/LCD/ecu_lcd.c: 94:     return state;
  3394  00F3FE  5018               	movf	lcd_4bit_send_command@state^0,w,c
  3395  00F400  0012               	return		;funcret
  3396  00F402                     __end_of_lcd_4bit_send_command:
  3397                           	callstack 0
  3398                           
  3399 ;; *************** function _lcd_send_4bits *****************
  3400 ;; Defined at:
  3401 ;;		line 473 in file "ECU/LCD/ecu_lcd.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;  lcd_4bit        2   10[COMRAM] PTR const struct .
  3404 ;;		 -> lcd_4bit(6), 
  3405 ;;  data_or_comm    1   12[COMRAM] unsigned char 
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;  data_pin        1   17[COMRAM] struct .
  3408 ;;  local_index     1   18[COMRAM] unsigned char 
  3409 ;;  state           1   16[COMRAM] unsigned char 
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      unsigned char 
  3412 ;; Registers used:
  3413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3419 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3421 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3422 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3423 ;;Total ram usage:        9 bytes
  3424 ;; Hardware stack levels used: 1
  3425 ;; Hardware stack levels required when called: 1
  3426 ;; This function calls:
  3427 ;;		_gpio_pin_write_logic
  3428 ;; This function is called by:
  3429 ;;		_lcd_4bit_send_command
  3430 ;;		_lcd_4bit_send_char_data
  3431 ;;		_lcd_send_higher_nibble
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           	psect	text17
  3436  00F4BA                     __ptext17:
  3437                           	callstack 0
  3438  00F4BA                     _lcd_send_4bits:
  3439                           	callstack 27
  3440  00F4BA                     
  3441                           ;ECU/LCD/ecu_lcd.c: 473: static Std_ReturnType lcd_send_4bits(const lcd_4bit_t *lcd_4bit
      +                          , uint8 data_or_command);ECU/LCD/ecu_lcd.c: 474: {;ECU/LCD/ecu_lcd.c: 475:     Std_Retur
      +                          nType state = (Std_ReturnType)1;
  3442  00F4BA  0E01               	movlw	1
  3443  00F4BC  6E11               	movwf	lcd_send_4bits@state^0,c
  3444  00F4BE                     
  3445                           ;ECU/LCD/ecu_lcd.c: 476:     if(lcd_4bit == ((void*)0))
  3446  00F4BE  500B               	movf	lcd_send_4bits@lcd_4bit^0,w,c
  3447  00F4C0  100C               	iorwf	(lcd_send_4bits@lcd_4bit+1)^0,w,c
  3448  00F4C2  A4D8               	btfss	status,2,c
  3449  00F4C4  EF66  F07A         	goto	u1361
  3450  00F4C8  EF68  F07A         	goto	u1360
  3451  00F4CC                     u1361:
  3452  00F4CC  EF6C  F07A         	goto	l2798
  3453  00F4D0                     u1360:
  3454  00F4D0                     
  3455                           ;ECU/LCD/ecu_lcd.c: 477:     {;ECU/LCD/ecu_lcd.c: 478:         state = (Std_ReturnType)0
      +                          ;
  3456  00F4D0  0E00               	movlw	0
  3457  00F4D2  6E11               	movwf	lcd_send_4bits@state^0,c
  3458                           
  3459                           ;ECU/LCD/ecu_lcd.c: 479:     }
  3460  00F4D4  EFBC  F07A         	goto	l2812
  3461  00F4D8                     l2798:
  3462                           
  3463                           ;ECU/LCD/ecu_lcd.c: 481:     {;ECU/LCD/ecu_lcd.c: 482:         for(uint8 local_index=0; 
      +                          local_index<4; local_index++)
  3464  00F4D8  0E00               	movlw	0
  3465  00F4DA  6E13               	movwf	lcd_send_4bits@local_index^0,c
  3466  00F4DC                     l636:
  3467                           
  3468                           ;ECU/LCD/ecu_lcd.c: 483:         {;ECU/LCD/ecu_lcd.c: 484:             pin_config_t data
      +                          _pin = {.port = lcd_4bit->lcd_data_pins[local_index].port,
  3469  00F4DC  C03B  F012         	movff	lcd_send_4bits@F3111,lcd_send_4bits@data_pin
  3470  00F4E0  5013               	movf	lcd_send_4bits@local_index^0,w,c
  3471  00F4E2  240B               	addwf	lcd_send_4bits@lcd_4bit^0,w,c
  3472  00F4E4  6E0E               	movwf	??_lcd_send_4bits^0,c
  3473  00F4E6  0E00               	movlw	0
  3474  00F4E8  200C               	addwfc	(lcd_send_4bits@lcd_4bit+1)^0,w,c
  3475  00F4EA  6E0F               	movwf	(??_lcd_send_4bits+1)^0,c
  3476  00F4EC  0E02               	movlw	2
  3477  00F4EE  240E               	addwf	??_lcd_send_4bits^0,w,c
  3478  00F4F0  6ED9               	movwf	fsr2l,c
  3479  00F4F2  0E00               	movlw	0
  3480  00F4F4  200F               	addwfc	(??_lcd_send_4bits+1)^0,w,c
  3481  00F4F6  6EDA               	movwf	fsr2h,c
  3482  00F4F8  50DF               	movf	223,w,c
  3483  00F4FA  0B07               	andlw	7
  3484  00F4FC  6E10               	movwf	(??_lcd_send_4bits+2)^0,c
  3485  00F4FE  5012               	movf	lcd_send_4bits@data_pin^0,w,c
  3486  00F500  1810               	xorwf	(??_lcd_send_4bits+2)^0,w,c
  3487  00F502  0BF8               	andlw	-8
  3488  00F504  1810               	xorwf	(??_lcd_send_4bits+2)^0,w,c
  3489  00F506  6E12               	movwf	lcd_send_4bits@data_pin^0,c
  3490  00F508  5013               	movf	lcd_send_4bits@local_index^0,w,c
  3491  00F50A  240B               	addwf	lcd_send_4bits@lcd_4bit^0,w,c
  3492  00F50C  6E0E               	movwf	??_lcd_send_4bits^0,c
  3493  00F50E  0E00               	movlw	0
  3494  00F510  200C               	addwfc	(lcd_send_4bits@lcd_4bit+1)^0,w,c
  3495  00F512  6E0F               	movwf	(??_lcd_send_4bits+1)^0,c
  3496  00F514  0E02               	movlw	2
  3497  00F516  240E               	addwf	??_lcd_send_4bits^0,w,c
  3498  00F518  6ED9               	movwf	fsr2l,c
  3499  00F51A  0E00               	movlw	0
  3500  00F51C  200F               	addwfc	(??_lcd_send_4bits+1)^0,w,c
  3501  00F51E  6EDA               	movwf	fsr2h,c
  3502  00F520  30DF               	rrcf	223,w,c
  3503  00F522  32E8               	rrcf	wreg,f,c
  3504  00F524  32E8               	rrcf	wreg,f,c
  3505  00F526  0B07               	andlw	7
  3506  00F528  6E10               	movwf	(??_lcd_send_4bits+2)^0,c
  3507  00F52A  4610               	rlncf	(??_lcd_send_4bits+2)^0,f,c
  3508  00F52C  4610               	rlncf	(??_lcd_send_4bits+2)^0,f,c
  3509  00F52E  4610               	rlncf	(??_lcd_send_4bits+2)^0,f,c
  3510  00F530  5012               	movf	lcd_send_4bits@data_pin^0,w,c
  3511  00F532  1810               	xorwf	(??_lcd_send_4bits+2)^0,w,c
  3512  00F534  0BC7               	andlw	-57
  3513  00F536  1810               	xorwf	(??_lcd_send_4bits+2)^0,w,c
  3514  00F538  6E12               	movwf	lcd_send_4bits@data_pin^0,c
  3515  00F53A                     
  3516                           ;ECU/LCD/ecu_lcd.c: 486:             state &= gpio_pin_write_logic(&data_pin, (data_or_c
      +                          ommand >> local_index) & 0x01);
  3517  00F53A  0E12               	movlw	low lcd_send_4bits@data_pin
  3518  00F53C  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3519  00F53E  0E00               	movlw	high lcd_send_4bits@data_pin
  3520  00F540  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  3521  00F542  C013  F00E         	movff	lcd_send_4bits@local_index,??_lcd_send_4bits
  3522  00F546  C00D  F00F         	movff	lcd_send_4bits@data_or_command,??_lcd_send_4bits+1
  3523  00F54A  2A0E               	incf	??_lcd_send_4bits^0,f,c
  3524  00F54C  EFAA  F07A         	goto	u1374
  3525  00F550                     u1375:
  3526  00F550  90D8               	bcf	status,0,c
  3527  00F552  320F               	rrcf	(??_lcd_send_4bits+1)^0,f,c
  3528  00F554                     u1374:
  3529  00F554  2E0E               	decfsz	??_lcd_send_4bits^0,f,c
  3530  00F556  EFA8  F07A         	goto	u1375
  3531  00F55A  500F               	movf	(??_lcd_send_4bits+1)^0,w,c
  3532  00F55C  0B01               	andlw	1
  3533  00F55E  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  3534  00F560  EC68  F07C         	call	_gpio_pin_write_logic	;wreg free
  3535  00F564  1611               	andwf	lcd_send_4bits@state^0,f,c
  3536  00F566                     
  3537                           ;ECU/LCD/ecu_lcd.c: 487:         }
  3538  00F566  2A13               	incf	lcd_send_4bits@local_index^0,f,c
  3539  00F568  0E03               	movlw	3
  3540  00F56A  6413               	cpfsgt	lcd_send_4bits@local_index^0,c
  3541  00F56C  EFBA  F07A         	goto	u1381
  3542  00F570  EFBC  F07A         	goto	u1380
  3543  00F574                     u1381:
  3544  00F574  EF6E  F07A         	goto	l636
  3545  00F578                     u1380:
  3546  00F578                     l2812:
  3547                           
  3548                           ;ECU/LCD/ecu_lcd.c: 489:     return state;
  3549  00F578  5011               	movf	lcd_send_4bits@state^0,w,c
  3550  00F57A  0012               	return		;funcret
  3551  00F57C                     __end_of_lcd_send_4bits:
  3552                           	callstack 0
  3553                           
  3554 ;; *************** function _lcd_4bit_send_enable_signal *****************
  3555 ;; Defined at:
  3556 ;;		line 492 in file "ECU/LCD/ecu_lcd.c"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;  lcd_4bit        2   10[COMRAM] PTR const struct .
  3559 ;;		 -> lcd_4bit(6), 
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;  en_pin          1   14[COMRAM] struct .
  3562 ;;  state           1   13[COMRAM] unsigned char 
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  1    wreg      unsigned char 
  3565 ;; Registers used:
  3566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3572 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3573 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3574 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3575 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3576 ;;Total ram usage:        5 bytes
  3577 ;; Hardware stack levels used: 1
  3578 ;; Hardware stack levels required when called: 1
  3579 ;; This function calls:
  3580 ;;		_gpio_pin_write_logic
  3581 ;; This function is called by:
  3582 ;;		_lcd_4bit_send_command
  3583 ;;		_lcd_4bit_send_char_data
  3584 ;;		_lcd_send_higher_nibble
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           	psect	text18
  3589  00F14A                     __ptext18:
  3590                           	callstack 0
  3591  00F14A                     _lcd_4bit_send_enable_signal:
  3592                           	callstack 27
  3593  00F14A                     
  3594                           ;ECU/LCD/ecu_lcd.c: 492: static Std_ReturnType lcd_4bit_send_enable_signal(const lcd_4bi
      +                          t_t *lcd_4bit);ECU/LCD/ecu_lcd.c: 493: {;ECU/LCD/ecu_lcd.c: 494:     Std_ReturnType stat
      +                          e = (Std_ReturnType)1;
  3595  00F14A  0E01               	movlw	1
  3596  00F14C  6E0E               	movwf	lcd_4bit_send_enable_signal@state^0,c
  3597  00F14E                     
  3598                           ;ECU/LCD/ecu_lcd.c: 495:     if(lcd_4bit == ((void*)0))
  3599  00F14E  500B               	movf	lcd_4bit_send_enable_signal@lcd_4bit^0,w,c
  3600  00F150  100C               	iorwf	(lcd_4bit_send_enable_signal@lcd_4bit+1)^0,w,c
  3601  00F152  A4D8               	btfss	status,2,c
  3602  00F154  EFAE  F078         	goto	u1391
  3603  00F158  EFB0  F078         	goto	u1390
  3604  00F15C                     u1391:
  3605  00F15C  EFB4  F078         	goto	l643
  3606  00F160                     u1390:
  3607  00F160                     
  3608                           ;ECU/LCD/ecu_lcd.c: 496:     {;ECU/LCD/ecu_lcd.c: 497:         state = (Std_ReturnType)0
      +                          ;
  3609  00F160  0E00               	movlw	0
  3610  00F162  6E0E               	movwf	lcd_4bit_send_enable_signal@state^0,c
  3611                           
  3612                           ;ECU/LCD/ecu_lcd.c: 498:     }
  3613  00F164  EFF6  F078         	goto	l2836
  3614  00F168                     l643:
  3615                           
  3616                           ;ECU/LCD/ecu_lcd.c: 500:     {;ECU/LCD/ecu_lcd.c: 501:         pin_config_t en_pin={.por
      +                          t=lcd_4bit->lcd_en_pin.port,.pin=lcd_4bit->lcd_en_pin.pin,.direction=GPIO_OUTPUT,.logic=
      +                          GPIO_LOW};
  3617  00F168  C03A  F00F         	movff	lcd_4bit_send_enable_signal@F3116,lcd_4bit_send_enable_signal@en_pin
  3618  00F16C  EE20 F001          	lfsr	2,1
  3619  00F170  500B               	movf	lcd_4bit_send_enable_signal@lcd_4bit^0,w,c
  3620  00F172  26D9               	addwf	fsr2l,f,c
  3621  00F174  500C               	movf	(lcd_4bit_send_enable_signal@lcd_4bit+1)^0,w,c
  3622  00F176  22DA               	addwfc	fsr2h,f,c
  3623  00F178  50DF               	movf	223,w,c
  3624  00F17A  0B07               	andlw	7
  3625  00F17C  6E0D               	movwf	??_lcd_4bit_send_enable_signal^0,c
  3626  00F17E  500F               	movf	lcd_4bit_send_enable_signal@en_pin^0,w,c
  3627  00F180  180D               	xorwf	??_lcd_4bit_send_enable_signal^0,w,c
  3628  00F182  0BF8               	andlw	-8
  3629  00F184  180D               	xorwf	??_lcd_4bit_send_enable_signal^0,w,c
  3630  00F186  6E0F               	movwf	lcd_4bit_send_enable_signal@en_pin^0,c
  3631  00F188  EE20 F001          	lfsr	2,1
  3632  00F18C  500B               	movf	lcd_4bit_send_enable_signal@lcd_4bit^0,w,c
  3633  00F18E  26D9               	addwf	fsr2l,f,c
  3634  00F190  500C               	movf	(lcd_4bit_send_enable_signal@lcd_4bit+1)^0,w,c
  3635  00F192  22DA               	addwfc	fsr2h,f,c
  3636  00F194  30DF               	rrcf	223,w,c
  3637  00F196  32E8               	rrcf	wreg,f,c
  3638  00F198  32E8               	rrcf	wreg,f,c
  3639  00F19A  0B07               	andlw	7
  3640  00F19C  6E0D               	movwf	??_lcd_4bit_send_enable_signal^0,c
  3641  00F19E  460D               	rlncf	??_lcd_4bit_send_enable_signal^0,f,c
  3642  00F1A0  460D               	rlncf	??_lcd_4bit_send_enable_signal^0,f,c
  3643  00F1A2  460D               	rlncf	??_lcd_4bit_send_enable_signal^0,f,c
  3644  00F1A4  500F               	movf	lcd_4bit_send_enable_signal@en_pin^0,w,c
  3645  00F1A6  180D               	xorwf	??_lcd_4bit_send_enable_signal^0,w,c
  3646  00F1A8  0BC7               	andlw	-57
  3647  00F1AA  180D               	xorwf	??_lcd_4bit_send_enable_signal^0,w,c
  3648  00F1AC  6E0F               	movwf	lcd_4bit_send_enable_signal@en_pin^0,c
  3649  00F1AE  9C0F               	bcf	lcd_4bit_send_enable_signal@en_pin^0,6,c
  3650  00F1B0  9E0F               	bcf	lcd_4bit_send_enable_signal@en_pin^0,7,c
  3651  00F1B2                     
  3652                           ;ECU/LCD/ecu_lcd.c: 502:         state &= gpio_pin_write_logic(&en_pin,GPIO_HIGH);
  3653  00F1B2  0E0F               	movlw	low lcd_4bit_send_enable_signal@en_pin
  3654  00F1B4  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3655  00F1B6  0E00               	movlw	high lcd_4bit_send_enable_signal@en_pin
  3656  00F1B8  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  3657  00F1BA  0E01               	movlw	1
  3658  00F1BC  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  3659  00F1BE  EC68  F07C         	call	_gpio_pin_write_logic	;wreg free
  3660  00F1C2  160E               	andwf	lcd_4bit_send_enable_signal@state^0,f,c
  3661  00F1C4                     
  3662                           ;ECU/LCD/ecu_lcd.c: 503:         _delay((unsigned long)((1)*(8000000/4000.0)));
  3663  00F1C4  0E03               	movlw	3
  3664  00F1C6  6E0D               	movwf	??_lcd_4bit_send_enable_signal^0,c
  3665  00F1C8  0E98               	movlw	152
  3666  00F1CA                     u2697:
  3667  00F1CA  2EE8               	decfsz	wreg,f,c
  3668  00F1CC  D7FE               	bra	u2697
  3669  00F1CE  2E0D               	decfsz	??_lcd_4bit_send_enable_signal^0,f,c
  3670  00F1D0  D7FC               	bra	u2697
  3671  00F1D2                     
  3672                           ;ECU/LCD/ecu_lcd.c: 504:         state &= gpio_pin_write_logic(&en_pin,GPIO_LOW);
  3673  00F1D2  0E0F               	movlw	low lcd_4bit_send_enable_signal@en_pin
  3674  00F1D4  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3675  00F1D6  0E00               	movlw	high lcd_4bit_send_enable_signal@en_pin
  3676  00F1D8  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  3677  00F1DA  0E00               	movlw	0
  3678  00F1DC  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  3679  00F1DE  EC68  F07C         	call	_gpio_pin_write_logic	;wreg free
  3680  00F1E2  160E               	andwf	lcd_4bit_send_enable_signal@state^0,f,c
  3681  00F1E4                     
  3682                           ;ECU/LCD/ecu_lcd.c: 505:         _delay((unsigned long)((100)*(8000000/4000000.0)));
  3683  00F1E4  0E42               	movlw	66
  3684  00F1E6                     u2707:
  3685  00F1E6  2EE8               	decfsz	wreg,f,c
  3686  00F1E8  D7FE               	bra	u2707
  3687  00F1EA  D000               	nop2	
  3688  00F1EC                     l2836:
  3689                           
  3690                           ;ECU/LCD/ecu_lcd.c: 507:     return state;
  3691  00F1EC  500E               	movf	lcd_4bit_send_enable_signal@state^0,w,c
  3692  00F1EE  0012               	return		;funcret
  3693  00F1F0                     __end_of_lcd_4bit_send_enable_signal:
  3694                           	callstack 0
  3695                           
  3696 ;; *************** function _gpio_pin_write_logic *****************
  3697 ;; Defined at:
  3698 ;;		line 63 in file "MCAL/GPIO/hal_gpio.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  3701 ;;		 -> lcd_8bit_send_enable_signal@en_pin(1), lcd_send_8bits@data_pin(1), lcd_4bit_send_enable_signal@en_pin(1), lcd_se
      +nd_4bits@data_pin(1), 
  3702 ;;		 -> lcd_send_higher_nibble@rs_pin(1), lcd_8bit_send_char_data@rs_pin(1), lcd_8bit_send_command@rs_pin(1), lcd_4bit_s
      +end_char_data@rs_pin(1), 
  3703 ;;		 -> lcd_4bit_send_command@rs_pin(1), rgb_led_turn_off@blue(1), rgb_led_turn_off@green(1), rgb_led_turn_off@red(1), 
  3704 ;;		 -> rgb_led_turn_on@blue(1), rgb_led_turn_on@green(1), rgb_led_turn_on@red(1), Relay_turn_off@relay(1), 
  3705 ;;		 -> Relay_turn_on@relay(1), led_turn_off@led(1), led_turn_on@led(1), dc_motor_move_left@dc_motor_pin2(1), 
  3706 ;;		 -> dc_motor_move_left@dc_motor_pin1(1), dc_motor_move_right@dc_motor_pin2(1), dc_motor_move_right@dc_motor_pin1(1),
      + segment_multi_disable@seg(1), 
  3707 ;;		 -> segment_multi_enable@seg(1), segment_write@seg(4), 
  3708 ;;  logic           1    2[COMRAM] unsigned char 
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;  state           1    9[COMRAM] unsigned char 
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  1    wreg      unsigned char 
  3713 ;; Registers used:
  3714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3715 ;; Tracked objects:
  3716 ;;		On entry : 0/0
  3717 ;;		On exit  : 0/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3720 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3721 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3722 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3723 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3724 ;;Total ram usage:       10 bytes
  3725 ;; Hardware stack levels used: 1
  3726 ;; This function calls:
  3727 ;;		Nothing
  3728 ;; This function is called by:
  3729 ;;		_lcd_4bit_send_command
  3730 ;;		_lcd_4bit_send_char_data
  3731 ;;		_lcd_8bit_send_command
  3732 ;;		_lcd_8bit_send_char_data
  3733 ;;		_lcd_send_higher_nibble
  3734 ;;		_lcd_send_4bits
  3735 ;;		_lcd_4bit_send_enable_signal
  3736 ;;		_lcd_send_8bits
  3737 ;;		_lcd_8bit_send_enable_signal
  3738 ;;		_segment_write
  3739 ;;		_segment_multi_enable
  3740 ;;		_segment_multi_disable
  3741 ;;		_dc_motor_move_right
  3742 ;;		_dc_motor_move_left
  3743 ;;		_keypad_get_char
  3744 ;;		_led_turn_on
  3745 ;;		_led_turn_off
  3746 ;;		_Relay_turn_on
  3747 ;;		_Relay_turn_off
  3748 ;;		_rgb_led_turn_on
  3749 ;;		_rgb_led_turn_off
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           	psect	text19
  3754  00F8D0                     __ptext19:
  3755                           	callstack 0
  3756  00F8D0                     _gpio_pin_write_logic:
  3757                           	callstack 27
  3758  00F8D0                     
  3759                           ;MCAL/GPIO/hal_gpio.c: 63: Std_ReturnType gpio_pin_write_logic(const pin_config_t* _pin_
      +                          config , uint8 logic);MCAL/GPIO/hal_gpio.c: 64: {;MCAL/GPIO/hal_gpio.c: 65:     Std_Retu
      +                          rnType state=(Std_ReturnType)1;
  3760  00F8D0  0E01               	movlw	1
  3761  00F8D2  6E0A               	movwf	gpio_pin_write_logic@state^0,c
  3762  00F8D4                     
  3763                           ;MCAL/GPIO/hal_gpio.c: 66:     if(_pin_config==((void*)0))
  3764  00F8D4  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3765  00F8D6  1002               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  3766  00F8D8  A4D8               	btfss	status,2,c
  3767  00F8DA  EF71  F07C         	goto	u1331
  3768  00F8DE  EF73  F07C         	goto	u1330
  3769  00F8E2                     u1331:
  3770  00F8E2  EFD6  F07C         	goto	l2782
  3771  00F8E6                     u1330:
  3772  00F8E6                     l2774:
  3773                           
  3774                           ;MCAL/GPIO/hal_gpio.c: 67:         state=(Std_ReturnType)0;
  3775  00F8E6  0E00               	movlw	0
  3776  00F8E8  6E0A               	movwf	gpio_pin_write_logic@state^0,c
  3777  00F8EA  EFEB  F07C         	goto	l2784
  3778  00F8EE                     l2776:
  3779                           
  3780                           ;MCAL/GPIO/hal_gpio.c: 73:                 (*lat_regesters[_pin_config->port] |= (1<<_pi
      +                          n_config->pin));
  3781  00F8EE  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3782  00F8F2  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3783  00F8F6  30DF               	rrcf	223,w,c
  3784  00F8F8  32E8               	rrcf	wreg,f,c
  3785  00F8FA  32E8               	rrcf	wreg,f,c
  3786  00F8FC  0B07               	andlw	7
  3787  00F8FE  6E04               	movwf	??_gpio_pin_write_logic^0,c
  3788  00F900  0E01               	movlw	1
  3789  00F902  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3790  00F904  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  3791  00F906  EF87  F07C         	goto	u1344
  3792  00F90A                     u1345:
  3793  00F90A  90D8               	bcf	status,0,c
  3794  00F90C  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3795  00F90E                     u1344:
  3796  00F90E  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  3797  00F910  EF85  F07C         	goto	u1345
  3798  00F914  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3799  00F918  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3800  00F91C  50DF               	movf	223,w,c
  3801  00F91E  0B07               	andlw	7
  3802  00F920  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3803  00F922  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3804  00F924  0D02               	mullw	2
  3805  00F926  0E63               	movlw	low _lat_regesters
  3806  00F928  24F3               	addwf	243,w,c
  3807  00F92A  6ED9               	movwf	fsr2l,c
  3808  00F92C  0E00               	movlw	high _lat_regesters
  3809  00F92E  20F4               	addwfc	prodh,w,c
  3810  00F930  6EDA               	movwf	fsr2h,c
  3811  00F932  CFDE F007          	movff	postinc2,??_gpio_pin_write_logic+3
  3812  00F936  CFDD F008          	movff	postdec2,??_gpio_pin_write_logic+4
  3813  00F93A  C007  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  3814  00F93E  C008  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  3815  00F942  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3816  00F944  12DF               	iorwf	indf2,f,c
  3817                           
  3818                           ;MCAL/GPIO/hal_gpio.c: 74:                 break;
  3819  00F946  EFEB  F07C         	goto	l2784
  3820  00F94A                     l2778:
  3821                           
  3822                           ;MCAL/GPIO/hal_gpio.c: 76:                 (*lat_regesters[_pin_config->port] &= ~(1<<_p
      +                          in_config->pin));
  3823  00F94A  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3824  00F94E  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3825  00F952  30DF               	rrcf	223,w,c
  3826  00F954  32E8               	rrcf	wreg,f,c
  3827  00F956  32E8               	rrcf	wreg,f,c
  3828  00F958  0B07               	andlw	7
  3829  00F95A  6E04               	movwf	??_gpio_pin_write_logic^0,c
  3830  00F95C  0E01               	movlw	1
  3831  00F95E  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3832  00F960  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  3833  00F962  EFB5  F07C         	goto	u1354
  3834  00F966                     u1355:
  3835  00F966  90D8               	bcf	status,0,c
  3836  00F968  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3837  00F96A                     u1354:
  3838  00F96A  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  3839  00F96C  EFB3  F07C         	goto	u1355
  3840  00F970  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3841  00F972  0AFF               	xorlw	255
  3842  00F974  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3843  00F976  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  3844  00F97A  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  3845  00F97E  50DF               	movf	223,w,c
  3846  00F980  0B07               	andlw	7
  3847  00F982  6E07               	movwf	(??_gpio_pin_write_logic+3)^0,c
  3848  00F984  5007               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  3849  00F986  0D02               	mullw	2
  3850  00F988  0E63               	movlw	low _lat_regesters
  3851  00F98A  24F3               	addwf	243,w,c
  3852  00F98C  6ED9               	movwf	fsr2l,c
  3853  00F98E  0E00               	movlw	high _lat_regesters
  3854  00F990  20F4               	addwfc	prodh,w,c
  3855  00F992  6EDA               	movwf	fsr2h,c
  3856  00F994  CFDE F008          	movff	postinc2,??_gpio_pin_write_logic+4
  3857  00F998  CFDD F009          	movff	postdec2,??_gpio_pin_write_logic+5
  3858  00F99C  C008  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  3859  00F9A0  C009  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  3860  00F9A4  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3861  00F9A6  16DF               	andwf	indf2,f,c
  3862                           
  3863                           ;MCAL/GPIO/hal_gpio.c: 77:                 break;
  3864  00F9A8  EFEB  F07C         	goto	l2784
  3865  00F9AC                     l2782:
  3866  00F9AC  5003               	movf	gpio_pin_write_logic@logic^0,w,c
  3867  00F9AE  6E04               	movwf	??_gpio_pin_write_logic^0,c
  3868  00F9B0  6A05               	clrf	(??_gpio_pin_write_logic+1)^0,c
  3869                           
  3870                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3871                           ; Switch size 1, requested type "simple"
  3872                           ; Number of cases is 1, Range of values is 0 to 0
  3873                           ; switch strategies available:
  3874                           ; Name         Instructions Cycles
  3875                           ; simple_byte            4     3 (average)
  3876                           ;	Chosen strategy is simple_byte
  3877  00F9B2  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3878  00F9B4  0A00               	xorlw	0	; case 0
  3879  00F9B6  B4D8               	btfsc	status,2,c
  3880  00F9B8  EFE0  F07C         	goto	l4126
  3881  00F9BC  EF73  F07C         	goto	l2774
  3882  00F9C0                     l4126:
  3883                           
  3884                           ; Switch size 1, requested type "simple"
  3885                           ; Number of cases is 2, Range of values is 0 to 1
  3886                           ; switch strategies available:
  3887                           ; Name         Instructions Cycles
  3888                           ; simple_byte            7     4 (average)
  3889                           ;	Chosen strategy is simple_byte
  3890  00F9C0  5004               	movf	??_gpio_pin_write_logic^0,w,c
  3891  00F9C2  0A00               	xorlw	0	; case 0
  3892  00F9C4  B4D8               	btfsc	status,2,c
  3893  00F9C6  EFA5  F07C         	goto	l2778
  3894  00F9CA  0A01               	xorlw	1	; case 1
  3895  00F9CC  B4D8               	btfsc	status,2,c
  3896  00F9CE  EF77  F07C         	goto	l2776
  3897  00F9D2  EF73  F07C         	goto	l2774
  3898  00F9D6                     l2784:
  3899                           
  3900                           ;MCAL/GPIO/hal_gpio.c: 82:     return state;
  3901  00F9D6  500A               	movf	gpio_pin_write_logic@state^0,w,c
  3902  00F9D8  0012               	return		;funcret
  3903  00F9DA                     __end_of_gpio_pin_write_logic:
  3904                           	callstack 0
  3905                           
  3906 ;; *************** function _gpio_pin_direction_initialize *****************
  3907 ;; Defined at:
  3908 ;;		line 10 in file "MCAL/GPIO/hal_gpio.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  3911 ;;		 -> lcd_8bit_initialize@data_pin(1), lcd_8bit_initialize@en_pin(1), lcd_8bit_initialize@rs_pin(1), lcd_4bit_initiali
      +ze@data_pin(1), 
  3912 ;;		 -> lcd_4bit_initialize@en_pin(1), lcd_4bit_initialize@rs_pin(1), rgb_led_initialize@blue(1), rgb_led_initialize@gre
      +en(1), 
  3913 ;;		 -> rgb_led_initialize@red(1), Relay_initialize@relay(1), led_initialize@led(1), dc_motor_initialize@dc_motor_pin2(1
      +), 
  3914 ;;		 -> dc_motor_initialize@dc_motor_pin1(1), button_initialize@button(1), segment_multi_initialize@seg(1), segment_init
      +ialize@seg(4), 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;  state           1    8[COMRAM] unsigned char 
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  1    wreg      unsigned char 
  3919 ;; Registers used:
  3920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3926 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3928 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3929 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;Total ram usage:        9 bytes
  3931 ;; Hardware stack levels used: 1
  3932 ;; This function calls:
  3933 ;;		Nothing
  3934 ;; This function is called by:
  3935 ;;		_lcd_4bit_initialize
  3936 ;;		_lcd_8bit_initialize
  3937 ;;		_segment_initialize
  3938 ;;		_segment_multi_initialize
  3939 ;;		_button_initialize
  3940 ;;		_dc_motor_initialize
  3941 ;;		_keypad_initialize
  3942 ;;		_led_initialize
  3943 ;;		_Relay_initialize
  3944 ;;		_rgb_led_initialize
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           	psect	text20
  3949  00FDDE                     __ptext20:
  3950                           	callstack 0
  3951  00FDDE                     _gpio_pin_direction_initialize:
  3952                           	callstack 28
  3953  00FDDE                     
  3954                           ;MCAL/GPIO/hal_gpio.c: 10: Std_ReturnType gpio_pin_direction_initialize(const pin_config
      +                          _t* _pin_config);MCAL/GPIO/hal_gpio.c: 11: {;MCAL/GPIO/hal_gpio.c: 12:     Std_ReturnTyp
      +                          e state=(Std_ReturnType)1;
  3955  00FDDE  0E01               	movlw	1
  3956  00FDE0  6E09               	movwf	gpio_pin_direction_initialize@state^0,c
  3957  00FDE2                     
  3958                           ;MCAL/GPIO/hal_gpio.c: 13:     if(_pin_config==((void*)0))
  3959  00FDE2  5001               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  3960  00FDE4  1002               	iorwf	(gpio_pin_direction_initialize@_pin_config+1)^0,w,c
  3961  00FDE6  A4D8               	btfss	status,2,c
  3962  00FDE8  EFF8  F07E         	goto	u1461
  3963  00FDEC  EFFA  F07E         	goto	u1460
  3964  00FDF0                     u1461:
  3965  00FDF0  EFDD  F07F         	goto	l2956
  3966  00FDF4                     u1460:
  3967  00FDF4                     l2940:
  3968                           
  3969                           ;MCAL/GPIO/hal_gpio.c: 14:         state=(Std_ReturnType)0;
  3970  00FDF4  0E00               	movlw	0
  3971  00FDF6  6E09               	movwf	gpio_pin_direction_initialize@state^0,c
  3972  00FDF8  EFFE  F07F         	goto	l2958
  3973  00FDFC                     l2942:
  3974                           
  3975                           ;MCAL/GPIO/hal_gpio.c: 20:                 (*tris_regesters[_pin_config->port] &= ~(1<<_
      +                          pin_config->pin));
  3976  00FDFC  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  3977  00FE00  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  3978  00FE04  30DF               	rrcf	223,w,c
  3979  00FE06  32E8               	rrcf	wreg,f,c
  3980  00FE08  32E8               	rrcf	wreg,f,c
  3981  00FE0A  0B07               	andlw	7
  3982  00FE0C  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  3983  00FE0E  0E01               	movlw	1
  3984  00FE10  6E04               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  3985  00FE12  2A03               	incf	??_gpio_pin_direction_initialize^0,f,c
  3986  00FE14  EF0E  F07F         	goto	u1474
  3987  00FE18                     u1475:
  3988  00FE18  90D8               	bcf	status,0,c
  3989  00FE1A  3604               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  3990  00FE1C                     u1474:
  3991  00FE1C  2E03               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  3992  00FE1E  EF0C  F07F         	goto	u1475
  3993  00FE22  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  3994  00FE24  0AFF               	xorlw	255
  3995  00FE26  6E05               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  3996  00FE28  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  3997  00FE2C  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  3998  00FE30  50DF               	movf	223,w,c
  3999  00FE32  0B07               	andlw	7
  4000  00FE34  6E06               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  4001  00FE36  5006               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  4002  00FE38  0D02               	mullw	2
  4003  00FE3A  0E6D               	movlw	low _tris_regesters
  4004  00FE3C  24F3               	addwf	243,w,c
  4005  00FE3E  6ED9               	movwf	fsr2l,c
  4006  00FE40  0E00               	movlw	high _tris_regesters
  4007  00FE42  20F4               	addwfc	prodh,w,c
  4008  00FE44  6EDA               	movwf	fsr2h,c
  4009  00FE46  CFDE F007          	movff	postinc2,??_gpio_pin_direction_initialize+4
  4010  00FE4A  CFDD F008          	movff	postdec2,??_gpio_pin_direction_initialize+5
  4011  00FE4E  C007  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  4012  00FE52  C008  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  4013  00FE56  5005               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4014  00FE58  16DF               	andwf	indf2,f,c
  4015                           
  4016                           ;MCAL/GPIO/hal_gpio.c: 21:                 switch(_pin_config->logic)
  4017  00FE5A  EF8E  F07F         	goto	l2950
  4018  00FE5E                     l2944:
  4019                           
  4020                           ;MCAL/GPIO/hal_gpio.c: 24:                         (*lat_regesters[_pin_config->port] |=
      +                           (1<<_pin_config->pin));
  4021  00FE5E  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  4022  00FE62  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  4023  00FE66  30DF               	rrcf	223,w,c
  4024  00FE68  32E8               	rrcf	wreg,f,c
  4025  00FE6A  32E8               	rrcf	wreg,f,c
  4026  00FE6C  0B07               	andlw	7
  4027  00FE6E  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  4028  00FE70  0E01               	movlw	1
  4029  00FE72  6E04               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4030  00FE74  2A03               	incf	??_gpio_pin_direction_initialize^0,f,c
  4031  00FE76  EF3F  F07F         	goto	u1484
  4032  00FE7A                     u1485:
  4033  00FE7A  90D8               	bcf	status,0,c
  4034  00FE7C  3604               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4035  00FE7E                     u1484:
  4036  00FE7E  2E03               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4037  00FE80  EF3D  F07F         	goto	u1485
  4038  00FE84  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  4039  00FE88  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  4040  00FE8C  50DF               	movf	223,w,c
  4041  00FE8E  0B07               	andlw	7
  4042  00FE90  6E05               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  4043  00FE92  5005               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4044  00FE94  0D02               	mullw	2
  4045  00FE96  0E63               	movlw	low _lat_regesters
  4046  00FE98  24F3               	addwf	243,w,c
  4047  00FE9A  6ED9               	movwf	fsr2l,c
  4048  00FE9C  0E00               	movlw	high _lat_regesters
  4049  00FE9E  20F4               	addwfc	prodh,w,c
  4050  00FEA0  6EDA               	movwf	fsr2h,c
  4051  00FEA2  CFDE F006          	movff	postinc2,??_gpio_pin_direction_initialize+3
  4052  00FEA6  CFDD F007          	movff	postdec2,??_gpio_pin_direction_initialize+4
  4053  00FEAA  C006  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  4054  00FEAE  C007  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  4055  00FEB2  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4056  00FEB4  12DF               	iorwf	indf2,f,c
  4057                           
  4058                           ;MCAL/GPIO/hal_gpio.c: 25:                         break;
  4059  00FEB6  EFFE  F07F         	goto	l2958
  4060  00FEBA                     l2946:
  4061                           
  4062                           ;MCAL/GPIO/hal_gpio.c: 27:                         (*lat_regesters[_pin_config->port] &=
      +                           ~(1<<_pin_config->pin));
  4063  00FEBA  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  4064  00FEBE  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  4065  00FEC2  30DF               	rrcf	223,w,c
  4066  00FEC4  32E8               	rrcf	wreg,f,c
  4067  00FEC6  32E8               	rrcf	wreg,f,c
  4068  00FEC8  0B07               	andlw	7
  4069  00FECA  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  4070  00FECC  0E01               	movlw	1
  4071  00FECE  6E04               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4072  00FED0  2A03               	incf	??_gpio_pin_direction_initialize^0,f,c
  4073  00FED2  EF6D  F07F         	goto	u1494
  4074  00FED6                     u1495:
  4075  00FED6  90D8               	bcf	status,0,c
  4076  00FED8  3604               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4077  00FEDA                     u1494:
  4078  00FEDA  2E03               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4079  00FEDC  EF6B  F07F         	goto	u1495
  4080  00FEE0  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4081  00FEE2  0AFF               	xorlw	255
  4082  00FEE4  6E05               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  4083  00FEE6  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  4084  00FEEA  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  4085  00FEEE  50DF               	movf	223,w,c
  4086  00FEF0  0B07               	andlw	7
  4087  00FEF2  6E06               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  4088  00FEF4  5006               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  4089  00FEF6  0D02               	mullw	2
  4090  00FEF8  0E63               	movlw	low _lat_regesters
  4091  00FEFA  24F3               	addwf	243,w,c
  4092  00FEFC  6ED9               	movwf	fsr2l,c
  4093  00FEFE  0E00               	movlw	high _lat_regesters
  4094  00FF00  20F4               	addwfc	prodh,w,c
  4095  00FF02  6EDA               	movwf	fsr2h,c
  4096  00FF04  CFDE F007          	movff	postinc2,??_gpio_pin_direction_initialize+4
  4097  00FF08  CFDD F008          	movff	postdec2,??_gpio_pin_direction_initialize+5
  4098  00FF0C  C007  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  4099  00FF10  C008  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  4100  00FF14  5005               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4101  00FF16  16DF               	andwf	indf2,f,c
  4102                           
  4103                           ;MCAL/GPIO/hal_gpio.c: 28:                         break;
  4104  00FF18  EFFE  F07F         	goto	l2958
  4105  00FF1C                     l2950:
  4106  00FF1C  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  4107  00FF20  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  4108  00FF24  BEDF               	btfsc	indf2,7,c
  4109  00FF26  EF97  F07F         	goto	u1501
  4110  00FF2A  EF9A  F07F         	goto	u1500
  4111  00FF2E                     u1501:
  4112  00FF2E  0E01               	movlw	1
  4113  00FF30  EF9B  F07F         	goto	u1510
  4114  00FF34                     u1500:
  4115  00FF34  0E00               	movlw	0
  4116  00FF36                     u1510:
  4117  00FF36  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  4118  00FF38  6A04               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  4119                           
  4120                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4121                           ; Switch size 1, requested type "simple"
  4122                           ; Number of cases is 1, Range of values is 0 to 0
  4123                           ; switch strategies available:
  4124                           ; Name         Instructions Cycles
  4125                           ; simple_byte            4     3 (average)
  4126                           ;	Chosen strategy is simple_byte
  4127  00FF3A  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4128  00FF3C  0A00               	xorlw	0	; case 0
  4129  00FF3E  B4D8               	btfsc	status,2,c
  4130  00FF40  EFA4  F07F         	goto	l4128
  4131  00FF44  EFFE  F07F         	goto	l2958
  4132  00FF48                     l4128:
  4133                           
  4134                           ; Switch size 1, requested type "simple"
  4135                           ; Number of cases is 2, Range of values is 0 to 1
  4136                           ; switch strategies available:
  4137                           ; Name         Instructions Cycles
  4138                           ; simple_byte            7     4 (average)
  4139                           ;	Chosen strategy is simple_byte
  4140  00FF48  5003               	movf	??_gpio_pin_direction_initialize^0,w,c
  4141  00FF4A  0A00               	xorlw	0	; case 0
  4142  00FF4C  B4D8               	btfsc	status,2,c
  4143  00FF4E  EF5D  F07F         	goto	l2946
  4144  00FF52  0A01               	xorlw	1	; case 1
  4145  00FF54  B4D8               	btfsc	status,2,c
  4146  00FF56  EF2F  F07F         	goto	l2944
  4147  00FF5A  EFFE  F07F         	goto	l2958
  4148  00FF5E                     l2952:
  4149                           
  4150                           ;MCAL/GPIO/hal_gpio.c: 32:                 (*tris_regesters[_pin_config->port] |= (1<<_p
      +                          in_config->pin));
  4151  00FF5E  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  4152  00FF62  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  4153  00FF66  30DF               	rrcf	223,w,c
  4154  00FF68  32E8               	rrcf	wreg,f,c
  4155  00FF6A  32E8               	rrcf	wreg,f,c
  4156  00FF6C  0B07               	andlw	7
  4157  00FF6E  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  4158  00FF70  0E01               	movlw	1
  4159  00FF72  6E04               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4160  00FF74  2A03               	incf	??_gpio_pin_direction_initialize^0,f,c
  4161  00FF76  EFBF  F07F         	goto	u1524
  4162  00FF7A                     u1525:
  4163  00FF7A  90D8               	bcf	status,0,c
  4164  00FF7C  3604               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4165  00FF7E                     u1524:
  4166  00FF7E  2E03               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4167  00FF80  EFBD  F07F         	goto	u1525
  4168  00FF84  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  4169  00FF88  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  4170  00FF8C  50DF               	movf	223,w,c
  4171  00FF8E  0B07               	andlw	7
  4172  00FF90  6E05               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  4173  00FF92  5005               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4174  00FF94  0D02               	mullw	2
  4175  00FF96  0E6D               	movlw	low _tris_regesters
  4176  00FF98  24F3               	addwf	243,w,c
  4177  00FF9A  6ED9               	movwf	fsr2l,c
  4178  00FF9C  0E00               	movlw	high _tris_regesters
  4179  00FF9E  20F4               	addwfc	prodh,w,c
  4180  00FFA0  6EDA               	movwf	fsr2h,c
  4181  00FFA2  CFDE F006          	movff	postinc2,??_gpio_pin_direction_initialize+3
  4182  00FFA6  CFDD F007          	movff	postdec2,??_gpio_pin_direction_initialize+4
  4183  00FFAA  C006  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  4184  00FFAE  C007  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  4185  00FFB2  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4186  00FFB4  12DF               	iorwf	indf2,f,c
  4187                           
  4188                           ;MCAL/GPIO/hal_gpio.c: 33:                 break;
  4189  00FFB6  EFFE  F07F         	goto	l2958
  4190  00FFBA                     l2956:
  4191  00FFBA  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  4192  00FFBE  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  4193  00FFC2  BCDF               	btfsc	indf2,6,c
  4194  00FFC4  EFE6  F07F         	goto	u1531
  4195  00FFC8  EFE9  F07F         	goto	u1530
  4196  00FFCC                     u1531:
  4197  00FFCC  0E01               	movlw	1
  4198  00FFCE  EFEA  F07F         	goto	u1540
  4199  00FFD2                     u1530:
  4200  00FFD2  0E00               	movlw	0
  4201  00FFD4                     u1540:
  4202  00FFD4  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  4203  00FFD6  6A04               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  4204                           
  4205                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4206                           ; Switch size 1, requested type "simple"
  4207                           ; Number of cases is 1, Range of values is 0 to 0
  4208                           ; switch strategies available:
  4209                           ; Name         Instructions Cycles
  4210                           ; simple_byte            4     3 (average)
  4211                           ;	Chosen strategy is simple_byte
  4212  00FFD8  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4213  00FFDA  0A00               	xorlw	0	; case 0
  4214  00FFDC  B4D8               	btfsc	status,2,c
  4215  00FFDE  EFF3  F07F         	goto	l4130
  4216  00FFE2  EFFA  F07E         	goto	l2940
  4217  00FFE6                     l4130:
  4218                           
  4219                           ; Switch size 1, requested type "simple"
  4220                           ; Number of cases is 2, Range of values is 0 to 1
  4221                           ; switch strategies available:
  4222                           ; Name         Instructions Cycles
  4223                           ; simple_byte            7     4 (average)
  4224                           ;	Chosen strategy is simple_byte
  4225  00FFE6  5003               	movf	??_gpio_pin_direction_initialize^0,w,c
  4226  00FFE8  0A00               	xorlw	0	; case 0
  4227  00FFEA  B4D8               	btfsc	status,2,c
  4228  00FFEC  EFFE  F07E         	goto	l2942
  4229  00FFF0  0A01               	xorlw	1	; case 1
  4230  00FFF2  B4D8               	btfsc	status,2,c
  4231  00FFF4  EFAF  F07F         	goto	l2952
  4232  00FFF8  EFFA  F07E         	goto	l2940
  4233  00FFFC                     l2958:
  4234                           
  4235                           ;MCAL/GPIO/hal_gpio.c: 38:     return state;
  4236  00FFFC  5009               	movf	gpio_pin_direction_initialize@state^0,w,c
  4237  00FFFE  0012               	return		;funcret
  4238  010000                     __end_of_gpio_pin_direction_initialize:
  4239                           	callstack 0
  4240  0000                     
  4241                           	psect	rparam
  4242  0000                     
  4243                           	psect	config
  4244                           
  4245                           ; Padding undefined space
  4246  300000                     	org	3145728
  4247  300000  FF                 	db	255
  4248                           
  4249                           ;Config register CONFIG1H @ 0x300001
  4250                           ;	Oscillator Selection bits
  4251                           ;	OSC = HS, HS oscillator
  4252                           ;	Fail-Safe Clock Monitor Enable bit
  4253                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4254                           ;	Internal/External Oscillator Switchover bit
  4255                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4256  300001                     	org	3145729
  4257  300001  02                 	db	2
  4258                           
  4259                           ;Config register CONFIG2L @ 0x300002
  4260                           ;	Power-up Timer Enable bit
  4261                           ;	PWRT = OFF, PWRT disabled
  4262                           ;	Brown-out Reset Enable bits
  4263                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4264                           ;	Brown Out Reset Voltage bits
  4265                           ;	BORV = 1, 
  4266  300002                     	org	3145730
  4267  300002  09                 	db	9
  4268                           
  4269                           ;Config register CONFIG2H @ 0x300003
  4270                           ;	Watchdog Timer Enable bit
  4271                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4272                           ;	Watchdog Timer Postscale Select bits
  4273                           ;	WDTPS = 32768, 1:32768
  4274  300003                     	org	3145731
  4275  300003  1E                 	db	30
  4276                           
  4277                           ; Padding undefined space
  4278  300004                     	org	3145732
  4279  300004  FF                 	db	255
  4280                           
  4281                           ;Config register CONFIG3H @ 0x300005
  4282                           ;	CCP2 MUX bit
  4283                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4284                           ;	PORTB A/D Enable bit
  4285                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4286                           ;	Low-Power Timer1 Oscillator Enable bit
  4287                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4288                           ;	MCLR Pin Enable bit
  4289                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4290  300005                     	org	3145733
  4291  300005  81                 	db	129
  4292                           
  4293                           ;Config register CONFIG4L @ 0x300006
  4294                           ;	Stack Full/Underflow Reset Enable bit
  4295                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4296                           ;	Single-Supply ICSP Enable bit
  4297                           ;	LVP = OFF, Single-Supply ICSP disabled
  4298                           ;	Extended Instruction Set Enable bit
  4299                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4300                           ;	Background Debugger Enable bit
  4301                           ;	DEBUG = 0x1, unprogrammed default
  4302  300006                     	org	3145734
  4303  300006  81                 	db	129
  4304                           
  4305                           ; Padding undefined space
  4306  300007                     	org	3145735
  4307  300007  FF                 	db	255
  4308                           
  4309                           ;Config register CONFIG5L @ 0x300008
  4310                           ;	Code Protection bit
  4311                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4312                           ;	Code Protection bit
  4313                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4314                           ;	Code Protection bit
  4315                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4316                           ;	Code Protection bit
  4317                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4318  300008                     	org	3145736
  4319  300008  0F                 	db	15
  4320                           
  4321                           ;Config register CONFIG5H @ 0x300009
  4322                           ;	Boot Block Code Protection bit
  4323                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4324                           ;	Data EEPROM Code Protection bit
  4325                           ;	CPD = OFF, Data EEPROM not code-protected
  4326  300009                     	org	3145737
  4327  300009  C0                 	db	192
  4328                           
  4329                           ;Config register CONFIG6L @ 0x30000A
  4330                           ;	Write Protection bit
  4331                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4332                           ;	Write Protection bit
  4333                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4334                           ;	Write Protection bit
  4335                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4336                           ;	Write Protection bit
  4337                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4338  30000A                     	org	3145738
  4339  30000A  0F                 	db	15
  4340                           
  4341                           ;Config register CONFIG6H @ 0x30000B
  4342                           ;	Configuration Register Write Protection bit
  4343                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4344                           ;	Boot Block Write Protection bit
  4345                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4346                           ;	Data EEPROM Write Protection bit
  4347                           ;	WRTD = OFF, Data EEPROM not write-protected
  4348  30000B                     	org	3145739
  4349  30000B  E0                 	db	224
  4350                           
  4351                           ;Config register CONFIG7L @ 0x30000C
  4352                           ;	Table Read Protection bit
  4353                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4354                           ;	Table Read Protection bit
  4355                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4356                           ;	Table Read Protection bit
  4357                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4358                           ;	Table Read Protection bit
  4359                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4360  30000C                     	org	3145740
  4361  30000C  0F                 	db	15
  4362                           
  4363                           ;Config register CONFIG7H @ 0x30000D
  4364                           ;	Boot Block Table Read Protection bit
  4365                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4366  30000D                     	org	3145741
  4367  30000D  40                 	db	64
  4368                           tosu	equ	0xFFF
  4369                           tosh	equ	0xFFE
  4370                           tosl	equ	0xFFD
  4371                           stkptr	equ	0xFFC
  4372                           pclatu	equ	0xFFB
  4373                           pclath	equ	0xFFA
  4374                           pcl	equ	0xFF9
  4375                           tblptru	equ	0xFF8
  4376                           tblptrh	equ	0xFF7
  4377                           tblptrl	equ	0xFF6
  4378                           tablat	equ	0xFF5
  4379                           prodh	equ	0xFF4
  4380                           prodl	equ	0xFF3
  4381                           indf0	equ	0xFEF
  4382                           postinc0	equ	0xFEE
  4383                           postdec0	equ	0xFED
  4384                           preinc0	equ	0xFEC
  4385                           plusw0	equ	0xFEB
  4386                           fsr0h	equ	0xFEA
  4387                           fsr0l	equ	0xFE9
  4388                           wreg	equ	0xFE8
  4389                           indf1	equ	0xFE7
  4390                           postinc1	equ	0xFE6
  4391                           postdec1	equ	0xFE5
  4392                           preinc1	equ	0xFE4
  4393                           plusw1	equ	0xFE3
  4394                           fsr1h	equ	0xFE2
  4395                           fsr1l	equ	0xFE1
  4396                           bsr	equ	0xFE0
  4397                           indf2	equ	0xFDF
  4398                           postinc2	equ	0xFDE
  4399                           postdec2	equ	0xFDD
  4400                           preinc2	equ	0xFDC
  4401                           plusw2	equ	0xFDB
  4402                           fsr2h	equ	0xFDA
  4403                           fsr2l	equ	0xFD9
  4404                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        106
    BSS         115
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     51     124
    BANK0           128      0      92
    BANK1           256      0      56
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    lcd_8bit_send_enable_signal@lcd_8bit	PTR const struct . size(2) Largest target is 10
		 -> lcd_8bit(BANK0[10]), 

    lcd_send_8bits@lcd_8bit	PTR const struct . size(2) Largest target is 10
		 -> lcd_8bit(BANK0[10]), 

    lcd_4bit_send_enable_signal@lcd_4bit	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(COMRAM[6]), 

    lcd_send_4bits@lcd_4bit	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(COMRAM[6]), 

    lcd_send_higher_nibble@lcd_4bit	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(COMRAM[6]), 

    lcd_8bit_set_position@lcd_8bit	PTR const struct . size(2) Largest target is 10
		 -> lcd_8bit(BANK0[10]), 

    lcd_8bit_send_custome_char@str	PTR const unsigned char  size(2) Largest target is 56
		 -> customChars(BANK1[56]), 

    lcd_8bit_send_custome_char@lcd_8bit	PTR const struct . size(2) Largest target is 10
		 -> lcd_8bit(BANK0[10]), 

    lcd_8bit_send_char_at_position@lcd_8bit	PTR const struct . size(2) Largest target is 10
		 -> lcd_8bit(BANK0[10]), 

    lcd_8bit_send_char_data@lcd_8bit	PTR const struct . size(2) Largest target is 10
		 -> lcd_8bit(BANK0[10]), 

    lcd_8bit_send_command@lcd_8bit	PTR const struct . size(2) Largest target is 10
		 -> lcd_8bit(BANK0[10]), 

    lcd_8bit_initialize@lcd_8bit	PTR const struct . size(2) Largest target is 10
		 -> lcd_8bit(BANK0[10]), 

    lcd_4bit_set_position@lcd_4bit	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(COMRAM[6]), 

    lcd_4bit_send_custome_char@str	PTR const unsigned char  size(2) Largest target is 56
		 -> customChars(BANK1[56]), 

    lcd_4bit_send_custome_char@lcd_4bit	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(COMRAM[6]), 

    lcd_4bit_send_char_at_position@lcd_4bit	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd_4bit	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(COMRAM[6]), 

    lcd_4bit_send_command@lcd_4bit	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(COMRAM[6]), 

    lcd_4bit_initialize@lcd_4bit	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(COMRAM[6]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 4
		 -> lcd_8bit_send_enable_signal@en_pin(COMRAM[1]), lcd_send_8bits@data_pin(COMRAM[1]), lcd_4bit_send_enable_signal@en_pin(COMRAM[1]), lcd_send_4bits@data_pin(COMRAM[1]), 
		 -> lcd_send_higher_nibble@rs_pin(COMRAM[1]), lcd_8bit_send_char_data@rs_pin(COMRAM[1]), lcd_8bit_send_command@rs_pin(COMRAM[1]), lcd_4bit_send_char_data@rs_pin(COMRAM[1]), 
		 -> lcd_4bit_send_command@rs_pin(COMRAM[1]), rgb_led_turn_off@blue(COMRAM[1]), rgb_led_turn_off@green(COMRAM[1]), rgb_led_turn_off@red(COMRAM[1]), 
		 -> rgb_led_turn_on@blue(COMRAM[1]), rgb_led_turn_on@green(COMRAM[1]), rgb_led_turn_on@red(COMRAM[1]), Relay_turn_off@relay(COMRAM[1]), 
		 -> Relay_turn_on@relay(COMRAM[1]), led_turn_off@led(COMRAM[1]), led_turn_on@led(COMRAM[1]), dc_motor_move_left@dc_motor_pin2(COMRAM[1]), 
		 -> dc_motor_move_left@dc_motor_pin1(COMRAM[1]), dc_motor_move_right@dc_motor_pin2(COMRAM[1]), dc_motor_move_right@dc_motor_pin1(COMRAM[1]), segment_multi_disable@seg(COMRAM[1]), 
		 -> segment_multi_enable@seg(COMRAM[1]), segment_write@seg(COMRAM[4]), 

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(2) Largest target is 4
		 -> lcd_8bit_initialize@data_pin(COMRAM[1]), lcd_8bit_initialize@en_pin(COMRAM[1]), lcd_8bit_initialize@rs_pin(COMRAM[1]), lcd_4bit_initialize@data_pin(COMRAM[1]), 
		 -> lcd_4bit_initialize@en_pin(COMRAM[1]), lcd_4bit_initialize@rs_pin(COMRAM[1]), rgb_led_initialize@blue(COMRAM[1]), rgb_led_initialize@green(COMRAM[1]), 
		 -> rgb_led_initialize@red(COMRAM[1]), Relay_initialize@relay(COMRAM[1]), led_initialize@led(COMRAM[1]), dc_motor_initialize@dc_motor_pin2(COMRAM[1]), 
		 -> dc_motor_initialize@dc_motor_pin1(COMRAM[1]), button_initialize@button(COMRAM[1]), segment_multi_initialize@seg(COMRAM[1]), segment_initialize@seg(COMRAM[4]), 

    port_regesters	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    lat_regesters	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    tris_regesters	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 


Critical Paths under _main in COMRAM

    _main->_lcd_4bit_send_custome_char
    _main->_lcd_8bit_send_custome_char
    _lcd_8bit_send_custome_char->_lcd_8bit_send_char_at_position
    _lcd_8bit_send_char_at_position->_lcd_8bit_set_position
    _lcd_8bit_set_position->_lcd_8bit_send_command
    _lcd_8bit_send_char_data->_lcd_send_8bits
    _lcd_4bit_send_custome_char->_lcd_4bit_send_char_at_position
    _lcd_4bit_send_char_at_position->_lcd_4bit_set_position
    _lcd_4bit_set_position->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _application_initialize->_lcd_4bit_initialize
    _application_initialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_send_8bits
    _lcd_send_8bits->_gpio_pin_write_logic
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_initialize->_lcd_send_higher_nibble
    _lcd_send_higher_nibble->_lcd_send_4bits
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  386129
                                             47 COMRAM     4     4      0
             _application_initialize
     _lcd_4bit_send_char_at_position
         _lcd_4bit_send_custome_char
     _lcd_8bit_send_char_at_position
         _lcd_8bit_send_custome_char
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_custome_char                           9     2      7  100458
                                             38 COMRAM     9     2      7
     _lcd_8bit_send_char_at_position
            _lcd_8bit_send_char_data
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_at_position                       6     1      5   50647
                                             32 COMRAM     6     1      5
            _lcd_8bit_send_char_data
              _lcd_8bit_set_position
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_set_position                                7     3      4   25977
                                             25 COMRAM     7     3      4
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_data                              6     3      3   23860
                                             19 COMRAM     6     3      3
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
                     _lcd_send_8bits
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_custome_char                           9     2      7  102792
                                             38 COMRAM     9     2      7
     _lcd_4bit_send_char_at_position
            _lcd_4bit_send_char_data
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_at_position                       6     1      5   51847
                                             32 COMRAM     6     1      5
            _lcd_4bit_send_char_data
              _lcd_4bit_set_position
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_set_position                                7     3      4   26425
                                             25 COMRAM     7     3      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              6     3      3   24612
                                             19 COMRAM     6     3      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               1     1      0   80161
                                             35 COMRAM     1     1      0
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_initialize                                 10     8      2   27482
                                             25 COMRAM    10     8      2
      _gpio_pin_direction_initialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_command                                6     3      3   25228
                                             19 COMRAM     6     3      3
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
                     _lcd_send_8bits
 ---------------------------------------------------------------------------------
 (3) _lcd_send_8bits                                       9     6      3    8011
                                             10 COMRAM     9     6      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_enable_signal                          5     3      2    7750
                                             10 COMRAM     5     3      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                 10     8      2   52670
                                             25 COMRAM    10     8      2
      _gpio_pin_direction_initialize
              _lcd_4bit_send_command
             _lcd_send_higher_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_higher_nibble                               6     3      3   24694
                                             19 COMRAM     6     3      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_command                                6     3      3   25676
                                             19 COMRAM     6     3      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (3) _lcd_send_4bits                                       9     6      3    8467
                                             10 COMRAM     9     6      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_enable_signal                          5     3      2    7978
                                             10 COMRAM     5     3      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_write_logic                                10     7      3    7453
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        9     7      2    1635
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _lcd_4bit_initialize
       _gpio_pin_direction_initialize
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
           _gpio_pin_write_logic
         _lcd_send_4bits
           _gpio_pin_write_logic
       _lcd_send_higher_nibble
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
         _lcd_send_4bits
     _lcd_8bit_initialize
       _gpio_pin_direction_initialize
       _lcd_8bit_send_command
         _gpio_pin_write_logic
         _lcd_8bit_send_enable_signal
           _gpio_pin_write_logic
         _lcd_send_8bits
           _gpio_pin_write_logic
   _lcd_4bit_send_char_at_position
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_set_position
       _lcd_4bit_send_command
   _lcd_4bit_send_custome_char
     _lcd_4bit_send_char_at_position
     _lcd_4bit_send_char_data
     _lcd_4bit_send_command
   _lcd_8bit_send_char_at_position
     _lcd_8bit_send_char_data
       _gpio_pin_write_logic
       _lcd_8bit_send_enable_signal
       _lcd_send_8bits
     _lcd_8bit_set_position
       _lcd_8bit_send_command
   _lcd_8bit_send_custome_char
     _lcd_8bit_send_char_at_position
     _lcd_8bit_send_char_data
     _lcd_8bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      38       7       21.9%
BITBIGSFR           80      0       0      37        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      5C       5       71.9%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     33      7C       1       97.6%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     110      12        0.0%
DATA                 0      0     110       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Sep 28 09:22:43 2025

             application_initialize@state 0024                           ?_lcd_send_4bits 000B  
                         ?_lcd_send_8bits 000B                                       l320 FFFE  
                                     l415 ED78                                       l520 F7EC  
                                     l337 F9D8                                       l507 EF06  
                                     l452 FBE8                                       l462 FDDC  
                                     l640 F57A                                       l552 F03C  
                                     l472 F420                                       l465 F368  
                                     l545 FAA4                                       l609 F8CE  
                                     l458 FC94                                       l570 EE84  
                                     l643 F168                                       l539 F9F8  
                                     l483 EE1A                                       l563 F148  
                                     l636 F4DC                                       l628 EFA6  
                                     l556 F0B2                                       l476 F4B8  
                                     l469 F400                                       l629 F01C  
                                     l549 FBC8                                       l647 F1EE  
                                     l671 F59E                                       l559 F0D2  
                                     l682 F294                                       l675 F63C  
                                     l596 F348                                       l678 F20E  
           lcd_8bit_set_position@lcd_8bit 001A       __end_of_lcd_4bit_send_enable_signal F1F0  
             _lcd_4bit_send_enable_signal F14A                                       prod 000FF3  
                     led_initialize@F2888 0057                                       wreg 000FE8  
                                    l3000 F424                                      l3010 F488  
                                    l3002 F45E                                      l3012 F496  
                                    l3004 F460                                      l3020 F70C  
                                    l3014 F4A8                                      l3006 F462  
                                    l3030 F74A                                      l3022 F710  
                                    l3110 EDC8                                      l3200 FDB6  
                                    l3008 F474                                      l3016 F4B6  
                                    l3032 F750                                      l3024 F722  
                                    l3112 EDD8                                      l3202 FDC8  
                                    l3210 F9DE                                      l3034 F768  
                                    l3042 F7B0                                      l3026 F732  
                                    l3114 EDE8                                      l3106 EDB2  
                                    l3130 EE52                                      l3122 EE1C  
                                    l3204 FDDA                                      l3140 FBCE  
                                    l3220 FA3A                                      l3212 F9F0  
                                    l3036 F780                                      l3044 F7EA  
                                    l3028 F742                                      l3116 EDF0  
                                    l3108 EDB6                                      l3060 F110  
                                    l3052 F0B4                                      l3132 EE5A  
                                    l3124 EE20                                      l3150 FC2A  
                                    l3142 FBE0                                      l3230 FA90  
                                    l3222 FA48                                      l3214 F9FC  
                                    l3310 ED58                                      l3038 F798  
                                    l3118 EE18                                      l3062 F112  
                                    l3070 F146                                      l3054 F0B8  
                                    l3134 EE82                                      l3126 EE32  
                                    l3160 FC80                                      l3152 FC38  
                                    l3144 FBEC                                      l3240 FAA8  
                                    l3232 FA92                                      l3224 FA4C  
                                    l3216 FA36                                      l3208 F9DA  
                                    l3312 ED5C                                      l3064 F114  
                                    l3056 F0CA                                      l3080 F814  
                                    l3128 EE42                                      l3320 F29A  
                                    l4130 FFE6                                      l3170 FC98  
                                    l3162 FC82                                      l3154 FC3C  
                                    l3146 FC26                                      l3138 FBCA  
                                    l3250 FB16                                      l3242 FB02  
                                    l3234 FAA0                                      l3226 FA68  
                                    l3218 FA38                                      l3314 ED6A  
                                    l3066 F126                                      l3058 F0D6  
                                    l4122 F8A6                                      l3090 F862  
                                    l3082 F824                                      l3074 F7EE  
                                    l3330 F2E2                                      l3322 F2AC  
                                    l3180 FD06                                      l3172 FCF2  
                                    l3164 FC90                                      l3156 FC58  
                                    l3148 FC28                                      l3260 FB6C  
                                    l3252 FB26                                      l3244 FB04  
                                    l3228 FA8E                                      l4124 F7C4  
                                    l3068 F138                                      l3092 F87A  
                                    l3084 F82C                                      l3076 F7F2  
                                    l3340 F31C                                      l3332 F2FA  
                                    l3324 F2BC                                      l4126 F9C0  
                                    l3190 FD5C                                      l3182 FD16  
                                    l3174 FCF4                                      l3158 FC7E  
                                    l3262 FB7E                                      l3254 FB34  
                                    l3246 FB06                                      l3270 FBC6  
                                    l3350 EE8A                                      l3086 F832  
                                    l3078 F804                                      l3342 F31E  
                                    l3326 F2CC                                      l3318 F296  
                                    l4128 FF48                                      l3192 FD6E  
                                    l3184 FD24                                      l3176 FCF6  
                                    l3264 FB90                                      l3256 FB46  
                                    l3248 FB14                                      l3352 EE9C  
                                    l3088 F84A                                      l3096 F892  
                                    l3344 F32E                                      l3328 F2DE  
                                    l2810 F568                                      l3194 FD80  
                                    l3186 FD36                                      l3178 FD04  
                                    l3266 FBA2                                      l3258 FB66  
                                    l3362 EEBC                                      l3354 EEA0  
                                    l3098 F8CC                                      l3338 F2FE  
                                    l2820 F160                                      l2804 F4E0  
                                    l2812 F578                                      l2900 F3AA  
                                    l3196 FD92                                      l3188 FD56  
                                    l3268 FBB4                                      l3364 EEDA  
                                    l3356 EEB8                                      l3348 EE86  
                                    l2830 F1C4                                      l2822 F16C  
                                    l2806 F53A                                      l2902 F3BC  
                                    l2910 F3FE                                      l3198 FDA4  
                                    l3366 EEDC                                      l2832 F1D2  
                                    l2824 F1AE                                      l2816 F14A  
                                    l2808 F566                                      l2904 F3D0  
                                    l2840 F57C                                      l2920 F040  
                                    l3368 EEEC                                      l2770 F8D0  
                                    l2834 F1E4                                      l2826 F1B0  
                                    l2818 F14E                                      l2906 F3DE  
                                    l2842 F580                                      l2930 F0A2  
                                    l2922 F07A                                      l2914 F01E  
                                    l2940 FDF4                                      l2772 F8D4  
                                    l2828 F1B2                                      l2836 F1EC  
                                    l2908 F3F0                                      l2852 F5A2  
                                    l2860 F63A                                      l2844 F592  
                                    l2924 F07C                                      l2932 F0B0  
                                    l2916 F022                                      l2950 FF1C  
                                    l2942 FDFC                                      l2774 F8E6  
                                    l2782 F9AC                                      l2870 F212  
                                    l2854 F5FC                                      l2846 F59A  
                                    l2926 F07E                                      l2918 F034  
                                    l2952 FF5E                                      l2944 FE5E  
                                    l2936 FDDE                                      l2776 F8EE  
                                    l2784 F9D6                                      l2792 F4BA  
                                    l2880 F278                                      l2872 F254  
                                    l2864 F1F0                                      l2856 F628  
                                    l2928 F090                                      l2946 FEBA  
                                    l2938 FDE2                                      l2778 F94A  
                                    l2794 F4BE                                      l2890 F34E  
                                    l2970 EF8A                                      l2882 F28A  
                                    l2874 F256                                      l2866 F1F4  
                                    l2858 F62A                                      l3922 F646  
                                    l3914 F63E                                      l2956 FFBA  
                                    l2796 F4D0                                      l2892 F360  
                                    l2980 EFE4                                      l2972 EF8E  
                                    l2876 F258                                      l2884 F292  
                                    l2868 F206                                      l3940 F6F4  
                                    l3924 F696                                      l3916 F642  
                                    l2958 FFFC                                      l2798 F4D8  
                                    l2894 F36C                                      l2990 F01A  
                                    l2982 EFE6                                      l2974 EFA0  
                                    l2878 F26A                                      l3934 F6AC  
                                    l3926 F698                                      l2896 F3A6  
                                    l2888 F34A                                      l2984 EFE8  
                                    l3936 F6DC                                      l3928 F6A8  
                                    l2898 F3A8                                      l2986 EFF8  
                                    l2978 EFAA                                      l2994 F402  
                                    l3938 F6F2                                      l2988 F00C  
                                    l2996 F406                                      l2998 F418  
                                    u1400 F592                                      u1401 F58E  
                                    u1330 F8E6                                      u1331 F8E2  
                                    u1500 FF34                                      u1420 F63A  
                                    u1501 FF2E                                      u1421 F636  
                                    u1510 FF36                                      u1430 F206  
                                    u1414 F616                                      u1431 F202  
                                    u1415 F612                                      u1344 F90E  
                                    u1360 F4D0                                      u1440 F360  
                                    u1600 F0CA                                      u1345 F90A  
                                    u1361 F4CC                                      u1441 F35C  
                                    u1601 F0C6                                      u1530 FFD2  
                                    u1354 F96A                                      u1450 F034  
                                    u1610 F804                                      u1531 FFCC  
                                    u1355 F966                                      u1451 F030  
                                    u1611 F800                                      u1540 FFD4  
                                    u1524 FF7E                                      u1460 FDF4  
                                    u1380 F578                                      u1700 FBE0  
                                    u1620 F814                                      u2340 F6A8  
                                    u1525 FF7A                                      u1461 FDF0  
                                    u1381 F574                                      u1701 FBDC  
                                    u1621 F810                                      u2341 F6A4  
                                    u1390 F160                                      u1374 F554  
                                    u1550 EFA0                                      u1710 FD16  
                                    u1630 F824                                      u2350 F704  
                                    u1391 F15C                                      u1375 F550  
                                    u1551 EF9C                                      u1711 FD12  
                                    u1631 F820                                      u2351 F700  
                                    u1720 F9F0                                      u1560 F418  
                                    u1640 EDC8                                      u1800 F2AC  
                                    u1721 F9EC                                      u1561 F414  
                                    u1641 EDC4                                      u1801 F2A8  
                                    u1474 FE1C                                      u1730 FB26  
                                    u1570 F722                                      u1650 EDD8  
                                    u1810 F2BC                                      u1475 FE18  
                                    u1731 FB22                                      u1571 F71E  
                                    u1651 EDD4                                      u1811 F2B8  
                                    u1484 FE7E                                      u1580 F732  
                                    u1660 EDE8                                      u1820 F2CC  
                                    u1485 FE7A                                      u1581 F72E  
                                    u1661 EDE4                                      u1821 F2C8  
                                    u1494 FEDA                                      u1590 F742  
                                    u1670 EE32                                      u1830 F2DE  
                                    u1495 FED6                                      u1591 F73E  
                                    u1671 EE2E                                      u1831 F2DA  
                                    u2607 F6E6                                      u1680 EE42  
                                    u1840 F32E                                      u2617 FB2C  
                                    u1681 EE3E                                      u1841 F32A  
                                    u1850 EE9C                                      u1690 EE52  
                                    u2707 F1E6                                      u2627 FB4C  
                                    u1851 EE98                                      u1691 EE4E  
                                    u1860 EEEC                                      u2637 FB68  
                                    u1861 EEE8                                      u2647 F270  
                                    u2657 F28C                                      u2667 FD1C  
                                    u2677 FD3C                                      u2687 FD58  
                                    u2697 F1CA             ??_lcd_4bit_send_enable_signal 000D  
           lcd_8bit_send_custome_char@col 002A         lcd_8bit_send_enable_signal@en_pin 000F  
           lcd_8bit_send_custome_char@row 0029             lcd_8bit_send_custome_char@str 002B  
                                    _main F63E                                      fsr2h 000FDA  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      prodl 000FF3  
                                    start 0004             __end_of_lcd_8bit_send_command F0B4  
                            ___param_bank 000000                     _lcd_4bit_send_command F34A  
                    _gpio_pin_write_logic F8D0                    button_initialize@F2880 005F  
                                   ?_main 0001                  ??_application_initialize 0024  
              lcd_send_higher_nibble@data 0016                lcd_4bit_set_position@state 0020  
             lcd_8bit_initialize@data_pin 0023                  ?_lcd_8bit_send_char_data 0014  
             lcd_8bit_initialize@lcd_8bit 001A                                     tablat 000FF5  
                                   status 000FD8            ?_gpio_pin_direction_initialize 0001  
                         __initialization EF08                              __end_of_main F70C  
                   ?_gpio_pin_write_logic 0001                        _local_keypad_chars 0080  
           __end_of_lcd_8bit_set_position F8D0                             _lat_regesters 0063  
                                  ??_main 0030                     _lcd_4bit_set_position F70C  
                           __activetblptr 000002                          led_turn_on@F2893 0056  
             lcd_send_higher_nibble@F3104 003C                       main@local_index_919 0032  
                 rgb_led_initialize@F2892 004F                   rgb_led_initialize@F2894 004E  
                 rgb_led_initialize@F2896 004D                    lcd_send_4bits@data_pin 0012  
             lcd_send_higher_nibble@state 0018                    lcd_send_4bits@lcd_4bit 000B  
            ??_lcd_8bit_send_custome_char 002E                   segment_initialize@F2889 0034  
                       Relay_toggle@F2891 0050                    ?_lcd_4bit_send_command 0014  
                                  clear_0 EF6E                                    clear_1 EF7A  
          lcd_send_higher_nibble@lcd_4bit 0014                                    isa$std 000001  
       lcd_4bit_send_char_at_position@col 0024         lcd_4bit_send_char_at_position@row 0023  
              lcd_8bit_send_command@F3049 003E                              __pdataCOMRAM 0063  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                 lcd_8bit_initialize@en_pin 0022  
        ??_lcd_8bit_send_char_at_position 0026           ?_lcd_8bit_send_char_at_position 0021  
               lcd_8bit_initialize@rs_pin 0021               ?_lcd_8bit_send_custome_char 0027  
              lcd_8bit_send_command@state 0018                                __accesstop 0080  
                 __end_of__initialization EF80                 lcd_send_4bits@local_index 0013  
                           ___rparam_used 000001                          ??_lcd_send_4bits 000E  
                        ??_lcd_send_8bits 000E                   _lcd_4bit_send_char_data F402  
                  ??_gpio_pin_write_logic 0004                            __pcstackCOMRAM 0001  
                            __pidataBANK0 ED26                              __pidataBANK1 ED7A  
                dc_motor_initialize@F2880 005C                  dc_motor_initialize@F2878 005D  
                  ?_lcd_4bit_set_position 001A           lcd_8bit_send_char_data@lcd_8bit 0014  
           lcd_8bit_send_char_data@rs_pin 0019  gpio_pin_direction_initialize@_pin_config 0001  
           lcd_4bit_set_position@lcd_4bit 001A                  lcd_8bit_initialize@F3040 0040  
                lcd_8bit_initialize@F3043 003F                  lcd_8bit_initialize@F3038 0041  
      __end_of_lcd_4bit_send_custome_char EF08                _lcd_4bit_send_custome_char EE86  
                              __pbssBANK0 0080             lcd_4bit_send_custome_char@col 002A  
                  _application_initialize ED58             lcd_4bit_send_custome_char@row 0029  
           lcd_4bit_send_custome_char@str 002B              lcd_8bit_send_char_data@F3055 003D  
                lcd_8bit_initialize@state 001F                    button_read_state@F2886 005E  
          lcd_4bit_initialize@local_index 0020             segment_multi_initialize@F2902 0062  
                       led_turn_off@F2898 0055         lcd_4bit_send_enable_signal@en_pin 000F  
                         led_toggle@F2903 0054              lcd_8bit_send_char_data@state 0018  
                dc_motor_move_right@F2885 005B                  dc_motor_move_right@F2887 005A  
         lcd_4bit_send_char_data@lcd_4bit 0014       __end_of_lcd_8bit_send_enable_signal F296  
             _lcd_8bit_send_enable_signal F1F0              lcd_send_higher_nibble@rs_pin 0019  
     lcd_4bit_send_enable_signal@lcd_4bit 000B       lcd_8bit_send_enable_signal@lcd_8bit 000B  
                          _tris_regesters 006D                  ??_lcd_send_higher_nibble 0017  
         lcd_8bit_send_custome_char@state 002E                 ??_lcd_4bit_send_char_data 0017  
           ??_lcd_8bit_send_enable_signal 000D                segment_multi_disable@F2912 0060  
                                 __Hparam 0000                                   __Lparam 0000  
                   _lcd_8bit_send_command F01E                                   __pcinit EF08  
                                 __ramtop 1000                                   __ptext0 F63E  
                                 __ptext1 F296                                   __ptext2 EE1C  
                                 __ptext3 F7EE                                   __ptext4 F0B4  
                                 __ptext5 EE86                                   __ptext6 EDB2  
                                 __ptext7 F70C                                   __ptext8 F402  
                                 __ptext9 ED58               lcd_4bit_initialize@data_pin 0023  
         ??_gpio_pin_direction_initialize 0003               lcd_4bit_initialize@lcd_4bit 001A  
                    rgb_led_turn_on@F2902 004C                      rgb_led_turn_on@F2904 004B  
                    rgb_led_turn_on@F2906 004A                                   _rgb_led 00CE  
              lcd_8bit_set_position@state 0020             lcd_send_4bits@data_or_command 000D  
                    end_of_initialization EF80                             __Lmediumconst 0000  
                 ??_lcd_4bit_send_command 0017           lcd_4bit_send_custome_char@state 002E  
        lcd_8bit_send_char_at_position@ch 0025                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                       _lcd_4bit_initialize FBCA  
         __end_of_lcd_4bit_send_char_data F4BA                     _lcd_8bit_set_position F7EE  
          lcd_4bit_send_number_data@F3025 00B4               lcd_8bit_send_command@rs_pin 0019  
        lcd_8bit_send_enable_signal@F3141 0038          ??_lcd_4bit_send_char_at_position 0026  
         ?_lcd_4bit_send_char_at_position 0021                      ?_lcd_4bit_initialize 001A  
            ??_lcd_4bit_send_custome_char 002E          lcd_8bit_send_enable_signal@state 000E  
       lcd_8bit_send_custome_char@mem_pos 002D                    ?_lcd_8bit_send_command 0014  
  __end_of_lcd_8bit_send_char_at_position EE86            _lcd_8bit_send_char_at_position EE1C  
                 ??_lcd_4bit_set_position 001E                             __pidataCOMRAM ED3E  
           lcd_8bit_send_command@lcd_8bit 0014             lcd_4bit_send_char_data@rs_pin 0019  
                     start_initialization EF08                 lcd_4bit_initialize@en_pin 0022  
            ?_lcd_4bit_send_enable_signal 000B                       _lcd_8bit_initialize F9DA  
               lcd_4bit_initialize@rs_pin 0021     __end_of_gpio_pin_direction_initialize 0000  
           _gpio_pin_direction_initialize FDDE               ?_lcd_4bit_send_custome_char 0027  
                 ?_application_initialize 0001                     ??_lcd_4bit_initialize 001C  
                lcd_4bit_set_position@col 001D                  lcd_4bit_set_position@row 001C  
  lcd_4bit_send_char_at_position@lcd_4bit 0021    lcd_8bit_send_char_at_position@lcd_8bit 0021  
                 dc_motor_move_left@F2892 0059                   dc_motor_move_left@F2894 0058  
               lcd_send_8bits@local_index 0013                      ?_lcd_8bit_initialize 001A  
                 _lcd_8bit_send_char_data F0B4          lcd_4bit_send_char_at_position@ch 0025  
                             __pdataBANK0 00C4                               __pdataBANK1 0100  
                  ?_lcd_8bit_set_position 001A              lcd_4bit_send_command@command 0016  
                  _lcd_send_higher_nibble EF8A                 lcd_8bit_send_char_data@ch 0016  
                             __pbssCOMRAM 0034            __end_of_application_initialize ED7A  
      lcd_4bit_send_custome_char@lcd_4bit 0027        lcd_8bit_send_custome_char@lcd_8bit 0027  
        lcd_4bit_send_enable_signal@F3116 003A                     ??_lcd_8bit_initialize 001C  
                   Relay_initialize@F2876 0053           gpio_pin_write_logic@_pin_config 0001  
        lcd_4bit_send_enable_signal@state 000E                 gpio_pin_write_logic@logic 0003  
               gpio_pin_write_logic@state 000A     lcd_4bit_send_number_at_position@F3033 00A8  
   lcd_8bit_send_number_at_position@F3098 0090                 ??_lcd_8bit_send_char_data 0017  
                  lcd_send_8bits@data_pin 0012        gpio_pin_direction_initialize@state 0009  
           __end_of_lcd_4bit_send_command F402                    lcd_send_8bits@lcd_8bit 000B  
                     Relay_turn_off@F2886 0051                       lcd_send_4bits@F3111 003B  
                         main@local_index 0033             lcd_send_8bits@data_or_command 000D  
                ?_lcd_4bit_send_char_data 0014                                 copy_data0 EF1C  
                               copy_data1 EF3C                                 copy_data2 EF5C  
                     lcd_send_4bits@state 0011                   ??_lcd_8bit_send_command 0017  
                                __Hrparam 0000                                  __Lrparam 0000  
          lcd_8bit_initialize@local_index 0020    __end_of_lcd_4bit_send_char_at_position EE1C  
          _lcd_4bit_send_char_at_position EDB2             __end_of_lcd_4bit_set_position F7EE  
             lcd_4bit_send_command@rs_pin 0019             lcd_4bit_send_command@lcd_4bit 0014  
         __end_of_lcd_8bit_send_char_data F14A                       lcd_send_8bits@F3136 0039  
       lcd_4bit_send_custome_char@mem_pos 002D                                  _lcd_4bit 0077  
                                _lcd_8bit 00D2                               _customChars 0100  
                                __ptext10 F9DA                                  __ptext11 F01E  
                                __ptext20 FDDE                                  __ptext12 F57C  
                                __ptext13 F1F0                                  __ptext14 FBCA  
                                __ptext15 EF8A                                  __ptext16 F34A  
                                __ptext17 F4BA                                  __ptext18 F14A  
                                __ptext19 F8D0                       lcd_send_8bits@state 0011  
   lcd_8bit_send_custome_char@local_index 002F     lcd_4bit_send_custome_char@local_index 002F  
                      Relay_turn_on@F2881 0052                 segment_multi_enable@F2907 0061  
                                isa$xinst 000000                   ??_lcd_8bit_set_position 001E  
                 ?_lcd_send_higher_nibble 0014                     rgb_led_turn_off@F2911 0049  
                   rgb_led_turn_off@F2913 0048                     rgb_led_turn_off@F2915 0047  
     lcd_8bit_send_char_at_position@state 0026       lcd_4bit_send_char_at_position@state 0026  
              lcd_4bit_send_command@F2984 0043                            _lcd_send_4bits F4BA  
                          _lcd_send_8bits F57C               __end_of_lcd_4bit_initialize FDDE  
            __end_of_gpio_pin_write_logic F9DA              ?_lcd_8bit_send_enable_signal 000B  
              lcd_4bit_send_command@state 0018                  lcd_8bit_set_position@col 001D  
                lcd_8bit_set_position@row 001C         lcd_8bit_send_char_at_position@col 0024  
       lcd_8bit_send_char_at_position@row 0023            __end_of_lcd_send_higher_nibble F01E  
                  __end_of_lcd_send_4bits F57C                    __end_of_lcd_send_8bits F63E  
               lcd_4bit_send_char_data@ch 0016              lcd_4bit_send_char_data@F2990 0042  
          lcd_8bit_send_number_data@F3090 009C                            _port_regesters 00C4  
                lcd_4bit_initialize@F2973 0046                  lcd_4bit_initialize@F2975 0045  
                lcd_4bit_initialize@F2978 0044        __end_of_lcd_8bit_send_custome_char F34A  
              _lcd_8bit_send_custome_char F296               __end_of_lcd_8bit_initialize FBCA  
            lcd_4bit_send_char_data@state 0018                        segment_write@F2896 00C0  
            lcd_8bit_send_command@command 0016                  lcd_4bit_initialize@state 001F  
