

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Sep 28 08:20:18 2025

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44  0000                     
    45                           ; Generated 23/03/2023 GMT
    46                           ; 
    47                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4620 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	idataCOMRAM
    81  0027B8                     __pidataCOMRAM:
    82                           	callstack 0
    83                           
    84                           ;initializer for _lat_regesters
    85  0027B8  89                 	db	137
    86  0027B9  0F                 	db	15
    87  0027BA  8A                 	db	138
    88  0027BB  0F                 	db	15
    89  0027BC  8B                 	db	139
    90  0027BD  0F                 	db	15
    91  0027BE  8C                 	db	140
    92  0027BF  0F                 	db	15
    93  0027C0  8D                 	db	141
    94  0027C1  0F                 	db	15
    95                           
    96                           	psect	idataBANK0
    97  00276E                     __pidataBANK0:
    98                           	callstack 0
    99                           
   100                           ;initializer for _port_regesters
   101  00276E  80                 	db	128
   102  00276F  0F                 	db	15
   103  002770  81                 	db	129
   104  002771  0F                 	db	15
   105  002772  82                 	db	130
   106  002773  0F                 	db	15
   107  002774  83                 	db	131
   108  002775  0F                 	db	15
   109  002776  84                 	db	132
   110  002777  0F                 	db	15
   111                           
   112                           ;initializer for _tris_regesters
   113  002778  92                 	db	146
   114  002779  0F                 	db	15
   115  00277A  93                 	db	147
   116  00277B  0F                 	db	15
   117  00277C  94                 	db	148
   118  00277D  0F                 	db	15
   119  00277E  95                 	db	149
   120  00277F  0F                 	db	15
   121  002780  96                 	db	150
   122  002781  0F                 	db	15
   123                           
   124                           ;initializer for _rgb_led
   125  002782  02                 	db	2
   126  002783  0A                 	db	10
   127  002784  12                 	db	18
   128  002785  01                 	db	1
   129                           
   130                           ;initializer for _lcd_8bit
   131  002786  02                 	db	2
   132  002787  0A                 	db	10
   133  002788  03                 	db	3
   134  002789  0B                 	db	11
   135  00278A  13                 	db	19
   136  00278B  1B                 	db	27
   137  00278C  23                 	db	35
   138  00278D  2B                 	db	43
   139  00278E  33                 	db	51
   140  00278F  3B                 	db	59
   141                           
   142                           ;initializer for _lcd_4bit
   143  002790  01                 	db	1
   144  002791  09                 	db	9
   145  002792  11                 	db	17
   146  002793  19                 	db	25
   147  002794  21                 	db	33
   148  002795  29                 	db	41
   149                           
   150                           	psect	smallconst
   151  001000                     __psmallconst:
   152                           	callstack 0
   153  001000  00                 	db	0
   154  001001                     STR_1:
   155  001001  48                 	db	72	;'H'
   156  001002  65                 	db	101	;'e'
   157  001003  6C                 	db	108	;'l'
   158  001004  6C                 	db	108	;'l'
   159  001005  6F                 	db	111	;'o'
   160  001006  20                 	db	32
   161  001007  57                 	db	87	;'W'
   162  001008  6F                 	db	111	;'o'
   163  001009  72                 	db	114	;'r'
   164  00100A  6C                 	db	108	;'l'
   165  00100B  64                 	db	100	;'d'
   166  00100C  00                 	db	0
   167  00100D                     STR_3:
   168  00100D  43                 	db	67	;'C'
   169  00100E  6F                 	db	111	;'o'
   170  00100F  75                 	db	117	;'u'
   171  001010  6E                 	db	110	;'n'
   172  001011  74                 	db	116	;'t'
   173  001012  65                 	db	101	;'e'
   174  001013  72                 	db	114	;'r'
   175  001014  20                 	db	32
   176  001015  3D                 	db	61	;'='
   177  001016  20                 	db	32
   178  001017  00                 	db	0
   179  001018  00                 	db	0	; dummy byte at the end
   180  0000                     
   181                           ; #config settings
   182                           
   183                           	psect	cinit
   184  0026AC                     __pcinit:
   185                           	callstack 0
   186  0026AC                     start_initialization:
   187                           	callstack 0
   188  0026AC                     __initialization:
   189                           	callstack 0
   190                           
   191                           ; Initialize objects allocated to BANK0 (40 bytes)
   192                           ; load TBLPTR registers with __pidataBANK0
   193  0026AC  0E6E               	movlw	low __pidataBANK0
   194  0026AE  6EF6               	movwf	tblptrl,c
   195  0026B0  0E27               	movlw	high __pidataBANK0
   196  0026B2  6EF7               	movwf	tblptrh,c
   197  0026B4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   198  0026B6  6EF8               	movwf	tblptru,c
   199  0026B8  EE00  F0C4         	lfsr	0,__pdataBANK0
   200  0026BC  EE10 F028          	lfsr	1,40
   201  0026C0                     copy_data0:
   202  0026C0  0009               	tblrd		*+
   203  0026C2  CFF5 FFEE          	movff	tablat,postinc0
   204  0026C6  50E5               	movf	postdec1,w,c
   205  0026C8  50E1               	movf	fsr1l,w,c
   206  0026CA  E1FA               	bnz	copy_data0
   207                           
   208                           ; Initialize objects allocated to COMRAM (10 bytes)
   209                           ; load TBLPTR registers with __pidataCOMRAM
   210  0026CC  0EB8               	movlw	low __pidataCOMRAM
   211  0026CE  6EF6               	movwf	tblptrl,c
   212  0026D0  0E27               	movlw	high __pidataCOMRAM
   213  0026D2  6EF7               	movwf	tblptrh,c
   214  0026D4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   215  0026D6  6EF8               	movwf	tblptru,c
   216  0026D8  EE00  F075         	lfsr	0,__pdataCOMRAM
   217  0026DC  EE10 F00A          	lfsr	1,10
   218  0026E0                     copy_data1:
   219  0026E0  0009               	tblrd		*+
   220  0026E2  CFF5 FFEE          	movff	tablat,postinc0
   221  0026E6  50E5               	movf	postdec1,w,c
   222  0026E8  50E1               	movf	fsr1l,w,c
   223  0026EA  E1FA               	bnz	copy_data1
   224                           
   225                           ; Clear objects allocated to BANK0 (68 bytes)
   226  0026EC  EE00  F080         	lfsr	0,__pbssBANK0
   227  0026F0  0E44               	movlw	68
   228  0026F2                     clear_0:
   229  0026F2  6AEE               	clrf	postinc0,c
   230  0026F4  06E8               	decf	wreg,f,c
   231  0026F6  E1FD               	bnz	clear_0
   232                           
   233                           ; Clear objects allocated to COMRAM (47 bytes)
   234  0026F8  EE00  F046         	lfsr	0,__pbssCOMRAM
   235  0026FC  0E2F               	movlw	47
   236  0026FE                     clear_1:
   237  0026FE  6AEE               	clrf	postinc0,c
   238  002700  06E8               	decf	wreg,f,c
   239  002702  E1FD               	bnz	clear_1
   240  002704                     end_of_initialization:
   241                           	callstack 0
   242  002704                     __end_of__initialization:
   243                           	callstack 0
   244  002704  0E00               	movlw	low (__Lmediumconst shr (0+16))
   245  002706  6EF8               	movwf	tblptru,c
   246  002708  0100               	movlb	0
   247  00270A  EFCC  F00B         	goto	_main	;jump to C main() function
   248                           
   249                           	psect	bssCOMRAM
   250  000046                     __pbssCOMRAM:
   251                           	callstack 0
   252  000046                     	ds	4
   253  00004A                     lcd_8bit_send_enable_signal@F3138:
   254                           	callstack 0
   255  00004A                     	ds	1
   256  00004B                     lcd_send_8bits@F3133:
   257                           	callstack 0
   258  00004B                     	ds	1
   259  00004C                     lcd_4bit_send_enable_signal@F3114:
   260                           	callstack 0
   261  00004C                     	ds	1
   262  00004D                     lcd_send_4bits@F3109:
   263                           	callstack 0
   264  00004D                     	ds	1
   265  00004E                     lcd_send_higher_nibble@F3102:
   266                           	callstack 0
   267  00004E                     	ds	1
   268  00004F                     lcd_8bit_send_char_data@F3054:
   269                           	callstack 0
   270  00004F                     	ds	1
   271  000050                     lcd_8bit_send_command@F3048:
   272                           	callstack 0
   273  000050                     	ds	1
   274  000051                     lcd_8bit_initialize@F3042:
   275                           	callstack 0
   276  000051                     	ds	1
   277  000052                     lcd_8bit_initialize@F3039:
   278                           	callstack 0
   279  000052                     	ds	1
   280  000053                     lcd_8bit_initialize@F3037:
   281                           	callstack 0
   282  000053                     	ds	1
   283  000054                     lcd_4bit_send_char_data@F2990:
   284                           	callstack 0
   285  000054                     	ds	1
   286  000055                     lcd_4bit_send_command@F2984:
   287                           	callstack 0
   288  000055                     	ds	1
   289  000056                     lcd_4bit_initialize@F2978:
   290                           	callstack 0
   291  000056                     	ds	1
   292  000057                     lcd_4bit_initialize@F2975:
   293                           	callstack 0
   294  000057                     	ds	1
   295  000058                     lcd_4bit_initialize@F2973:
   296                           	callstack 0
   297  000058                     	ds	1
   298  000059                     rgb_led_turn_off@F2915:
   299                           	callstack 0
   300  000059                     	ds	1
   301  00005A                     rgb_led_turn_off@F2913:
   302                           	callstack 0
   303  00005A                     	ds	1
   304  00005B                     rgb_led_turn_off@F2911:
   305                           	callstack 0
   306  00005B                     	ds	1
   307  00005C                     rgb_led_turn_on@F2906:
   308                           	callstack 0
   309  00005C                     	ds	1
   310  00005D                     rgb_led_turn_on@F2904:
   311                           	callstack 0
   312  00005D                     	ds	1
   313  00005E                     rgb_led_turn_on@F2902:
   314                           	callstack 0
   315  00005E                     	ds	1
   316  00005F                     rgb_led_initialize@F2896:
   317                           	callstack 0
   318  00005F                     	ds	1
   319  000060                     rgb_led_initialize@F2894:
   320                           	callstack 0
   321  000060                     	ds	1
   322  000061                     rgb_led_initialize@F2892:
   323                           	callstack 0
   324  000061                     	ds	1
   325  000062                     Relay_toggle@F2891:
   326                           	callstack 0
   327  000062                     	ds	1
   328  000063                     Relay_turn_off@F2886:
   329                           	callstack 0
   330  000063                     	ds	1
   331  000064                     Relay_turn_on@F2881:
   332                           	callstack 0
   333  000064                     	ds	1
   334  000065                     Relay_initialize@F2876:
   335                           	callstack 0
   336  000065                     	ds	1
   337  000066                     led_toggle@F2903:
   338                           	callstack 0
   339  000066                     	ds	1
   340  000067                     led_turn_off@F2898:
   341                           	callstack 0
   342  000067                     	ds	1
   343  000068                     led_turn_on@F2893:
   344                           	callstack 0
   345  000068                     	ds	1
   346  000069                     led_initialize@F2888:
   347                           	callstack 0
   348  000069                     	ds	1
   349  00006A                     dc_motor_move_left@F2894:
   350                           	callstack 0
   351  00006A                     	ds	1
   352  00006B                     dc_motor_move_left@F2892:
   353                           	callstack 0
   354  00006B                     	ds	1
   355  00006C                     dc_motor_move_right@F2887:
   356                           	callstack 0
   357  00006C                     	ds	1
   358  00006D                     dc_motor_move_right@F2885:
   359                           	callstack 0
   360  00006D                     	ds	1
   361  00006E                     dc_motor_initialize@F2880:
   362                           	callstack 0
   363  00006E                     	ds	1
   364  00006F                     dc_motor_initialize@F2878:
   365                           	callstack 0
   366  00006F                     	ds	1
   367  000070                     button_read_state@F2886:
   368                           	callstack 0
   369  000070                     	ds	1
   370  000071                     button_initialize@F2880:
   371                           	callstack 0
   372  000071                     	ds	1
   373  000072                     segment_multi_disable@F2912:
   374                           	callstack 0
   375  000072                     	ds	1
   376  000073                     segment_multi_enable@F2907:
   377                           	callstack 0
   378  000073                     	ds	1
   379  000074                     segment_multi_initialize@F2902:
   380                           	callstack 0
   381  000074                     	ds	1
   382                           
   383                           	psect	dataCOMRAM
   384  000075                     __pdataCOMRAM:
   385                           	callstack 0
   386  000075                     _lat_regesters:
   387                           	callstack 0
   388  000075                     	ds	10
   389                           
   390                           	psect	bssBANK0
   391  000080                     __pbssBANK0:
   392                           	callstack 0
   393  000080                     _local_keypad_chars:
   394                           	callstack 0
   395  000080                     	ds	16
   396  000090                     	ds	12
   397  00009C                     	ds	12
   398  0000A8                     	ds	12
   399  0000B4                     	ds	12
   400  0000C0                     	ds	4
   401                           
   402                           	psect	dataBANK0
   403  0000C4                     __pdataBANK0:
   404                           	callstack 0
   405  0000C4                     _port_regesters:
   406                           	callstack 0
   407  0000C4                     	ds	10
   408  0000CE                     _tris_regesters:
   409                           	callstack 0
   410  0000CE                     	ds	10
   411  0000D8                     _rgb_led:
   412                           	callstack 0
   413  0000D8                     	ds	4
   414  0000DC                     _lcd_8bit:
   415                           	callstack 0
   416  0000DC                     	ds	10
   417  0000E6                     _lcd_4bit:
   418                           	callstack 0
   419  0000E6                     	ds	6
   420                           
   421                           	psect	cstackCOMRAM
   422  000001                     __pcstackCOMRAM:
   423                           	callstack 0
   424  000001                     ?___aldiv:
   425                           	callstack 0
   426  000001                     ?___almod:
   427                           	callstack 0
   428  000001                     gpio_pin_direction_initialize@_pin_config:
   429                           	callstack 0
   430  000001                     gpio_pin_write_logic@_pin_config:
   431                           	callstack 0
   432  000001                     reverse_string@str:
   433                           	callstack 0
   434  000001                     ___aldiv@dividend:
   435                           	callstack 0
   436  000001                     ___almod@dividend:
   437                           	callstack 0
   438                           
   439                           ; 4 bytes @ 0x0
   440  000001                     	ds	2
   441  000003                     ??_gpio_pin_direction_initialize:
   442  000003                     gpio_pin_write_logic@logic:
   443                           	callstack 0
   444  000003                     reverse_string@len:
   445                           	callstack 0
   446                           
   447                           ; 1 bytes @ 0x2
   448  000003                     	ds	1
   449  000004                     ??_gpio_pin_write_logic:
   450  000004                     reverse_string@temp:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0x3
   454  000004                     	ds	1
   455  000005                     reverse_string@i:
   456                           	callstack 0
   457  000005                     ___aldiv@divisor:
   458                           	callstack 0
   459  000005                     ___almod@divisor:
   460                           	callstack 0
   461                           
   462                           ; 4 bytes @ 0x4
   463  000005                     	ds	1
   464  000006                     reverse_string@j:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0x5
   468  000006                     	ds	3
   469  000009                     gpio_pin_direction_initialize@state:
   470                           	callstack 0
   471  000009                     ___aldiv@counter:
   472                           	callstack 0
   473  000009                     ___almod@counter:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x8
   477  000009                     	ds	1
   478  00000A                     gpio_pin_write_logic@state:
   479                           	callstack 0
   480  00000A                     ___aldiv@sign:
   481                           	callstack 0
   482  00000A                     ___almod@sign:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x9
   486  00000A                     	ds	1
   487  00000B                     lcd_send_4bits@lcd_4bit:
   488                           	callstack 0
   489  00000B                     lcd_4bit_send_enable_signal@lcd_4bit:
   490                           	callstack 0
   491  00000B                     lcd_send_8bits@lcd_8bit:
   492                           	callstack 0
   493  00000B                     lcd_8bit_send_enable_signal@lcd_8bit:
   494                           	callstack 0
   495  00000B                     ___aldiv@quotient:
   496                           	callstack 0
   497                           
   498                           ; 4 bytes @ 0xA
   499  00000B                     	ds	2
   500  00000D                     ??_lcd_4bit_send_enable_signal:
   501  00000D                     ??_lcd_8bit_send_enable_signal:
   502  00000D                     lcd_send_4bits@data_or_command:
   503                           	callstack 0
   504  00000D                     lcd_send_8bits@data_or_command:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0xC
   508  00000D                     	ds	1
   509  00000E                     ??_lcd_send_4bits:
   510  00000E                     ??_lcd_send_8bits:
   511  00000E                     lcd_4bit_send_enable_signal@state:
   512                           	callstack 0
   513  00000E                     lcd_8bit_send_enable_signal@state:
   514                           	callstack 0
   515                           
   516                           ; 1 bytes @ 0xD
   517  00000E                     	ds	1
   518  00000F                     lcd_4bit_send_enable_signal@en_pin:
   519                           	callstack 0
   520  00000F                     lcd_8bit_send_enable_signal@en_pin:
   521                           	callstack 0
   522  00000F                     lcd_convert_number_to_string@value:
   523                           	callstack 0
   524                           
   525                           ; 4 bytes @ 0xE
   526  00000F                     	ds	2
   527  000011                     lcd_send_4bits@state:
   528                           	callstack 0
   529  000011                     lcd_send_8bits@state:
   530                           	callstack 0
   531                           
   532                           ; 1 bytes @ 0x10
   533  000011                     	ds	1
   534  000012                     lcd_send_4bits@data_pin:
   535                           	callstack 0
   536  000012                     lcd_send_8bits@data_pin:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0x11
   540  000012                     	ds	1
   541  000013                     lcd_send_4bits@local_index:
   542                           	callstack 0
   543  000013                     lcd_send_8bits@local_index:
   544                           	callstack 0
   545  000013                     lcd_convert_number_to_string@str:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x12
   549  000013                     	ds	1
   550  000014                     lcd_4bit_send_command@lcd_4bit:
   551                           	callstack 0
   552  000014                     lcd_4bit_send_char_data@lcd_4bit:
   553                           	callstack 0
   554  000014                     lcd_8bit_send_command@lcd_8bit:
   555                           	callstack 0
   556  000014                     lcd_8bit_send_char_data@lcd_8bit:
   557                           	callstack 0
   558  000014                     lcd_send_higher_nibble@lcd_4bit:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x13
   562  000014                     	ds	1
   563  000015                     lcd_convert_number_to_string@state:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0x14
   567  000015                     	ds	1
   568  000016                     lcd_4bit_send_command@command:
   569                           	callstack 0
   570  000016                     lcd_4bit_send_char_data@ch:
   571                           	callstack 0
   572  000016                     lcd_8bit_send_command@command:
   573                           	callstack 0
   574  000016                     lcd_8bit_send_char_data@ch:
   575                           	callstack 0
   576  000016                     lcd_send_higher_nibble@data:
   577                           	callstack 0
   578  000016                     lcd_convert_number_to_string@is_negative:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x15
   582  000016                     	ds	1
   583  000017                     ??_lcd_send_higher_nibble:
   584  000017                     ??_lcd_4bit_send_command:
   585  000017                     ??_lcd_8bit_send_command:
   586  000017                     ??_lcd_4bit_send_char_data:
   587  000017                     ??_lcd_8bit_send_char_data:
   588  000017                     lcd_convert_number_to_string@local_index:
   589                           	callstack 0
   590                           
   591                           ; 1 bytes @ 0x16
   592  000017                     	ds	1
   593  000018                     lcd_4bit_send_command@state:
   594                           	callstack 0
   595  000018                     lcd_4bit_send_char_data@state:
   596                           	callstack 0
   597  000018                     lcd_8bit_send_command@state:
   598                           	callstack 0
   599  000018                     lcd_8bit_send_char_data@state:
   600                           	callstack 0
   601  000018                     lcd_send_higher_nibble@state:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x17
   605  000018                     	ds	1
   606  000019                     lcd_4bit_send_command@rs_pin:
   607                           	callstack 0
   608  000019                     lcd_4bit_send_char_data@rs_pin:
   609                           	callstack 0
   610  000019                     lcd_8bit_send_command@rs_pin:
   611                           	callstack 0
   612  000019                     lcd_8bit_send_char_data@rs_pin:
   613                           	callstack 0
   614  000019                     lcd_send_higher_nibble@rs_pin:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0x18
   618  000019                     	ds	1
   619  00001A                     lcd_4bit_initialize@lcd_4bit:
   620                           	callstack 0
   621  00001A                     lcd_4bit_send_string_data@lcd_4bit:
   622                           	callstack 0
   623  00001A                     lcd_4bit_set_position@lcd_4bit:
   624                           	callstack 0
   625  00001A                     lcd_8bit_initialize@lcd_8bit:
   626                           	callstack 0
   627  00001A                     lcd_8bit_send_string_data@lcd_8bit:
   628                           	callstack 0
   629  00001A                     lcd_8bit_set_position@lcd_8bit:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x19
   633  00001A                     	ds	2
   634  00001C                     ??_lcd_4bit_initialize:
   635  00001C                     ??_lcd_8bit_initialize:
   636  00001C                     lcd_4bit_set_position@row:
   637                           	callstack 0
   638  00001C                     lcd_8bit_set_position@row:
   639                           	callstack 0
   640  00001C                     lcd_4bit_send_string_data@str:
   641                           	callstack 0
   642  00001C                     lcd_8bit_send_string_data@str:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x1B
   646  00001C                     	ds	1
   647  00001D                     lcd_4bit_set_position@col:
   648                           	callstack 0
   649  00001D                     lcd_8bit_set_position@col:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x1C
   653  00001D                     	ds	1
   654  00001E                     ??_lcd_4bit_set_position:
   655  00001E                     ??_lcd_8bit_set_position:
   656  00001E                     lcd_4bit_send_string_data@state:
   657                           	callstack 0
   658  00001E                     lcd_8bit_send_string_data@state:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0x1D
   662  00001E                     	ds	1
   663  00001F                     lcd_4bit_initialize@state:
   664                           	callstack 0
   665  00001F                     lcd_8bit_initialize@state:
   666                           	callstack 0
   667                           
   668                           ; 1 bytes @ 0x1E
   669  00001F                     	ds	1
   670  000020                     lcd_4bit_initialize@local_index:
   671                           	callstack 0
   672  000020                     lcd_4bit_set_position@state:
   673                           	callstack 0
   674  000020                     lcd_8bit_initialize@local_index:
   675                           	callstack 0
   676  000020                     lcd_8bit_set_position@state:
   677                           	callstack 0
   678                           
   679                           ; 1 bytes @ 0x1F
   680  000020                     	ds	1
   681  000021                     lcd_4bit_initialize@rs_pin:
   682                           	callstack 0
   683  000021                     lcd_8bit_initialize@rs_pin:
   684                           	callstack 0
   685  000021                     lcd_4bit_send_string_at_position@lcd_4bit:
   686                           	callstack 0
   687  000021                     lcd_8bit_send_string_at_position@lcd_8bit:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x20
   691  000021                     	ds	1
   692  000022                     lcd_4bit_initialize@en_pin:
   693                           	callstack 0
   694  000022                     lcd_8bit_initialize@en_pin:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x21
   698  000022                     	ds	1
   699  000023                     lcd_4bit_initialize@data_pin:
   700                           	callstack 0
   701  000023                     lcd_4bit_send_string_at_position@row:
   702                           	callstack 0
   703  000023                     lcd_8bit_initialize@data_pin:
   704                           	callstack 0
   705  000023                     lcd_8bit_send_string_at_position@row:
   706                           	callstack 0
   707                           
   708                           ; 1 bytes @ 0x22
   709  000023                     	ds	1
   710  000024                     application_initialize@state:
   711                           	callstack 0
   712  000024                     lcd_4bit_send_string_at_position@col:
   713                           	callstack 0
   714  000024                     lcd_8bit_send_string_at_position@col:
   715                           	callstack 0
   716                           
   717                           ; 1 bytes @ 0x23
   718  000024                     	ds	1
   719  000025                     lcd_4bit_send_string_at_position@str:
   720                           	callstack 0
   721  000025                     lcd_8bit_send_string_at_position@str:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x24
   725  000025                     	ds	2
   726  000027                     lcd_4bit_send_string_at_position@state:
   727                           	callstack 0
   728  000027                     lcd_8bit_send_string_at_position@state:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0x26
   732  000027                     	ds	1
   733  000028                     lcd_4bit_send_number_at_position@lcd_4bit:
   734                           	callstack 0
   735  000028                     lcd_8bit_send_number_at_position@lcd_8bit:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0x27
   739  000028                     	ds	2
   740  00002A                     lcd_4bit_send_number_at_position@row:
   741                           	callstack 0
   742  00002A                     lcd_8bit_send_number_at_position@row:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x29
   746  00002A                     	ds	1
   747  00002B                     lcd_4bit_send_number_at_position@col:
   748                           	callstack 0
   749  00002B                     lcd_8bit_send_number_at_position@col:
   750                           	callstack 0
   751                           
   752                           ; 1 bytes @ 0x2A
   753  00002B                     	ds	1
   754  00002C                     lcd_4bit_send_number_at_position@value:
   755                           	callstack 0
   756  00002C                     lcd_8bit_send_number_at_position@value:
   757                           	callstack 0
   758                           
   759                           ; 4 bytes @ 0x2B
   760  00002C                     	ds	4
   761  000030                     lcd_4bit_send_number_at_position@str:
   762                           	callstack 0
   763  000030                     lcd_8bit_send_number_at_position@str:
   764                           	callstack 0
   765                           
   766                           ; 12 bytes @ 0x2F
   767  000030                     	ds	12
   768  00003C                     lcd_4bit_send_number_at_position@state:
   769                           	callstack 0
   770  00003C                     lcd_8bit_send_number_at_position@state:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0x3B
   774  00003C                     	ds	1
   775  00003D                     ??_main:
   776                           
   777                           ; 1 bytes @ 0x3C
   778  00003D                     	ds	1
   779  00003E                     main@counter1:
   780                           	callstack 0
   781                           
   782                           ; 4 bytes @ 0x3D
   783  00003E                     	ds	4
   784  000042                     main@counter2:
   785                           	callstack 0
   786                           
   787                           ; 4 bytes @ 0x41
   788  000042                     	ds	4
   789                           
   790 ;;
   791 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   792 ;;
   793 ;; *************** function _main *****************
   794 ;; Defined at:
   795 ;;		line 37 in file "application.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;		None
   798 ;; Auto vars:     Size  Location     Type
   799 ;;  counter2        4   65[COMRAM] long 
   800 ;;  counter1        4   61[COMRAM] long 
   801 ;; Return value:  Size  Location     Type
   802 ;;                  2  402[None  ] int 
   803 ;; Registers used:
   804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;Total ram usage:        9 bytes
   815 ;; Hardware stack levels required when called: 6
   816 ;; This function calls:
   817 ;;		_application_initialize
   818 ;;		_lcd_4bit_send_number_at_position
   819 ;;		_lcd_4bit_send_string_at_position
   820 ;;		_lcd_8bit_send_number_at_position
   821 ;;		_lcd_8bit_send_string_at_position
   822 ;; This function is called by:
   823 ;;		Startup code after reset
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	text0
   828  001798                     __ptext0:
   829                           	callstack 0
   830  001798                     _main:
   831                           	callstack 25
   832  001798                     
   833                           ;application.c: 39:     application_initialize();
   834  001798  ECCB  F013         	call	_application_initialize	;wreg free
   835  00179C                     
   836                           ;application.c: 40:     lcd_8bit_send_string_at_position(&lcd_8bit, 1, 4, "Hello World")
      +                          ;
   837  00179C  0EDC               	movlw	low _lcd_8bit
   838  00179E  6E21               	movwf	lcd_8bit_send_string_at_position@lcd_8bit^0,c
   839  0017A0  0E00               	movlw	high _lcd_8bit
   840  0017A2  6E22               	movwf	(lcd_8bit_send_string_at_position@lcd_8bit+1)^0,c
   841  0017A4  0E01               	movlw	1
   842  0017A6  6E23               	movwf	lcd_8bit_send_string_at_position@row^0,c
   843  0017A8  0E04               	movlw	4
   844  0017AA  6E24               	movwf	lcd_8bit_send_string_at_position@col^0,c
   845  0017AC  0E01               	movlw	low STR_1
   846  0017AE  6E25               	movwf	lcd_8bit_send_string_at_position@str^0,c
   847  0017B0  0E10               	movlw	high STR_1
   848  0017B2  6E26               	movwf	(lcd_8bit_send_string_at_position@str+1)^0,c
   849  0017B4  ECD6  F012         	call	_lcd_8bit_send_string_at_position	;wreg free
   850  0017B8                     
   851                           ;application.c: 41:     lcd_4bit_send_string_at_position(&lcd_4bit, 1, 4, "Hello World")
      +                          ;
   852  0017B8  0EE6               	movlw	low _lcd_4bit
   853  0017BA  6E21               	movwf	lcd_4bit_send_string_at_position@lcd_4bit^0,c
   854  0017BC  0E00               	movlw	high _lcd_4bit
   855  0017BE  6E22               	movwf	(lcd_4bit_send_string_at_position@lcd_4bit+1)^0,c
   856  0017C0  0E01               	movlw	1
   857  0017C2  6E23               	movwf	lcd_4bit_send_string_at_position@row^0,c
   858  0017C4  0E04               	movlw	4
   859  0017C6  6E24               	movwf	lcd_4bit_send_string_at_position@col^0,c
   860  0017C8  0E01               	movlw	low STR_1
   861  0017CA  6E25               	movwf	lcd_4bit_send_string_at_position@str^0,c
   862  0017CC  0E10               	movlw	high STR_1
   863  0017CE  6E26               	movwf	(lcd_4bit_send_string_at_position@str+1)^0,c
   864  0017D0  EC16  F013         	call	_lcd_4bit_send_string_at_position	;wreg free
   865  0017D4                     
   866                           ;application.c: 43:     lcd_8bit_send_string_at_position(&lcd_8bit, 2, 5, "Counter = ");
   867  0017D4  0EDC               	movlw	low _lcd_8bit
   868  0017D6  6E21               	movwf	lcd_8bit_send_string_at_position@lcd_8bit^0,c
   869  0017D8  0E00               	movlw	high _lcd_8bit
   870  0017DA  6E22               	movwf	(lcd_8bit_send_string_at_position@lcd_8bit+1)^0,c
   871  0017DC  0E02               	movlw	2
   872  0017DE  6E23               	movwf	lcd_8bit_send_string_at_position@row^0,c
   873  0017E0  0E05               	movlw	5
   874  0017E2  6E24               	movwf	lcd_8bit_send_string_at_position@col^0,c
   875  0017E4  0E0D               	movlw	low STR_3
   876  0017E6  6E25               	movwf	lcd_8bit_send_string_at_position@str^0,c
   877  0017E8  0E10               	movlw	high STR_3
   878  0017EA  6E26               	movwf	(lcd_8bit_send_string_at_position@str+1)^0,c
   879  0017EC  ECD6  F012         	call	_lcd_8bit_send_string_at_position	;wreg free
   880  0017F0                     
   881                           ;application.c: 44:     lcd_4bit_send_string_at_position(&lcd_4bit, 2, 5, "Counter = ");
   882  0017F0  0EE6               	movlw	low _lcd_4bit
   883  0017F2  6E21               	movwf	lcd_4bit_send_string_at_position@lcd_4bit^0,c
   884  0017F4  0E00               	movlw	high _lcd_4bit
   885  0017F6  6E22               	movwf	(lcd_4bit_send_string_at_position@lcd_4bit+1)^0,c
   886  0017F8  0E02               	movlw	2
   887  0017FA  6E23               	movwf	lcd_4bit_send_string_at_position@row^0,c
   888  0017FC  0E05               	movlw	5
   889  0017FE  6E24               	movwf	lcd_4bit_send_string_at_position@col^0,c
   890  001800  0E0D               	movlw	low STR_3
   891  001802  6E25               	movwf	lcd_4bit_send_string_at_position@str^0,c
   892  001804  0E10               	movlw	high STR_3
   893  001806  6E26               	movwf	(lcd_4bit_send_string_at_position@str+1)^0,c
   894  001808  EC16  F013         	call	_lcd_4bit_send_string_at_position	;wreg free
   895  00180C                     
   896                           ;application.c: 46:     sint32 counter1 = 0;
   897  00180C  0E00               	movlw	0
   898  00180E  6E3E               	movwf	main@counter1^0,c
   899  001810  0E00               	movlw	0
   900  001812  6E3F               	movwf	(main@counter1+1)^0,c
   901  001814  0E00               	movlw	0
   902  001816  6E40               	movwf	(main@counter1+2)^0,c
   903  001818  0E00               	movlw	0
   904  00181A  6E41               	movwf	(main@counter1+3)^0,c
   905  00181C                     
   906                           ;application.c: 47:     sint32 counter2 = 0;
   907  00181C  0E00               	movlw	0
   908  00181E  6E42               	movwf	main@counter2^0,c
   909  001820  0E00               	movlw	0
   910  001822  6E43               	movwf	(main@counter2+1)^0,c
   911  001824  0E00               	movlw	0
   912  001826  6E44               	movwf	(main@counter2+2)^0,c
   913  001828  0E00               	movlw	0
   914  00182A  6E45               	movwf	(main@counter2+3)^0,c
   915  00182C                     l4092:
   916                           
   917                           ;application.c: 49:     {;application.c: 50:         counter1++;
   918  00182C  0E01               	movlw	1
   919  00182E  263E               	addwf	main@counter1^0,f,c
   920  001830  0E00               	movlw	0
   921  001832  223F               	addwfc	(main@counter1+1)^0,f,c
   922  001834  2240               	addwfc	(main@counter1+2)^0,f,c
   923  001836  2241               	addwfc	(main@counter1+3)^0,f,c
   924  001838                     
   925                           ;application.c: 51:         counter2--;
   926  001838  0EFF               	movlw	255
   927  00183A  2642               	addwf	main@counter2^0,f,c
   928  00183C  0EFF               	movlw	255
   929  00183E  2243               	addwfc	(main@counter2+1)^0,f,c
   930  001840  0EFF               	movlw	255
   931  001842  2244               	addwfc	(main@counter2+2)^0,f,c
   932  001844  0EFF               	movlw	255
   933  001846  2245               	addwfc	(main@counter2+3)^0,f,c
   934  001848                     
   935                           ;application.c: 52:         lcd_8bit_send_number_at_position(&lcd_8bit, 2, 15, counter1)
      +                          ;
   936  001848  0EDC               	movlw	low _lcd_8bit
   937  00184A  6E28               	movwf	lcd_8bit_send_number_at_position@lcd_8bit^0,c
   938  00184C  0E00               	movlw	high _lcd_8bit
   939  00184E  6E29               	movwf	(lcd_8bit_send_number_at_position@lcd_8bit+1)^0,c
   940  001850  0E02               	movlw	2
   941  001852  6E2A               	movwf	lcd_8bit_send_number_at_position@row^0,c
   942  001854  0E0F               	movlw	15
   943  001856  6E2B               	movwf	lcd_8bit_send_number_at_position@col^0,c
   944  001858  C03E  F02C         	movff	main@counter1,lcd_8bit_send_number_at_position@value
   945  00185C  C03F  F02D         	movff	main@counter1+1,lcd_8bit_send_number_at_position@value+1
   946  001860  C040  F02E         	movff	main@counter1+2,lcd_8bit_send_number_at_position@value+2
   947  001864  C041  F02F         	movff	main@counter1+3,lcd_8bit_send_number_at_position@value+3
   948  001868  EC52  F012         	call	_lcd_8bit_send_number_at_position	;wreg free
   949  00186C                     
   950                           ;application.c: 53:         lcd_4bit_send_number_at_position(&lcd_4bit, 2, 15, counter2)
      +                          ;
   951  00186C  0EE6               	movlw	low _lcd_4bit
   952  00186E  6E28               	movwf	lcd_4bit_send_number_at_position@lcd_4bit^0,c
   953  001870  0E00               	movlw	high _lcd_4bit
   954  001872  6E29               	movwf	(lcd_4bit_send_number_at_position@lcd_4bit+1)^0,c
   955  001874  0E02               	movlw	2
   956  001876  6E2A               	movwf	lcd_4bit_send_number_at_position@row^0,c
   957  001878  0E0F               	movlw	15
   958  00187A  6E2B               	movwf	lcd_4bit_send_number_at_position@col^0,c
   959  00187C  C042  F02C         	movff	main@counter2,lcd_4bit_send_number_at_position@value
   960  001880  C043  F02D         	movff	main@counter2+1,lcd_4bit_send_number_at_position@value+1
   961  001884  C044  F02E         	movff	main@counter2+2,lcd_4bit_send_number_at_position@value+2
   962  001888  C045  F02F         	movff	main@counter2+3,lcd_4bit_send_number_at_position@value+3
   963  00188C  EC94  F012         	call	_lcd_4bit_send_number_at_position	;wreg free
   964  001890                     
   965                           ;application.c: 54:         _delay((unsigned long)((50)*(8000000/4000.0)));
   966  001890  0E82               	movlw	130
   967  001892  6E3D               	movwf	??_main^0,c
   968  001894  0EDE               	movlw	222
   969  001896                     u2787:
   970  001896  2EE8               	decfsz	wreg,f,c
   971  001898  D7FE               	bra	u2787
   972  00189A  2E3D               	decfsz	??_main^0,f,c
   973  00189C  D7FC               	bra	u2787
   974  00189E  EF16  F00C         	goto	l4092
   975  0018A2  EF02  F000         	goto	start
   976  0018A6                     __end_of_main:
   977                           	callstack 0
   978                           
   979 ;; *************** function _lcd_8bit_send_number_at_position *****************
   980 ;; Defined at:
   981 ;;		line 428 in file "ECU/LCD/ecu_lcd.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;  lcd_8bit        2   39[COMRAM] PTR const struct .
   984 ;;		 -> lcd_8bit(10), 
   985 ;;  row             1   41[COMRAM] const unsigned char 
   986 ;;  col             1   42[COMRAM] const unsigned char 
   987 ;;  value           4   43[COMRAM] long 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  str            12   47[COMRAM] unsigned char [12]
   990 ;;  state           1   59[COMRAM] unsigned char 
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      unsigned char 
   993 ;; Registers used:
   994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1000 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1003 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1004 ;;Total ram usage:       21 bytes
  1005 ;; Hardware stack levels used: 1
  1006 ;; Hardware stack levels required when called: 5
  1007 ;; This function calls:
  1008 ;;		_lcd_8bit_send_string_at_position
  1009 ;;		_lcd_convert_number_to_string
  1010 ;; This function is called by:
  1011 ;;		_main
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           	psect	text1
  1016  0024A4                     __ptext1:
  1017                           	callstack 0
  1018  0024A4                     _lcd_8bit_send_number_at_position:
  1019                           	callstack 25
  1020  0024A4                     
  1021                           ;ECU/LCD/ecu_lcd.c: 428: Std_ReturnType lcd_8bit_send_number_at_position(const lcd_8bit_
      +                          t* lcd_8bit, const uint8 row, const uint8 col, sint32 value);ECU/LCD/ecu_lcd.c: 429: {;E
      +                          CU/LCD/ecu_lcd.c: 430:     Std_ReturnType state = (Std_ReturnType)1;
  1022  0024A4  0E01               	movlw	1
  1023  0024A6  6E3C               	movwf	lcd_8bit_send_number_at_position@state^0,c
  1024  0024A8                     
  1025                           ;ECU/LCD/ecu_lcd.c: 431:     if(lcd_8bit == ((void*)0) || row > 4 || col > 80)
  1026  0024A8  5028               	movf	lcd_8bit_send_number_at_position@lcd_8bit^0,w,c
  1027  0024AA  1029               	iorwf	(lcd_8bit_send_number_at_position@lcd_8bit+1)^0,w,c
  1028  0024AC  B4D8               	btfsc	status,2,c
  1029  0024AE  EF5B  F012         	goto	u2161
  1030  0024B2  EF5D  F012         	goto	u2160
  1031  0024B6                     u2161:
  1032  0024B6  EF6D  F012         	goto	l3506
  1033  0024BA                     u2160:
  1034  0024BA  0E05               	movlw	5
  1035  0024BC  602A               	cpfslt	lcd_8bit_send_number_at_position@row^0,c
  1036  0024BE  EF63  F012         	goto	u2171
  1037  0024C2  EF65  F012         	goto	u2170
  1038  0024C6                     u2171:
  1039  0024C6  EF6D  F012         	goto	l3506
  1040  0024CA                     u2170:
  1041  0024CA  0E50               	movlw	80
  1042  0024CC  642B               	cpfsgt	lcd_8bit_send_number_at_position@col^0,c
  1043  0024CE  EF6B  F012         	goto	u2181
  1044  0024D2  EF6D  F012         	goto	u2180
  1045  0024D6                     u2181:
  1046  0024D6  EF6F  F012         	goto	l3508
  1047  0024DA                     u2180:
  1048  0024DA                     l3506:
  1049                           
  1050                           ;ECU/LCD/ecu_lcd.c: 434:     }
  1051  0024DA  EF93  F012         	goto	l615
  1052  0024DE                     l3508:
  1053                           
  1054                           ;ECU/LCD/ecu_lcd.c: 436:     {;ECU/LCD/ecu_lcd.c: 437:         uint8 str[12] = {0};
  1055  0024DE  EE20  F030         	lfsr	2,lcd_8bit_send_number_at_position@str
  1056  0024E2  0E0B               	movlw	11
  1057  0024E4                     u2191:
  1058  0024E4  6ADE               	clrf	postinc2,c
  1059  0024E6  06E8               	decf	wreg,f,c
  1060  0024E8  E2FD               	bc	u2191
  1061  0024EA                     
  1062                           ;ECU/LCD/ecu_lcd.c: 438:         state &= lcd_convert_number_to_string(value, str);
  1063  0024EA  C02C  F00F         	movff	lcd_8bit_send_number_at_position@value,lcd_convert_number_to_string@value
  1064  0024EE  C02D  F010         	movff	lcd_8bit_send_number_at_position@value+1,lcd_convert_number_to_string@value+1
  1065  0024F2  C02E  F011         	movff	lcd_8bit_send_number_at_position@value+2,lcd_convert_number_to_string@value+2
  1066  0024F6  C02F  F012         	movff	lcd_8bit_send_number_at_position@value+3,lcd_convert_number_to_string@value+3
  1067  0024FA  0E30               	movlw	low lcd_8bit_send_number_at_position@str
  1068  0024FC  6E13               	movwf	lcd_convert_number_to_string@str^0,c
  1069  0024FE  0E00               	movlw	high lcd_8bit_send_number_at_position@str
  1070  002500  6E14               	movwf	(lcd_convert_number_to_string@str+1)^0,c
  1071  002502  EC20  F00B         	call	_lcd_convert_number_to_string	;wreg free
  1072  002506  163C               	andwf	lcd_8bit_send_number_at_position@state^0,f,c
  1073  002508                     
  1074                           ;ECU/LCD/ecu_lcd.c: 439:         state &= lcd_8bit_send_string_at_position(lcd_8bit, row
      +                          , col, str);
  1075  002508  C028  F021         	movff	lcd_8bit_send_number_at_position@lcd_8bit,lcd_8bit_send_string_at_position@lcd_8b
      +                          it
  1076  00250C  C029  F022         	movff	lcd_8bit_send_number_at_position@lcd_8bit+1,lcd_8bit_send_string_at_position@lcd_
      +                          8bit+1
  1077  002510  C02A  F023         	movff	lcd_8bit_send_number_at_position@row,lcd_8bit_send_string_at_position@row
  1078  002514  C02B  F024         	movff	lcd_8bit_send_number_at_position@col,lcd_8bit_send_string_at_position@col
  1079  002518  0E30               	movlw	low lcd_8bit_send_number_at_position@str
  1080  00251A  6E25               	movwf	lcd_8bit_send_string_at_position@str^0,c
  1081  00251C  0E00               	movlw	high lcd_8bit_send_number_at_position@str
  1082  00251E  6E26               	movwf	(lcd_8bit_send_string_at_position@str+1)^0,c
  1083  002520  ECD6  F012         	call	_lcd_8bit_send_string_at_position	;wreg free
  1084  002524  163C               	andwf	lcd_8bit_send_number_at_position@state^0,f,c
  1085  002526                     l615:
  1086  002526  0012               	return		;funcret
  1087  002528                     __end_of_lcd_8bit_send_number_at_position:
  1088                           	callstack 0
  1089                           
  1090 ;; *************** function _lcd_8bit_send_string_at_position *****************
  1091 ;; Defined at:
  1092 ;;		line 354 in file "ECU/LCD/ecu_lcd.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;  lcd_8bit        2   32[COMRAM] PTR const struct .
  1095 ;;		 -> lcd_8bit(10), 
  1096 ;;  row             1   34[COMRAM] const unsigned char 
  1097 ;;  col             1   35[COMRAM] const unsigned char 
  1098 ;;  str             2   36[COMRAM] PTR const unsigned char 
  1099 ;;		 -> lcd_8bit_send_number_at_position@str(12), STR_3(11), STR_1(12), 
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  state           1   38[COMRAM] unsigned char 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  1    wreg      unsigned char 
  1104 ;; Registers used:
  1105 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1111 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1115 ;;Total ram usage:        7 bytes
  1116 ;; Hardware stack levels used: 1
  1117 ;; Hardware stack levels required when called: 4
  1118 ;; This function calls:
  1119 ;;		_lcd_8bit_send_string_data
  1120 ;;		_lcd_8bit_set_position
  1121 ;; This function is called by:
  1122 ;;		_main
  1123 ;;		_lcd_8bit_send_number_at_position
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text2
  1128  0025AC                     __ptext2:
  1129                           	callstack 0
  1130  0025AC                     _lcd_8bit_send_string_at_position:
  1131                           	callstack 26
  1132  0025AC                     
  1133                           ;ECU/LCD/ecu_lcd.c: 354: Std_ReturnType lcd_8bit_send_string_at_position(const lcd_8bit_
      +                          t* lcd_8bit, const uint8 row, const uint8 col, const char* str);ECU/LCD/ecu_lcd.c: 355: 
      +                          {;ECU/LCD/ecu_lcd.c: 356:     Std_ReturnType state = (Std_ReturnType)1;
  1134  0025AC  0E01               	movlw	1
  1135  0025AE  6E27               	movwf	lcd_8bit_send_string_at_position@state^0,c
  1136  0025B0                     
  1137                           ;ECU/LCD/ecu_lcd.c: 357:     if(lcd_8bit == ((void*)0) || row > 4 || col > 80 || str == 
      +                          ((void*)0))
  1138  0025B0  5021               	movf	lcd_8bit_send_string_at_position@lcd_8bit^0,w,c
  1139  0025B2  1022               	iorwf	(lcd_8bit_send_string_at_position@lcd_8bit+1)^0,w,c
  1140  0025B4  B4D8               	btfsc	status,2,c
  1141  0025B6  EFDF  F012         	goto	u1991
  1142  0025BA  EFE1  F012         	goto	u1990
  1143  0025BE                     u1991:
  1144  0025BE  EFFA  F012         	goto	l3280
  1145  0025C2                     u1990:
  1146  0025C2  0E05               	movlw	5
  1147  0025C4  6023               	cpfslt	lcd_8bit_send_string_at_position@row^0,c
  1148  0025C6  EFE7  F012         	goto	u2001
  1149  0025CA  EFE9  F012         	goto	u2000
  1150  0025CE                     u2001:
  1151  0025CE  EFFA  F012         	goto	l3280
  1152  0025D2                     u2000:
  1153  0025D2  0E51               	movlw	81
  1154  0025D4  6024               	cpfslt	lcd_8bit_send_string_at_position@col^0,c
  1155  0025D6  EFEF  F012         	goto	u2011
  1156  0025DA  EFF1  F012         	goto	u2010
  1157  0025DE                     u2011:
  1158  0025DE  EFFA  F012         	goto	l3280
  1159  0025E2                     u2010:
  1160  0025E2  5025               	movf	lcd_8bit_send_string_at_position@str^0,w,c
  1161  0025E4  1026               	iorwf	(lcd_8bit_send_string_at_position@str+1)^0,w,c
  1162  0025E6  A4D8               	btfss	status,2,c
  1163  0025E8  EFF8  F012         	goto	u2021
  1164  0025EC  EFFA  F012         	goto	u2020
  1165  0025F0                     u2021:
  1166  0025F0  EFFE  F012         	goto	l3282
  1167  0025F4                     u2020:
  1168  0025F4                     l3280:
  1169                           
  1170                           ;ECU/LCD/ecu_lcd.c: 358:     {;ECU/LCD/ecu_lcd.c: 359:         state = (Std_ReturnType)0
      +                          ;
  1171  0025F4  0E00               	movlw	0
  1172  0025F6  6E27               	movwf	lcd_8bit_send_string_at_position@state^0,c
  1173                           
  1174                           ;ECU/LCD/ecu_lcd.c: 360:     }
  1175  0025F8  EF14  F013         	goto	l3286
  1176  0025FC                     l3282:
  1177                           
  1178                           ;ECU/LCD/ecu_lcd.c: 362:     {;ECU/LCD/ecu_lcd.c: 363:         state &= lcd_8bit_set_pos
      +                          ition(lcd_8bit, row, col);
  1179  0025FC  C021  F01A         	movff	lcd_8bit_send_string_at_position@lcd_8bit,lcd_8bit_set_position@lcd_8bit
  1180  002600  C022  F01B         	movff	lcd_8bit_send_string_at_position@lcd_8bit+1,lcd_8bit_set_position@lcd_8bit+1
  1181  002604  C023  F01C         	movff	lcd_8bit_send_string_at_position@row,lcd_8bit_set_position@row
  1182  002608  C024  F01D         	movff	lcd_8bit_send_string_at_position@col,lcd_8bit_set_position@col
  1183  00260C  ECD4  F00D         	call	_lcd_8bit_set_position	;wreg free
  1184  002610  1627               	andwf	lcd_8bit_send_string_at_position@state^0,f,c
  1185  002612                     
  1186                           ;ECU/LCD/ecu_lcd.c: 364:         state &= lcd_8bit_send_string_data(lcd_8bit, str);
  1187  002612  C021  F01A         	movff	lcd_8bit_send_string_at_position@lcd_8bit,lcd_8bit_send_string_data@lcd_8bit
  1188  002616  C022  F01B         	movff	lcd_8bit_send_string_at_position@lcd_8bit+1,lcd_8bit_send_string_data@lcd_8bit+1
  1189  00261A  C025  F01C         	movff	lcd_8bit_send_string_at_position@str,lcd_8bit_send_string_data@str
  1190  00261E  C026  F01D         	movff	lcd_8bit_send_string_at_position@str+1,lcd_8bit_send_string_data@str+1
  1191  002622  ECD6  F010         	call	_lcd_8bit_send_string_data	;wreg free
  1192  002626  1627               	andwf	lcd_8bit_send_string_at_position@state^0,f,c
  1193  002628                     l3286:
  1194                           
  1195                           ;ECU/LCD/ecu_lcd.c: 366:     return state;
  1196  002628  5027               	movf	lcd_8bit_send_string_at_position@state^0,w,c
  1197  00262A  0012               	return		;funcret
  1198  00262C                     __end_of_lcd_8bit_send_string_at_position:
  1199                           	callstack 0
  1200                           
  1201 ;; *************** function _lcd_8bit_set_position *****************
  1202 ;; Defined at:
  1203 ;;		line 383 in file "ECU/LCD/ecu_lcd.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;  lcd_8bit        2   25[COMRAM] PTR const struct .
  1206 ;;		 -> lcd_8bit(10), 
  1207 ;;  row             1   27[COMRAM] unsigned char 
  1208 ;;  col             1   28[COMRAM] unsigned char 
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;  state           1   31[COMRAM] unsigned char 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      unsigned char 
  1213 ;; Registers used:
  1214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1220 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;Total ram usage:        7 bytes
  1225 ;; Hardware stack levels used: 1
  1226 ;; Hardware stack levels required when called: 3
  1227 ;; This function calls:
  1228 ;;		_lcd_8bit_send_command
  1229 ;; This function is called by:
  1230 ;;		_lcd_8bit_send_string_at_position
  1231 ;;		_lcd_8bit_send_char_at_position
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           	psect	text3
  1236  001BA8                     __ptext3:
  1237                           	callstack 0
  1238  001BA8                     _lcd_8bit_set_position:
  1239                           	callstack 26
  1240  001BA8                     
  1241                           ;ECU/LCD/ecu_lcd.c: 383: Std_ReturnType lcd_8bit_set_position(const lcd_8bit_t* lcd_8bit
      +                          , uint8 row, uint8 col);ECU/LCD/ecu_lcd.c: 384: {;ECU/LCD/ecu_lcd.c: 385:     Std_Return
      +                          Type state = (Std_ReturnType)1;
  1242  001BA8  0E01               	movlw	1
  1243  001BAA  6E20               	movwf	lcd_8bit_set_position@state^0,c
  1244  001BAC                     
  1245                           ;ECU/LCD/ecu_lcd.c: 386:     if(lcd_8bit == ((void*)0) || row > 4 || col > 80)
  1246  001BAC  501A               	movf	lcd_8bit_set_position@lcd_8bit^0,w,c
  1247  001BAE  101B               	iorwf	(lcd_8bit_set_position@lcd_8bit+1)^0,w,c
  1248  001BB0  B4D8               	btfsc	status,2,c
  1249  001BB2  EFDD  F00D         	goto	u1781
  1250  001BB6  EFDF  F00D         	goto	u1780
  1251  001BBA                     u1781:
  1252  001BBA  EFEF  F00D         	goto	l3132
  1253  001BBE                     u1780:
  1254  001BBE  0E05               	movlw	5
  1255  001BC0  601C               	cpfslt	lcd_8bit_set_position@row^0,c
  1256  001BC2  EFE5  F00D         	goto	u1791
  1257  001BC6  EFE7  F00D         	goto	u1790
  1258  001BCA                     u1791:
  1259  001BCA  EFEF  F00D         	goto	l3132
  1260  001BCE                     u1790:
  1261  001BCE  0E50               	movlw	80
  1262  001BD0  641D               	cpfsgt	lcd_8bit_set_position@col^0,c
  1263  001BD2  EFED  F00D         	goto	u1801
  1264  001BD6  EFEF  F00D         	goto	u1800
  1265  001BDA                     u1801:
  1266  001BDA  EFF3  F00D         	goto	l3134
  1267  001BDE                     u1800:
  1268  001BDE                     l3132:
  1269                           
  1270                           ;ECU/LCD/ecu_lcd.c: 387:     {;ECU/LCD/ecu_lcd.c: 388:         state = (Std_ReturnType)0
      +                          ;
  1271  001BDE  0E00               	movlw	0
  1272  001BE0  6E20               	movwf	lcd_8bit_set_position@state^0,c
  1273                           
  1274                           ;ECU/LCD/ecu_lcd.c: 389:     }
  1275  001BE2  EF43  F00E         	goto	l3148
  1276  001BE6                     l3134:
  1277                           
  1278                           ;ECU/LCD/ecu_lcd.c: 391:     {;ECU/LCD/ecu_lcd.c: 392:         col--;
  1279  001BE6  061D               	decf	lcd_8bit_set_position@col^0,f,c
  1280                           
  1281                           ;ECU/LCD/ecu_lcd.c: 393:         switch(row)
  1282  001BE8  EF26  F00E         	goto	l3146
  1283  001BEC                     l3136:
  1284                           
  1285                           ;ECU/LCD/ecu_lcd.c: 396:                 state &= lcd_8bit_send_command(lcd_8bit, (0x80 
      +                          + col));
  1286  001BEC  C01A  F014         	movff	lcd_8bit_set_position@lcd_8bit,lcd_8bit_send_command@lcd_8bit
  1287  001BF0  C01B  F015         	movff	lcd_8bit_set_position@lcd_8bit+1,lcd_8bit_send_command@lcd_8bit+1
  1288  001BF4  501D               	movf	lcd_8bit_set_position@col^0,w,c
  1289  001BF6  0F80               	addlw	128
  1290  001BF8  6E16               	movwf	lcd_8bit_send_command@command^0,c
  1291  001BFA  ECBD  F011         	call	_lcd_8bit_send_command	;wreg free
  1292  001BFE  1620               	andwf	lcd_8bit_set_position@state^0,f,c
  1293                           
  1294                           ;ECU/LCD/ecu_lcd.c: 397:                 break;
  1295  001C00  EF43  F00E         	goto	l3148
  1296  001C04                     l3138:
  1297                           
  1298                           ;ECU/LCD/ecu_lcd.c: 399:                 state &= lcd_8bit_send_command(lcd_8bit, (0xC0 
      +                          + col));
  1299  001C04  C01A  F014         	movff	lcd_8bit_set_position@lcd_8bit,lcd_8bit_send_command@lcd_8bit
  1300  001C08  C01B  F015         	movff	lcd_8bit_set_position@lcd_8bit+1,lcd_8bit_send_command@lcd_8bit+1
  1301  001C0C  501D               	movf	lcd_8bit_set_position@col^0,w,c
  1302  001C0E  0FC0               	addlw	192
  1303  001C10  6E16               	movwf	lcd_8bit_send_command@command^0,c
  1304  001C12  ECBD  F011         	call	_lcd_8bit_send_command	;wreg free
  1305  001C16  1620               	andwf	lcd_8bit_set_position@state^0,f,c
  1306                           
  1307                           ;ECU/LCD/ecu_lcd.c: 400:                 break;
  1308  001C18  EF43  F00E         	goto	l3148
  1309  001C1C                     l3140:
  1310                           
  1311                           ;ECU/LCD/ecu_lcd.c: 402:                 state &= lcd_8bit_send_command(lcd_8bit, (0x94 
      +                          + col));
  1312  001C1C  C01A  F014         	movff	lcd_8bit_set_position@lcd_8bit,lcd_8bit_send_command@lcd_8bit
  1313  001C20  C01B  F015         	movff	lcd_8bit_set_position@lcd_8bit+1,lcd_8bit_send_command@lcd_8bit+1
  1314  001C24  501D               	movf	lcd_8bit_set_position@col^0,w,c
  1315  001C26  0F94               	addlw	148
  1316  001C28  6E16               	movwf	lcd_8bit_send_command@command^0,c
  1317  001C2A  ECBD  F011         	call	_lcd_8bit_send_command	;wreg free
  1318  001C2E  1620               	andwf	lcd_8bit_set_position@state^0,f,c
  1319                           
  1320                           ;ECU/LCD/ecu_lcd.c: 403:                 break;
  1321  001C30  EF43  F00E         	goto	l3148
  1322  001C34                     l3142:
  1323                           
  1324                           ;ECU/LCD/ecu_lcd.c: 405:                 state &= lcd_8bit_send_command(lcd_8bit, (0xD4 
      +                          + col));
  1325  001C34  C01A  F014         	movff	lcd_8bit_set_position@lcd_8bit,lcd_8bit_send_command@lcd_8bit
  1326  001C38  C01B  F015         	movff	lcd_8bit_set_position@lcd_8bit+1,lcd_8bit_send_command@lcd_8bit+1
  1327  001C3C  501D               	movf	lcd_8bit_set_position@col^0,w,c
  1328  001C3E  0FD4               	addlw	212
  1329  001C40  6E16               	movwf	lcd_8bit_send_command@command^0,c
  1330  001C42  ECBD  F011         	call	_lcd_8bit_send_command	;wreg free
  1331  001C46  1620               	andwf	lcd_8bit_set_position@state^0,f,c
  1332                           
  1333                           ;ECU/LCD/ecu_lcd.c: 406:                 break;
  1334  001C48  EF43  F00E         	goto	l3148
  1335  001C4C                     l3146:
  1336  001C4C  501C               	movf	lcd_8bit_set_position@row^0,w,c
  1337  001C4E  6E1E               	movwf	??_lcd_8bit_set_position^0,c
  1338  001C50  6A1F               	clrf	(??_lcd_8bit_set_position+1)^0,c
  1339                           
  1340                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1341                           ; Switch size 1, requested type "simple"
  1342                           ; Number of cases is 1, Range of values is 0 to 0
  1343                           ; switch strategies available:
  1344                           ; Name         Instructions Cycles
  1345                           ; simple_byte            4     3 (average)
  1346                           ;	Chosen strategy is simple_byte
  1347  001C52  501F               	movf	(??_lcd_8bit_set_position+1)^0,w,c
  1348  001C54  0A00               	xorlw	0	; case 0
  1349  001C56  B4D8               	btfsc	status,2,c
  1350  001C58  EF30  F00E         	goto	l4178
  1351  001C5C  EF43  F00E         	goto	l3148
  1352  001C60                     l4178:
  1353                           
  1354                           ; Switch size 1, requested type "simple"
  1355                           ; Number of cases is 4, Range of values is 1 to 4
  1356                           ; switch strategies available:
  1357                           ; Name         Instructions Cycles
  1358                           ; simple_byte           13     7 (average)
  1359                           ;	Chosen strategy is simple_byte
  1360  001C60  501E               	movf	??_lcd_8bit_set_position^0,w,c
  1361  001C62  0A01               	xorlw	1	; case 1
  1362  001C64  B4D8               	btfsc	status,2,c
  1363  001C66  EFF6  F00D         	goto	l3136
  1364  001C6A  0A03               	xorlw	3	; case 2
  1365  001C6C  B4D8               	btfsc	status,2,c
  1366  001C6E  EF02  F00E         	goto	l3138
  1367  001C72  0A01               	xorlw	1	; case 3
  1368  001C74  B4D8               	btfsc	status,2,c
  1369  001C76  EF0E  F00E         	goto	l3140
  1370  001C7A  0A07               	xorlw	7	; case 4
  1371  001C7C  B4D8               	btfsc	status,2,c
  1372  001C7E  EF1A  F00E         	goto	l3142
  1373  001C82  EF43  F00E         	goto	l3148
  1374  001C86                     l3148:
  1375                           
  1376                           ;ECU/LCD/ecu_lcd.c: 409:     return state;
  1377  001C86  5020               	movf	lcd_8bit_set_position@state^0,w,c
  1378  001C88  0012               	return		;funcret
  1379  001C8A                     __end_of_lcd_8bit_set_position:
  1380                           	callstack 0
  1381                           
  1382 ;; *************** function _lcd_8bit_send_string_data *****************
  1383 ;; Defined at:
  1384 ;;		line 336 in file "ECU/LCD/ecu_lcd.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;  lcd_8bit        2   25[COMRAM] PTR const struct .
  1387 ;;		 -> lcd_8bit(10), 
  1388 ;;  str             2   27[COMRAM] PTR const unsigned char 
  1389 ;;		 -> lcd_8bit_send_number_at_position@str(12), lcd_8bit_send_number_data@str(12), STR_3(11), STR_1(12), 
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;  state           1   29[COMRAM] unsigned char 
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  1    wreg      unsigned char 
  1394 ;; Registers used:
  1395 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1401 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1405 ;;Total ram usage:        5 bytes
  1406 ;; Hardware stack levels used: 1
  1407 ;; Hardware stack levels required when called: 3
  1408 ;; This function calls:
  1409 ;;		_lcd_8bit_send_char_data
  1410 ;; This function is called by:
  1411 ;;		_lcd_8bit_send_string_at_position
  1412 ;;		_lcd_8bit_send_number_data
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           	psect	text4
  1417  0021AC                     __ptext4:
  1418                           	callstack 0
  1419  0021AC                     _lcd_8bit_send_string_data:
  1420                           	callstack 26
  1421  0021AC                     
  1422                           ;ECU/LCD/ecu_lcd.c: 336: Std_ReturnType lcd_8bit_send_string_data(const lcd_8bit_t* lcd_
      +                          8bit, const char* str);ECU/LCD/ecu_lcd.c: 337: {;ECU/LCD/ecu_lcd.c: 338:     Std_ReturnT
      +                          ype state = (Std_ReturnType)1;
  1423  0021AC  0E01               	movlw	1
  1424  0021AE  6E1E               	movwf	lcd_8bit_send_string_data@state^0,c
  1425  0021B0                     
  1426                           ;ECU/LCD/ecu_lcd.c: 339:     if(lcd_8bit == ((void*)0) || str == ((void*)0))
  1427  0021B0  501A               	movf	lcd_8bit_send_string_data@lcd_8bit^0,w,c
  1428  0021B2  101B               	iorwf	(lcd_8bit_send_string_data@lcd_8bit+1)^0,w,c
  1429  0021B4  B4D8               	btfsc	status,2,c
  1430  0021B6  EFDF  F010         	goto	u1811
  1431  0021BA  EFE1  F010         	goto	u1810
  1432  0021BE                     u1811:
  1433  0021BE  EFEA  F010         	goto	l3162
  1434  0021C2                     u1810:
  1435  0021C2  501C               	movf	lcd_8bit_send_string_data@str^0,w,c
  1436  0021C4  101D               	iorwf	(lcd_8bit_send_string_data@str+1)^0,w,c
  1437  0021C6  A4D8               	btfss	status,2,c
  1438  0021C8  EFE8  F010         	goto	u1821
  1439  0021CC  EFEA  F010         	goto	u1820
  1440  0021D0                     u1821:
  1441  0021D0  EF09  F011         	goto	l3168
  1442  0021D4                     u1820:
  1443  0021D4                     l3162:
  1444                           
  1445                           ;ECU/LCD/ecu_lcd.c: 340:     {;ECU/LCD/ecu_lcd.c: 341:         state = (Std_ReturnType)0
      +                          ;
  1446  0021D4  0E00               	movlw	0
  1447  0021D6  6E1E               	movwf	lcd_8bit_send_string_data@state^0,c
  1448                           
  1449                           ;ECU/LCD/ecu_lcd.c: 342:     }
  1450  0021D8  EF22  F011         	goto	l3170
  1451  0021DC                     l3164:
  1452                           
  1453                           ;ECU/LCD/ecu_lcd.c: 346:         {;ECU/LCD/ecu_lcd.c: 347:             state &= lcd_8bit
      +                          _send_char_data(lcd_8bit, *str);
  1454  0021DC  C01A  F014         	movff	lcd_8bit_send_string_data@lcd_8bit,lcd_8bit_send_char_data@lcd_8bit
  1455  0021E0  C01B  F015         	movff	lcd_8bit_send_string_data@lcd_8bit+1,lcd_8bit_send_char_data@lcd_8bit+1
  1456  0021E4  C01C  FFF6         	movff	lcd_8bit_send_string_data@str,tblptrl
  1457  0021E8  C01D  FFF7         	movff	lcd_8bit_send_string_data@str+1,tblptrh
  1458  0021EC  0E00               	movlw	low (__smallconst shr (0+16))
  1459  0021EE  6EF8               	movwf	tblptru,c
  1460  0021F0  0E0F               	movlw	(high __ramtop+-1)
  1461  0021F2  64F7               	cpfsgt	tblptrh,c
  1462  0021F4  D003               	bra	u1837
  1463  0021F6  0008               	tblrd		*
  1464  0021F8  50F5               	movf	tablat,w,c
  1465  0021FA  D005               	bra	u1830
  1466  0021FC                     u1837:
  1467  0021FC  CFF6 FFE9          	movff	tblptrl,fsr0l
  1468  002200  CFF7 FFEA          	movff	tblptrh,fsr0h
  1469  002204  50EF               	movf	indf0,w,c
  1470  002206                     u1830:
  1471  002206  6E16               	movwf	lcd_8bit_send_char_data@ch^0,c
  1472  002208  EC72  F011         	call	_lcd_8bit_send_char_data	;wreg free
  1473  00220C  161E               	andwf	lcd_8bit_send_string_data@state^0,f,c
  1474  00220E                     
  1475                           ;ECU/LCD/ecu_lcd.c: 348:             str++;
  1476  00220E  4A1C               	infsnz	lcd_8bit_send_string_data@str^0,f,c
  1477  002210  2A1D               	incf	(lcd_8bit_send_string_data@str+1)^0,f,c
  1478  002212                     l3168:
  1479                           
  1480                           ;ECU/LCD/ecu_lcd.c: 345:         while(*str != '\0')
  1481  002212  C01C  FFF6         	movff	lcd_8bit_send_string_data@str,tblptrl
  1482  002216  C01D  FFF7         	movff	lcd_8bit_send_string_data@str+1,tblptrh
  1483  00221A  0E00               	movlw	low (__smallconst shr (0+16))
  1484  00221C  6EF8               	movwf	tblptru,c
  1485  00221E  0E0F               	movlw	(high __ramtop+-1)
  1486  002220  64F7               	cpfsgt	tblptrh,c
  1487  002222  D003               	bra	u1847
  1488  002224  0008               	tblrd		*
  1489  002226  50F5               	movf	tablat,w,c
  1490  002228  D005               	bra	u1840
  1491  00222A                     u1847:
  1492  00222A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1493  00222E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1494  002232  50EF               	movf	indf0,w,c
  1495  002234                     u1840:
  1496  002234  0900               	iorlw	0
  1497  002236  A4D8               	btfss	status,2,c
  1498  002238  EF20  F011         	goto	u1851
  1499  00223C  EF22  F011         	goto	u1850
  1500  002240                     u1851:
  1501  002240  EFEE  F010         	goto	l3164
  1502  002244                     u1850:
  1503  002244                     l3170:
  1504                           
  1505                           ;ECU/LCD/ecu_lcd.c: 351:     return state;
  1506  002244  501E               	movf	lcd_8bit_send_string_data@state^0,w,c
  1507  002246  0012               	return		;funcret
  1508  002248                     __end_of_lcd_8bit_send_string_data:
  1509                           	callstack 0
  1510                           
  1511 ;; *************** function _lcd_8bit_send_char_data *****************
  1512 ;; Defined at:
  1513 ;;		line 303 in file "ECU/LCD/ecu_lcd.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  lcd_8bit        2   19[COMRAM] PTR const struct .
  1516 ;;		 -> lcd_8bit(10), 
  1517 ;;  ch              1   21[COMRAM] const unsigned char 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;  rs_pin          1   24[COMRAM] struct .
  1520 ;;  state           1   23[COMRAM] unsigned char 
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  1    wreg      unsigned char 
  1523 ;; Registers used:
  1524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1530 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1531 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1532 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1534 ;;Total ram usage:        6 bytes
  1535 ;; Hardware stack levels used: 1
  1536 ;; Hardware stack levels required when called: 2
  1537 ;; This function calls:
  1538 ;;		_gpio_pin_write_logic
  1539 ;;		_lcd_8bit_send_enable_signal
  1540 ;;		_lcd_send_8bits
  1541 ;; This function is called by:
  1542 ;;		_lcd_8bit_send_string_data
  1543 ;;		_lcd_8bit_send_char_at_position
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text5
  1548  0022E4                     __ptext5:
  1549                           	callstack 0
  1550  0022E4                     _lcd_8bit_send_char_data:
  1551                           	callstack 26
  1552  0022E4                     
  1553                           ;ECU/LCD/ecu_lcd.c: 303: Std_ReturnType lcd_8bit_send_char_data(const lcd_8bit_t* lcd_8b
      +                          it, const uint8 ch);ECU/LCD/ecu_lcd.c: 304: {;ECU/LCD/ecu_lcd.c: 305:     Std_ReturnType
      +                           state = (Std_ReturnType)1;
  1554  0022E4  0E01               	movlw	1
  1555  0022E6  6E18               	movwf	lcd_8bit_send_char_data@state^0,c
  1556  0022E8                     
  1557                           ;ECU/LCD/ecu_lcd.c: 306:     if(lcd_8bit == ((void*)0))
  1558  0022E8  5014               	movf	lcd_8bit_send_char_data@lcd_8bit^0,w,c
  1559  0022EA  1015               	iorwf	(lcd_8bit_send_char_data@lcd_8bit+1)^0,w,c
  1560  0022EC  A4D8               	btfss	status,2,c
  1561  0022EE  EF7B  F011         	goto	u1591
  1562  0022F2  EF7D  F011         	goto	u1590
  1563  0022F6                     u1591:
  1564  0022F6  EF81  F011         	goto	l551
  1565  0022FA                     u1590:
  1566  0022FA                     
  1567                           ;ECU/LCD/ecu_lcd.c: 307:     {;ECU/LCD/ecu_lcd.c: 308:         state = (Std_ReturnType)0
      +                          ;
  1568  0022FA  0E00               	movlw	0
  1569  0022FC  6E18               	movwf	lcd_8bit_send_char_data@state^0,c
  1570                           
  1571                           ;ECU/LCD/ecu_lcd.c: 309:     }
  1572  0022FE  EFBB  F011         	goto	l3012
  1573  002302                     l551:
  1574                           
  1575                           ;ECU/LCD/ecu_lcd.c: 311:     {;ECU/LCD/ecu_lcd.c: 312:         pin_config_t rs_pin={.por
      +                          t=lcd_8bit->lcd_rs_pin.port,.pin=lcd_8bit->lcd_rs_pin.pin,.direction=GPIO_OUTPUT,.logic=
      +                          GPIO_LOW};
  1576  002302  C04F  F019         	movff	lcd_8bit_send_char_data@F3054,lcd_8bit_send_char_data@rs_pin
  1577  002306  C014  FFD9         	movff	lcd_8bit_send_char_data@lcd_8bit,fsr2l
  1578  00230A  C015  FFDA         	movff	lcd_8bit_send_char_data@lcd_8bit+1,fsr2h
  1579  00230E  50DF               	movf	223,w,c
  1580  002310  0B07               	andlw	7
  1581  002312  6E17               	movwf	??_lcd_8bit_send_char_data^0,c
  1582  002314  5019               	movf	lcd_8bit_send_char_data@rs_pin^0,w,c
  1583  002316  1817               	xorwf	??_lcd_8bit_send_char_data^0,w,c
  1584  002318  0BF8               	andlw	-8
  1585  00231A  1817               	xorwf	??_lcd_8bit_send_char_data^0,w,c
  1586  00231C  6E19               	movwf	lcd_8bit_send_char_data@rs_pin^0,c
  1587  00231E  C014  FFD9         	movff	lcd_8bit_send_char_data@lcd_8bit,fsr2l
  1588  002322  C015  FFDA         	movff	lcd_8bit_send_char_data@lcd_8bit+1,fsr2h
  1589  002326  30DF               	rrcf	223,w,c
  1590  002328  32E8               	rrcf	wreg,f,c
  1591  00232A  32E8               	rrcf	wreg,f,c
  1592  00232C  0B07               	andlw	7
  1593  00232E  6E17               	movwf	??_lcd_8bit_send_char_data^0,c
  1594  002330  4617               	rlncf	??_lcd_8bit_send_char_data^0,f,c
  1595  002332  4617               	rlncf	??_lcd_8bit_send_char_data^0,f,c
  1596  002334  4617               	rlncf	??_lcd_8bit_send_char_data^0,f,c
  1597  002336  5019               	movf	lcd_8bit_send_char_data@rs_pin^0,w,c
  1598  002338  1817               	xorwf	??_lcd_8bit_send_char_data^0,w,c
  1599  00233A  0BC7               	andlw	-57
  1600  00233C  1817               	xorwf	??_lcd_8bit_send_char_data^0,w,c
  1601  00233E  6E19               	movwf	lcd_8bit_send_char_data@rs_pin^0,c
  1602  002340  9C19               	bcf	lcd_8bit_send_char_data@rs_pin^0,6,c
  1603  002342  9E19               	bcf	lcd_8bit_send_char_data@rs_pin^0,7,c
  1604  002344                     
  1605                           ;ECU/LCD/ecu_lcd.c: 313:         state &= gpio_pin_write_logic(&rs_pin,GPIO_HIGH);
  1606  002344  0E19               	movlw	low lcd_8bit_send_char_data@rs_pin
  1607  002346  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1608  002348  0E00               	movlw	high lcd_8bit_send_char_data@rs_pin
  1609  00234A  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1610  00234C  0E01               	movlw	1
  1611  00234E  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  1612  002350  ECD9  F00C         	call	_gpio_pin_write_logic	;wreg free
  1613  002354  1618               	andwf	lcd_8bit_send_char_data@state^0,f,c
  1614  002356                     
  1615                           ;ECU/LCD/ecu_lcd.c: 315:         state &= lcd_send_8bits(lcd_8bit,ch);
  1616  002356  C014  F00B         	movff	lcd_8bit_send_char_data@lcd_8bit,lcd_send_8bits@lcd_8bit
  1617  00235A  C015  F00C         	movff	lcd_8bit_send_char_data@lcd_8bit+1,lcd_send_8bits@lcd_8bit+1
  1618  00235E  C016  F00D         	movff	lcd_8bit_send_char_data@ch,lcd_send_8bits@data_or_command
  1619  002362  ECB6  F00E         	call	_lcd_send_8bits	;wreg free
  1620  002366  1618               	andwf	lcd_8bit_send_char_data@state^0,f,c
  1621  002368                     
  1622                           ;ECU/LCD/ecu_lcd.c: 316:         state &= lcd_8bit_send_enable_signal(lcd_8bit);
  1623  002368  C014  F00B         	movff	lcd_8bit_send_char_data@lcd_8bit,lcd_8bit_send_enable_signal@lcd_8bit
  1624  00236C  C015  F00C         	movff	lcd_8bit_send_char_data@lcd_8bit+1,lcd_8bit_send_enable_signal@lcd_8bit+1
  1625  002370  EC30  F010         	call	_lcd_8bit_send_enable_signal	;wreg free
  1626  002374  1618               	andwf	lcd_8bit_send_char_data@state^0,f,c
  1627  002376                     l3012:
  1628                           
  1629                           ;ECU/LCD/ecu_lcd.c: 318:     return state;
  1630  002376  5018               	movf	lcd_8bit_send_char_data@state^0,w,c
  1631  002378  0012               	return		;funcret
  1632  00237A                     __end_of_lcd_8bit_send_char_data:
  1633                           	callstack 0
  1634                           
  1635 ;; *************** function _lcd_4bit_send_number_at_position *****************
  1636 ;; Defined at:
  1637 ;;		line 224 in file "ECU/LCD/ecu_lcd.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  lcd_4bit        2   39[COMRAM] PTR const struct .
  1640 ;;		 -> lcd_4bit(6), 
  1641 ;;  row             1   41[COMRAM] const unsigned char 
  1642 ;;  col             1   42[COMRAM] const unsigned char 
  1643 ;;  value           4   43[COMRAM] long 
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  str            12   47[COMRAM] unsigned char [12]
  1646 ;;  state           1   59[COMRAM] unsigned char 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      unsigned char 
  1649 ;; Registers used:
  1650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1656 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1657 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;Total ram usage:       21 bytes
  1661 ;; Hardware stack levels used: 1
  1662 ;; Hardware stack levels required when called: 5
  1663 ;; This function calls:
  1664 ;;		_lcd_4bit_send_string_at_position
  1665 ;;		_lcd_convert_number_to_string
  1666 ;; This function is called by:
  1667 ;;		_main
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           	psect	text6
  1672  002528                     __ptext6:
  1673                           	callstack 0
  1674  002528                     _lcd_4bit_send_number_at_position:
  1675                           	callstack 25
  1676  002528                     
  1677                           ;ECU/LCD/ecu_lcd.c: 224: Std_ReturnType lcd_4bit_send_number_at_position(const lcd_4bit_
      +                          t* lcd_4bit, const uint8 row, const uint8 col, sint32 value);ECU/LCD/ecu_lcd.c: 225: {;E
      +                          CU/LCD/ecu_lcd.c: 226:     Std_ReturnType state = (Std_ReturnType)1;
  1678  002528  0E01               	movlw	1
  1679  00252A  6E3C               	movwf	lcd_4bit_send_number_at_position@state^0,c
  1680  00252C                     
  1681                           ;ECU/LCD/ecu_lcd.c: 227:     if(lcd_4bit == ((void*)0) || row > 4 || col > 80)
  1682  00252C  5028               	movf	lcd_4bit_send_number_at_position@lcd_4bit^0,w,c
  1683  00252E  1029               	iorwf	(lcd_4bit_send_number_at_position@lcd_4bit+1)^0,w,c
  1684  002530  B4D8               	btfsc	status,2,c
  1685  002532  EF9D  F012         	goto	u2201
  1686  002536  EF9F  F012         	goto	u2200
  1687  00253A                     u2201:
  1688  00253A  EFAF  F012         	goto	l3524
  1689  00253E                     u2200:
  1690  00253E  0E05               	movlw	5
  1691  002540  602A               	cpfslt	lcd_4bit_send_number_at_position@row^0,c
  1692  002542  EFA5  F012         	goto	u2211
  1693  002546  EFA7  F012         	goto	u2210
  1694  00254A                     u2211:
  1695  00254A  EFAF  F012         	goto	l3524
  1696  00254E                     u2210:
  1697  00254E  0E50               	movlw	80
  1698  002550  642B               	cpfsgt	lcd_4bit_send_number_at_position@col^0,c
  1699  002552  EFAD  F012         	goto	u2221
  1700  002556  EFAF  F012         	goto	u2220
  1701  00255A                     u2221:
  1702  00255A  EFB1  F012         	goto	l3526
  1703  00255E                     u2220:
  1704  00255E                     l3524:
  1705                           
  1706                           ;ECU/LCD/ecu_lcd.c: 230:     }
  1707  00255E  EFD5  F012         	goto	l528
  1708  002562                     l3526:
  1709                           
  1710                           ;ECU/LCD/ecu_lcd.c: 232:     {;ECU/LCD/ecu_lcd.c: 233:          uint8 str[12] = {0};
  1711  002562  EE20  F030         	lfsr	2,lcd_4bit_send_number_at_position@str
  1712  002566  0E0B               	movlw	11
  1713  002568                     u2231:
  1714  002568  6ADE               	clrf	postinc2,c
  1715  00256A  06E8               	decf	wreg,f,c
  1716  00256C  E2FD               	bc	u2231
  1717  00256E                     
  1718                           ;ECU/LCD/ecu_lcd.c: 234:          state &= lcd_convert_number_to_string(value, str);
  1719  00256E  C02C  F00F         	movff	lcd_4bit_send_number_at_position@value,lcd_convert_number_to_string@value
  1720  002572  C02D  F010         	movff	lcd_4bit_send_number_at_position@value+1,lcd_convert_number_to_string@value+1
  1721  002576  C02E  F011         	movff	lcd_4bit_send_number_at_position@value+2,lcd_convert_number_to_string@value+2
  1722  00257A  C02F  F012         	movff	lcd_4bit_send_number_at_position@value+3,lcd_convert_number_to_string@value+3
  1723  00257E  0E30               	movlw	low lcd_4bit_send_number_at_position@str
  1724  002580  6E13               	movwf	lcd_convert_number_to_string@str^0,c
  1725  002582  0E00               	movlw	high lcd_4bit_send_number_at_position@str
  1726  002584  6E14               	movwf	(lcd_convert_number_to_string@str+1)^0,c
  1727  002586  EC20  F00B         	call	_lcd_convert_number_to_string	;wreg free
  1728  00258A  163C               	andwf	lcd_4bit_send_number_at_position@state^0,f,c
  1729  00258C                     
  1730                           ;ECU/LCD/ecu_lcd.c: 235:          state &= lcd_4bit_send_string_at_position(lcd_4bit, ro
      +                          w, col, str);
  1731  00258C  C028  F021         	movff	lcd_4bit_send_number_at_position@lcd_4bit,lcd_4bit_send_string_at_position@lcd_4b
      +                          it
  1732  002590  C029  F022         	movff	lcd_4bit_send_number_at_position@lcd_4bit+1,lcd_4bit_send_string_at_position@lcd_
      +                          4bit+1
  1733  002594  C02A  F023         	movff	lcd_4bit_send_number_at_position@row,lcd_4bit_send_string_at_position@row
  1734  002598  C02B  F024         	movff	lcd_4bit_send_number_at_position@col,lcd_4bit_send_string_at_position@col
  1735  00259C  0E30               	movlw	low lcd_4bit_send_number_at_position@str
  1736  00259E  6E25               	movwf	lcd_4bit_send_string_at_position@str^0,c
  1737  0025A0  0E00               	movlw	high lcd_4bit_send_number_at_position@str
  1738  0025A2  6E26               	movwf	(lcd_4bit_send_string_at_position@str+1)^0,c
  1739  0025A4  EC16  F013         	call	_lcd_4bit_send_string_at_position	;wreg free
  1740  0025A8  163C               	andwf	lcd_4bit_send_number_at_position@state^0,f,c
  1741  0025AA                     l528:
  1742  0025AA  0012               	return		;funcret
  1743  0025AC                     __end_of_lcd_4bit_send_number_at_position:
  1744                           	callstack 0
  1745                           
  1746 ;; *************** function _lcd_convert_number_to_string *****************
  1747 ;; Defined at:
  1748 ;;		line 499 in file "ECU/LCD/ecu_lcd.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;  value           4   14[COMRAM] long 
  1751 ;;  str             2   18[COMRAM] PTR unsigned char 
  1752 ;;		 -> lcd_8bit_send_number_at_position@str(12), lcd_8bit_send_number_data@str(12), lcd_4bit_send_number_at_position@st
      +r(12), lcd_4bit_send_number_data@str(12), 
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;  local_index     1   22[COMRAM] unsigned char 
  1755 ;;  is_negative     1   21[COMRAM] unsigned char 
  1756 ;;  state           1   20[COMRAM] unsigned char 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      unsigned char 
  1759 ;; Registers used:
  1760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1766 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1767 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1769 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;Total ram usage:        9 bytes
  1771 ;; Hardware stack levels used: 1
  1772 ;; Hardware stack levels required when called: 1
  1773 ;; This function calls:
  1774 ;;		___aldiv
  1775 ;;		___almod
  1776 ;;		_reverse_string
  1777 ;; This function is called by:
  1778 ;;		_lcd_4bit_send_number_at_position
  1779 ;;		_lcd_8bit_send_number_at_position
  1780 ;;		_lcd_4bit_send_number_data
  1781 ;;		_lcd_8bit_send_number_data
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text7
  1786  001640                     __ptext7:
  1787                           	callstack 0
  1788  001640                     _lcd_convert_number_to_string:
  1789                           	callstack 28
  1790  001640                     
  1791                           ;ECU/LCD/ecu_lcd.c: 499: static Std_ReturnType lcd_convert_number_to_string(sint32 value
      +                          ,uint8 *str);ECU/LCD/ecu_lcd.c: 500: {;ECU/LCD/ecu_lcd.c: 501:     Std_ReturnType state 
      +                          = (Std_ReturnType)1;
  1792  001640  0E01               	movlw	1
  1793  001642  6E15               	movwf	lcd_convert_number_to_string@state^0,c
  1794  001644                     
  1795                           ;ECU/LCD/ecu_lcd.c: 502:     if (str == ((void*)0)) {
  1796  001644  5013               	movf	lcd_convert_number_to_string@str^0,w,c
  1797  001646  1014               	iorwf	(lcd_convert_number_to_string@str+1)^0,w,c
  1798  001648  A4D8               	btfss	status,2,c
  1799  00164A  EF29  F00B         	goto	u2111
  1800  00164E  EF2B  F00B         	goto	u2110
  1801  001652                     u2111:
  1802  001652  EF2F  F00B         	goto	l3452
  1803  001656                     u2110:
  1804  001656                     
  1805                           ;ECU/LCD/ecu_lcd.c: 503:         state = (Std_ReturnType)0;
  1806  001656  0E00               	movlw	0
  1807  001658  6E15               	movwf	lcd_convert_number_to_string@state^0,c
  1808                           
  1809                           ;ECU/LCD/ecu_lcd.c: 504:     } else {
  1810  00165A  EFCA  F00B         	goto	l3486
  1811  00165E                     l3452:
  1812                           
  1813                           ;ECU/LCD/ecu_lcd.c: 505:         uint8 local_index = 0;
  1814  00165E  0E00               	movlw	0
  1815  001660  6E17               	movwf	lcd_convert_number_to_string@local_index^0,c
  1816                           
  1817                           ;ECU/LCD/ecu_lcd.c: 506:         uint8 is_negative = 0;
  1818  001662  0E00               	movlw	0
  1819  001664  6E16               	movwf	lcd_convert_number_to_string@is_negative^0,c
  1820  001666                     
  1821                           ;ECU/LCD/ecu_lcd.c: 507:         if (value < 0) {
  1822  001666  BE12               	btfsc	(lcd_convert_number_to_string@value+3)^0,7,c
  1823  001668  EF3A  F00B         	goto	u2120
  1824  00166C  EF38  F00B         	goto	u2121
  1825  001670                     u2121:
  1826  001670  EF4B  F00B         	goto	l3464
  1827  001674                     u2120:
  1828  001674                     
  1829                           ;ECU/LCD/ecu_lcd.c: 508:             is_negative = 1;
  1830  001674  0E01               	movlw	1
  1831  001676  6E16               	movwf	lcd_convert_number_to_string@is_negative^0,c
  1832  001678                     
  1833                           ;ECU/LCD/ecu_lcd.c: 509:             value = -value;
  1834  001678  1E12               	comf	(lcd_convert_number_to_string@value+3)^0,f,c
  1835  00167A  1E11               	comf	(lcd_convert_number_to_string@value+2)^0,f,c
  1836  00167C  1E10               	comf	(lcd_convert_number_to_string@value+1)^0,f,c
  1837  00167E  6C0F               	negf	lcd_convert_number_to_string@value^0,c
  1838  001680  0E00               	movlw	0
  1839  001682  2210               	addwfc	(lcd_convert_number_to_string@value+1)^0,f,c
  1840  001684  2211               	addwfc	(lcd_convert_number_to_string@value+2)^0,f,c
  1841  001686  2212               	addwfc	(lcd_convert_number_to_string@value+3)^0,f,c
  1842  001688                     
  1843                           ;ECU/LCD/ecu_lcd.c: 510:             str[local_index++] = '-';
  1844  001688  C013  FFD9         	movff	lcd_convert_number_to_string@str,fsr2l
  1845  00168C  C014  FFDA         	movff	lcd_convert_number_to_string@str+1,fsr2h
  1846  001690  0E2D               	movlw	45
  1847  001692  6EDF               	movwf	indf2,c
  1848  001694  2A17               	incf	lcd_convert_number_to_string@local_index^0,f,c
  1849  001696                     l3464:
  1850                           
  1851                           ;ECU/LCD/ecu_lcd.c: 513:         if (value == 0) {
  1852  001696  500F               	movf	lcd_convert_number_to_string@value^0,w,c
  1853  001698  1010               	iorwf	(lcd_convert_number_to_string@value+1)^0,w,c
  1854  00169A  1011               	iorwf	(lcd_convert_number_to_string@value+2)^0,w,c
  1855  00169C  1012               	iorwf	(lcd_convert_number_to_string@value+3)^0,w,c
  1856  00169E  A4D8               	btfss	status,2,c
  1857  0016A0  EF54  F00B         	goto	u2131
  1858  0016A4  EF56  F00B         	goto	u2130
  1859  0016A8                     u2131:
  1860  0016A8  EF97  F00B         	goto	l3476
  1861  0016AC                     u2130:
  1862  0016AC                     
  1863                           ;ECU/LCD/ecu_lcd.c: 514:             str[local_index++] = '0';
  1864  0016AC  5017               	movf	lcd_convert_number_to_string@local_index^0,w,c
  1865  0016AE  2413               	addwf	lcd_convert_number_to_string@str^0,w,c
  1866  0016B0  6ED9               	movwf	fsr2l,c
  1867  0016B2  0E00               	movlw	0
  1868  0016B4  2014               	addwfc	(lcd_convert_number_to_string@str+1)^0,w,c
  1869  0016B6  6EDA               	movwf	fsr2h,c
  1870  0016B8  0E30               	movlw	48
  1871  0016BA  6EDF               	movwf	indf2,c
  1872  0016BC  2A17               	incf	lcd_convert_number_to_string@local_index^0,f,c
  1873                           
  1874                           ;ECU/LCD/ecu_lcd.c: 515:         } else {
  1875  0016BE  EFA6  F00B         	goto	l3478
  1876  0016C2                     l3470:
  1877                           
  1878                           ;ECU/LCD/ecu_lcd.c: 517:                 str[local_index++] = (value % 10) + '0';
  1879  0016C2  5017               	movf	lcd_convert_number_to_string@local_index^0,w,c
  1880  0016C4  2413               	addwf	lcd_convert_number_to_string@str^0,w,c
  1881  0016C6  6ED9               	movwf	fsr2l,c
  1882  0016C8  0E00               	movlw	0
  1883  0016CA  2014               	addwfc	(lcd_convert_number_to_string@str+1)^0,w,c
  1884  0016CC  6EDA               	movwf	fsr2h,c
  1885  0016CE  C00F  F001         	movff	lcd_convert_number_to_string@value,___almod@dividend
  1886  0016D2  C010  F002         	movff	lcd_convert_number_to_string@value+1,___almod@dividend+1
  1887  0016D6  C011  F003         	movff	lcd_convert_number_to_string@value+2,___almod@dividend+2
  1888  0016DA  C012  F004         	movff	lcd_convert_number_to_string@value+3,___almod@dividend+3
  1889  0016DE  0E0A               	movlw	10
  1890  0016E0  6E05               	movwf	___almod@divisor^0,c
  1891  0016E2  0E00               	movlw	0
  1892  0016E4  6E06               	movwf	(___almod@divisor+1)^0,c
  1893  0016E6  0E00               	movlw	0
  1894  0016E8  6E07               	movwf	(___almod@divisor+2)^0,c
  1895  0016EA  0E00               	movlw	0
  1896  0016EC  6E08               	movwf	(___almod@divisor+3)^0,c
  1897  0016EE  EC5E  F00D         	call	___almod	;wreg free
  1898  0016F2  5001               	movf	?___almod^0,w,c
  1899  0016F4  0F30               	addlw	48
  1900  0016F6  6EDF               	movwf	indf2,c
  1901  0016F8  2A17               	incf	lcd_convert_number_to_string@local_index^0,f,c
  1902  0016FA                     
  1903                           ;ECU/LCD/ecu_lcd.c: 518:                 value /= 10;
  1904  0016FA  C00F  F001         	movff	lcd_convert_number_to_string@value,___aldiv@dividend
  1905  0016FE  C010  F002         	movff	lcd_convert_number_to_string@value+1,___aldiv@dividend+1
  1906  001702  C011  F003         	movff	lcd_convert_number_to_string@value+2,___aldiv@dividend+2
  1907  001706  C012  F004         	movff	lcd_convert_number_to_string@value+3,___aldiv@dividend+3
  1908  00170A  0E0A               	movlw	10
  1909  00170C  6E05               	movwf	___aldiv@divisor^0,c
  1910  00170E  0E00               	movlw	0
  1911  001710  6E06               	movwf	(___aldiv@divisor+1)^0,c
  1912  001712  0E00               	movlw	0
  1913  001714  6E07               	movwf	(___aldiv@divisor+2)^0,c
  1914  001716  0E00               	movlw	0
  1915  001718  6E08               	movwf	(___aldiv@divisor+3)^0,c
  1916  00171A  EC53  F00C         	call	___aldiv	;wreg free
  1917  00171E  C001  F00F         	movff	?___aldiv,lcd_convert_number_to_string@value
  1918  001722  C002  F010         	movff	?___aldiv+1,lcd_convert_number_to_string@value+1
  1919  001726  C003  F011         	movff	?___aldiv+2,lcd_convert_number_to_string@value+2
  1920  00172A  C004  F012         	movff	?___aldiv+3,lcd_convert_number_to_string@value+3
  1921  00172E                     l3476:
  1922                           
  1923                           ;ECU/LCD/ecu_lcd.c: 516:             while (value > 0) {
  1924  00172E  BE12               	btfsc	(lcd_convert_number_to_string@value+3)^0,7,c
  1925  001730  EFA6  F00B         	goto	u2140
  1926  001734  5012               	movf	(lcd_convert_number_to_string@value+3)^0,w,c
  1927  001736  1011               	iorwf	(lcd_convert_number_to_string@value+2)^0,w,c
  1928  001738  1010               	iorwf	(lcd_convert_number_to_string@value+1)^0,w,c
  1929  00173A  E106               	bnz	u2141
  1930  00173C  040F               	decf	lcd_convert_number_to_string@value^0,w,c
  1931  00173E  B0D8               	btfsc	status,0,c
  1932  001740  EFA4  F00B         	goto	u2141
  1933  001744  EFA6  F00B         	goto	u2140
  1934  001748                     u2141:
  1935  001748  EF61  F00B         	goto	l3470
  1936  00174C                     u2140:
  1937  00174C                     l3478:
  1938                           
  1939                           ;ECU/LCD/ecu_lcd.c: 522:         if (is_negative) {
  1940  00174C  5016               	movf	lcd_convert_number_to_string@is_negative^0,w,c
  1941  00174E  B4D8               	btfsc	status,2,c
  1942  001750  EFAC  F00B         	goto	u2151
  1943  001754  EFAE  F00B         	goto	u2150
  1944  001758                     u2151:
  1945  001758  EFBA  F00B         	goto	l3482
  1946  00175C                     u2150:
  1947  00175C                     
  1948                           ;ECU/LCD/ecu_lcd.c: 523:             reverse_string(str + 1, local_index - 1);
  1949  00175C  0E01               	movlw	1
  1950  00175E  2413               	addwf	lcd_convert_number_to_string@str^0,w,c
  1951  001760  6E01               	movwf	reverse_string@str^0,c
  1952  001762  0E00               	movlw	0
  1953  001764  2014               	addwfc	(lcd_convert_number_to_string@str+1)^0,w,c
  1954  001766  6E02               	movwf	(reverse_string@str+1)^0,c
  1955  001768  0417               	decf	lcd_convert_number_to_string@local_index^0,w,c
  1956  00176A  6E03               	movwf	reverse_string@len^0,c
  1957  00176C  EC87  F013         	call	_reverse_string	;wreg free
  1958                           
  1959                           ;ECU/LCD/ecu_lcd.c: 524:         } else {
  1960  001770  EFC2  F00B         	goto	l3484
  1961  001774                     l3482:
  1962                           
  1963                           ;ECU/LCD/ecu_lcd.c: 525:             reverse_string(str, local_index);
  1964  001774  C013  F001         	movff	lcd_convert_number_to_string@str,reverse_string@str
  1965  001778  C014  F002         	movff	lcd_convert_number_to_string@str+1,reverse_string@str+1
  1966  00177C  C017  F003         	movff	lcd_convert_number_to_string@local_index,reverse_string@len
  1967  001780  EC87  F013         	call	_reverse_string	;wreg free
  1968  001784                     l3484:
  1969                           
  1970                           ;ECU/LCD/ecu_lcd.c: 527:         str[local_index] = '\0';
  1971  001784  5017               	movf	lcd_convert_number_to_string@local_index^0,w,c
  1972  001786  2413               	addwf	lcd_convert_number_to_string@str^0,w,c
  1973  001788  6ED9               	movwf	fsr2l,c
  1974  00178A  0E00               	movlw	0
  1975  00178C  2014               	addwfc	(lcd_convert_number_to_string@str+1)^0,w,c
  1976  00178E  6EDA               	movwf	fsr2h,c
  1977  001790  0E00               	movlw	0
  1978  001792  6EDF               	movwf	indf2,c
  1979  001794                     l3486:
  1980                           
  1981                           ;ECU/LCD/ecu_lcd.c: 529:     return state;
  1982  001794  5015               	movf	lcd_convert_number_to_string@state^0,w,c
  1983  001796  0012               	return		;funcret
  1984  001798                     __end_of_lcd_convert_number_to_string:
  1985                           	callstack 0
  1986                           
  1987 ;; *************** function _reverse_string *****************
  1988 ;; Defined at:
  1989 ;;		line 532 in file "ECU/LCD/ecu_lcd.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  str             2    0[COMRAM] PTR unsigned char 
  1992 ;;		 -> lcd_8bit_send_number_at_position@str(12), lcd_8bit_send_number_data@str(12), lcd_4bit_send_number_at_position@st
      +r(12), lcd_4bit_send_number_data@str(12), 
  1993 ;;  len             1    2[COMRAM] unsigned char 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  j               1    5[COMRAM] unsigned char 
  1996 ;;  i               1    4[COMRAM] unsigned char 
  1997 ;;  temp            1    3[COMRAM] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2007 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2008 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2010 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;Total ram usage:        6 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; This function calls:
  2014 ;;		Nothing
  2015 ;; This function is called by:
  2016 ;;		_lcd_convert_number_to_string
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text8
  2021  00270E                     __ptext8:
  2022                           	callstack 0
  2023  00270E                     _reverse_string:
  2024                           	callstack 28
  2025  00270E                     
  2026                           ;ECU/LCD/ecu_lcd.c: 532: static void reverse_string(uint8 *str, uint8 len);ECU/LCD/ecu_l
      +                          cd.c: 533: {;ECU/LCD/ecu_lcd.c: 534:     uint8 i = 0, j = len - 1, temp;
  2027  00270E  0E00               	movlw	0
  2028  002710  6E05               	movwf	reverse_string@i^0,c
  2029  002712  0403               	decf	reverse_string@len^0,w,c
  2030  002714  6E06               	movwf	reverse_string@j^0,c
  2031                           
  2032                           ;ECU/LCD/ecu_lcd.c: 535:     while (i < j) {
  2033  002716  EFAD  F013         	goto	l3188
  2034  00271A                     l3178:
  2035                           
  2036                           ;ECU/LCD/ecu_lcd.c: 536:         temp = str[i];
  2037  00271A  5005               	movf	reverse_string@i^0,w,c
  2038  00271C  2401               	addwf	reverse_string@str^0,w,c
  2039  00271E  6ED9               	movwf	fsr2l,c
  2040  002720  0E00               	movlw	0
  2041  002722  2002               	addwfc	(reverse_string@str+1)^0,w,c
  2042  002724  6EDA               	movwf	fsr2h,c
  2043  002726  50DF               	movf	indf2,w,c
  2044  002728  6E04               	movwf	reverse_string@temp^0,c
  2045  00272A                     
  2046                           ;ECU/LCD/ecu_lcd.c: 537:         str[i] = str[j];
  2047  00272A  5006               	movf	reverse_string@j^0,w,c
  2048  00272C  2401               	addwf	reverse_string@str^0,w,c
  2049  00272E  6ED9               	movwf	fsr2l,c
  2050  002730  0E00               	movlw	0
  2051  002732  2002               	addwfc	(reverse_string@str+1)^0,w,c
  2052  002734  6EDA               	movwf	fsr2h,c
  2053  002736  5005               	movf	reverse_string@i^0,w,c
  2054  002738  2401               	addwf	reverse_string@str^0,w,c
  2055  00273A  6EE1               	movwf	fsr1l,c
  2056  00273C  0E00               	movlw	0
  2057  00273E  2002               	addwfc	(reverse_string@str+1)^0,w,c
  2058  002740  6EE2               	movwf	fsr1h,c
  2059  002742  CFDF FFE7          	movff	indf2,indf1
  2060  002746                     
  2061                           ;ECU/LCD/ecu_lcd.c: 538:         str[j] = temp;
  2062  002746  5006               	movf	reverse_string@j^0,w,c
  2063  002748  2401               	addwf	reverse_string@str^0,w,c
  2064  00274A  6ED9               	movwf	fsr2l,c
  2065  00274C  0E00               	movlw	0
  2066  00274E  2002               	addwfc	(reverse_string@str+1)^0,w,c
  2067  002750  6EDA               	movwf	fsr2h,c
  2068  002752  C004  FFDF         	movff	reverse_string@temp,indf2
  2069  002756                     
  2070                           ;ECU/LCD/ecu_lcd.c: 539:         i++;
  2071  002756  2A05               	incf	reverse_string@i^0,f,c
  2072  002758                     
  2073                           ;ECU/LCD/ecu_lcd.c: 540:         j--;
  2074  002758  0606               	decf	reverse_string@j^0,f,c
  2075  00275A                     l3188:
  2076                           
  2077                           ;ECU/LCD/ecu_lcd.c: 535:     while (i < j) {
  2078  00275A  5006               	movf	reverse_string@j^0,w,c
  2079  00275C  5C05               	subwf	reverse_string@i^0,w,c
  2080  00275E  A0D8               	btfss	status,0,c
  2081  002760  EFB4  F013         	goto	u1861
  2082  002764  EFB6  F013         	goto	u1860
  2083  002768                     u1861:
  2084  002768  EF8D  F013         	goto	l3178
  2085  00276C                     u1860:
  2086  00276C  0012               	return		;funcret
  2087  00276E                     __end_of_reverse_string:
  2088                           	callstack 0
  2089                           
  2090 ;; *************** function ___almod *****************
  2091 ;; Defined at:
  2092 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\almod.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  dividend        4    0[COMRAM] long 
  2095 ;;  divisor         4    4[COMRAM] long 
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;  sign            1    9[COMRAM] unsigned char 
  2098 ;;  counter         1    8[COMRAM] unsigned char 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  4    0[COMRAM] long 
  2101 ;; Registers used:
  2102 ;;		wreg, status,2, status,0
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2108 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2111 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;Total ram usage:       10 bytes
  2113 ;; Hardware stack levels used: 1
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_lcd_convert_number_to_string
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           	psect	text9
  2122  001ABC                     __ptext9:
  2123                           	callstack 0
  2124  001ABC                     ___almod:
  2125                           	callstack 28
  2126  001ABC  0E00               	movlw	0
  2127  001ABE  6E0A               	movwf	___almod@sign^0,c
  2128  001AC0  BE04               	btfsc	(___almod@dividend+3)^0,7,c
  2129  001AC2  EF67  F00D         	goto	u1930
  2130  001AC6  EF65  F00D         	goto	u1931
  2131  001ACA                     u1931:
  2132  001ACA  EF71  F00D         	goto	l3242
  2133  001ACE                     u1930:
  2134  001ACE  1E04               	comf	(___almod@dividend+3)^0,f,c
  2135  001AD0  1E03               	comf	(___almod@dividend+2)^0,f,c
  2136  001AD2  1E02               	comf	(___almod@dividend+1)^0,f,c
  2137  001AD4  6C01               	negf	___almod@dividend^0,c
  2138  001AD6  0E00               	movlw	0
  2139  001AD8  2202               	addwfc	(___almod@dividend+1)^0,f,c
  2140  001ADA  2203               	addwfc	(___almod@dividend+2)^0,f,c
  2141  001ADC  2204               	addwfc	(___almod@dividend+3)^0,f,c
  2142  001ADE  0E01               	movlw	1
  2143  001AE0  6E0A               	movwf	___almod@sign^0,c
  2144  001AE2                     l3242:
  2145  001AE2  BE08               	btfsc	(___almod@divisor+3)^0,7,c
  2146  001AE4  EF78  F00D         	goto	u1940
  2147  001AE8  EF76  F00D         	goto	u1941
  2148  001AEC                     u1941:
  2149  001AEC  EF80  F00D         	goto	l3246
  2150  001AF0                     u1940:
  2151  001AF0  1E08               	comf	(___almod@divisor+3)^0,f,c
  2152  001AF2  1E07               	comf	(___almod@divisor+2)^0,f,c
  2153  001AF4  1E06               	comf	(___almod@divisor+1)^0,f,c
  2154  001AF6  6C05               	negf	___almod@divisor^0,c
  2155  001AF8  0E00               	movlw	0
  2156  001AFA  2206               	addwfc	(___almod@divisor+1)^0,f,c
  2157  001AFC  2207               	addwfc	(___almod@divisor+2)^0,f,c
  2158  001AFE  2208               	addwfc	(___almod@divisor+3)^0,f,c
  2159  001B00                     l3246:
  2160  001B00  5005               	movf	___almod@divisor^0,w,c
  2161  001B02  1006               	iorwf	(___almod@divisor+1)^0,w,c
  2162  001B04  1007               	iorwf	(___almod@divisor+2)^0,w,c
  2163  001B06  1008               	iorwf	(___almod@divisor+3)^0,w,c
  2164  001B08  B4D8               	btfsc	status,2,c
  2165  001B0A  EF89  F00D         	goto	u1951
  2166  001B0E  EF8B  F00D         	goto	u1950
  2167  001B12                     u1951:
  2168  001B12  EFBB  F00D         	goto	l3262
  2169  001B16                     u1950:
  2170  001B16  0E01               	movlw	1
  2171  001B18  6E09               	movwf	___almod@counter^0,c
  2172  001B1A  EF95  F00D         	goto	l3252
  2173  001B1E                     l3250:
  2174  001B1E  90D8               	bcf	status,0,c
  2175  001B20  3605               	rlcf	___almod@divisor^0,f,c
  2176  001B22  3606               	rlcf	(___almod@divisor+1)^0,f,c
  2177  001B24  3607               	rlcf	(___almod@divisor+2)^0,f,c
  2178  001B26  3608               	rlcf	(___almod@divisor+3)^0,f,c
  2179  001B28  2A09               	incf	___almod@counter^0,f,c
  2180  001B2A                     l3252:
  2181  001B2A  AE08               	btfss	(___almod@divisor+3)^0,7,c
  2182  001B2C  EF9A  F00D         	goto	u1961
  2183  001B30  EF9C  F00D         	goto	u1960
  2184  001B34                     u1961:
  2185  001B34  EF8F  F00D         	goto	l3250
  2186  001B38                     u1960:
  2187  001B38                     l3254:
  2188  001B38  5005               	movf	___almod@divisor^0,w,c
  2189  001B3A  5C01               	subwf	___almod@dividend^0,w,c
  2190  001B3C  5006               	movf	(___almod@divisor+1)^0,w,c
  2191  001B3E  5802               	subwfb	(___almod@dividend+1)^0,w,c
  2192  001B40  5007               	movf	(___almod@divisor+2)^0,w,c
  2193  001B42  5803               	subwfb	(___almod@dividend+2)^0,w,c
  2194  001B44  5008               	movf	(___almod@divisor+3)^0,w,c
  2195  001B46  5804               	subwfb	(___almod@dividend+3)^0,w,c
  2196  001B48  A0D8               	btfss	status,0,c
  2197  001B4A  EFA9  F00D         	goto	u1971
  2198  001B4E  EFAB  F00D         	goto	u1970
  2199  001B52                     u1971:
  2200  001B52  EFB3  F00D         	goto	l3258
  2201  001B56                     u1970:
  2202  001B56  5005               	movf	___almod@divisor^0,w,c
  2203  001B58  5E01               	subwf	___almod@dividend^0,f,c
  2204  001B5A  5006               	movf	(___almod@divisor+1)^0,w,c
  2205  001B5C  5A02               	subwfb	(___almod@dividend+1)^0,f,c
  2206  001B5E  5007               	movf	(___almod@divisor+2)^0,w,c
  2207  001B60  5A03               	subwfb	(___almod@dividend+2)^0,f,c
  2208  001B62  5008               	movf	(___almod@divisor+3)^0,w,c
  2209  001B64  5A04               	subwfb	(___almod@dividend+3)^0,f,c
  2210  001B66                     l3258:
  2211  001B66  90D8               	bcf	status,0,c
  2212  001B68  3208               	rrcf	(___almod@divisor+3)^0,f,c
  2213  001B6A  3207               	rrcf	(___almod@divisor+2)^0,f,c
  2214  001B6C  3206               	rrcf	(___almod@divisor+1)^0,f,c
  2215  001B6E  3205               	rrcf	___almod@divisor^0,f,c
  2216  001B70  2E09               	decfsz	___almod@counter^0,f,c
  2217  001B72  EF9C  F00D         	goto	l3254
  2218  001B76                     l3262:
  2219  001B76  500A               	movf	___almod@sign^0,w,c
  2220  001B78  B4D8               	btfsc	status,2,c
  2221  001B7A  EFC1  F00D         	goto	u1981
  2222  001B7E  EFC3  F00D         	goto	u1980
  2223  001B82                     u1981:
  2224  001B82  EFCB  F00D         	goto	l3266
  2225  001B86                     u1980:
  2226  001B86  1E04               	comf	(___almod@dividend+3)^0,f,c
  2227  001B88  1E03               	comf	(___almod@dividend+2)^0,f,c
  2228  001B8A  1E02               	comf	(___almod@dividend+1)^0,f,c
  2229  001B8C  6C01               	negf	___almod@dividend^0,c
  2230  001B8E  0E00               	movlw	0
  2231  001B90  2202               	addwfc	(___almod@dividend+1)^0,f,c
  2232  001B92  2203               	addwfc	(___almod@dividend+2)^0,f,c
  2233  001B94  2204               	addwfc	(___almod@dividend+3)^0,f,c
  2234  001B96                     l3266:
  2235  001B96  C001  F001         	movff	___almod@dividend,?___almod
  2236  001B9A  C002  F002         	movff	___almod@dividend+1,?___almod+1
  2237  001B9E  C003  F003         	movff	___almod@dividend+2,?___almod+2
  2238  001BA2  C004  F004         	movff	___almod@dividend+3,?___almod+3
  2239  001BA6  0012               	return		;funcret
  2240  001BA8                     __end_of___almod:
  2241                           	callstack 0
  2242                           
  2243 ;; *************** function ___aldiv *****************
  2244 ;; Defined at:
  2245 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aldiv.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  dividend        4    0[COMRAM] long 
  2248 ;;  divisor         4    4[COMRAM] long 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  quotient        4   10[COMRAM] long 
  2251 ;;  sign            1    9[COMRAM] unsigned char 
  2252 ;;  counter         1    8[COMRAM] unsigned char 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  4    0[COMRAM] long 
  2255 ;; Registers used:
  2256 ;;		wreg, status,2, status,0
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2262 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2263 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;Total ram usage:       14 bytes
  2267 ;; Hardware stack levels used: 1
  2268 ;; This function calls:
  2269 ;;		Nothing
  2270 ;; This function is called by:
  2271 ;;		_lcd_convert_number_to_string
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text10
  2276  0018A6                     __ptext10:
  2277                           	callstack 0
  2278  0018A6                     ___aldiv:
  2279                           	callstack 28
  2280  0018A6  0E00               	movlw	0
  2281  0018A8  6E0A               	movwf	___aldiv@sign^0,c
  2282  0018AA  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  2283  0018AC  EF5C  F00C         	goto	u1870
  2284  0018B0  EF5A  F00C         	goto	u1871
  2285  0018B4                     u1871:
  2286  0018B4  EF66  F00C         	goto	l3198
  2287  0018B8                     u1870:
  2288  0018B8  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  2289  0018BA  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  2290  0018BC  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  2291  0018BE  6C05               	negf	___aldiv@divisor^0,c
  2292  0018C0  0E00               	movlw	0
  2293  0018C2  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  2294  0018C4  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  2295  0018C6  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  2296  0018C8  0E01               	movlw	1
  2297  0018CA  6E0A               	movwf	___aldiv@sign^0,c
  2298  0018CC                     l3198:
  2299  0018CC  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  2300  0018CE  EF6D  F00C         	goto	u1880
  2301  0018D2  EF6B  F00C         	goto	u1881
  2302  0018D6                     u1881:
  2303  0018D6  EF77  F00C         	goto	l3204
  2304  0018DA                     u1880:
  2305  0018DA  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  2306  0018DC  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  2307  0018DE  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  2308  0018E0  6C01               	negf	___aldiv@dividend^0,c
  2309  0018E2  0E00               	movlw	0
  2310  0018E4  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  2311  0018E6  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  2312  0018E8  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  2313  0018EA  0E01               	movlw	1
  2314  0018EC  1A0A               	xorwf	___aldiv@sign^0,f,c
  2315  0018EE                     l3204:
  2316  0018EE  0E00               	movlw	0
  2317  0018F0  6E0B               	movwf	___aldiv@quotient^0,c
  2318  0018F2  0E00               	movlw	0
  2319  0018F4  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  2320  0018F6  0E00               	movlw	0
  2321  0018F8  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  2322  0018FA  0E00               	movlw	0
  2323  0018FC  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  2324  0018FE  5005               	movf	___aldiv@divisor^0,w,c
  2325  001900  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  2326  001902  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  2327  001904  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  2328  001906  B4D8               	btfsc	status,2,c
  2329  001908  EF88  F00C         	goto	u1891
  2330  00190C  EF8A  F00C         	goto	u1890
  2331  001910                     u1891:
  2332  001910  EFC0  F00C         	goto	l3226
  2333  001914                     u1890:
  2334  001914  0E01               	movlw	1
  2335  001916  6E09               	movwf	___aldiv@counter^0,c
  2336  001918  EF94  F00C         	goto	l3212
  2337  00191C                     l3210:
  2338  00191C  90D8               	bcf	status,0,c
  2339  00191E  3605               	rlcf	___aldiv@divisor^0,f,c
  2340  001920  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  2341  001922  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  2342  001924  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  2343  001926  2A09               	incf	___aldiv@counter^0,f,c
  2344  001928                     l3212:
  2345  001928  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  2346  00192A  EF99  F00C         	goto	u1901
  2347  00192E  EF9B  F00C         	goto	u1900
  2348  001932                     u1901:
  2349  001932  EF8E  F00C         	goto	l3210
  2350  001936                     u1900:
  2351  001936                     l3214:
  2352  001936  90D8               	bcf	status,0,c
  2353  001938  360B               	rlcf	___aldiv@quotient^0,f,c
  2354  00193A  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2355  00193C  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2356  00193E  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2357  001940  5005               	movf	___aldiv@divisor^0,w,c
  2358  001942  5C01               	subwf	___aldiv@dividend^0,w,c
  2359  001944  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2360  001946  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  2361  001948  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2362  00194A  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  2363  00194C  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2364  00194E  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  2365  001950  A0D8               	btfss	status,0,c
  2366  001952  EFAD  F00C         	goto	u1911
  2367  001956  EFAF  F00C         	goto	u1910
  2368  00195A                     u1911:
  2369  00195A  EFB8  F00C         	goto	l3222
  2370  00195E                     u1910:
  2371  00195E  5005               	movf	___aldiv@divisor^0,w,c
  2372  001960  5E01               	subwf	___aldiv@dividend^0,f,c
  2373  001962  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2374  001964  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2375  001966  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2376  001968  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2377  00196A  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2378  00196C  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2379  00196E  800B               	bsf	___aldiv@quotient^0,0,c
  2380  001970                     l3222:
  2381  001970  90D8               	bcf	status,0,c
  2382  001972  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2383  001974  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2384  001976  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2385  001978  3205               	rrcf	___aldiv@divisor^0,f,c
  2386  00197A  2E09               	decfsz	___aldiv@counter^0,f,c
  2387  00197C  EF9B  F00C         	goto	l3214
  2388  001980                     l3226:
  2389  001980  500A               	movf	___aldiv@sign^0,w,c
  2390  001982  B4D8               	btfsc	status,2,c
  2391  001984  EFC6  F00C         	goto	u1921
  2392  001988  EFC8  F00C         	goto	u1920
  2393  00198C                     u1921:
  2394  00198C  EFD0  F00C         	goto	l3230
  2395  001990                     u1920:
  2396  001990  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2397  001992  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2398  001994  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2399  001996  6C0B               	negf	___aldiv@quotient^0,c
  2400  001998  0E00               	movlw	0
  2401  00199A  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2402  00199C  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2403  00199E  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2404  0019A0                     l3230:
  2405  0019A0  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2406  0019A4  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2407  0019A8  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2408  0019AC  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2409  0019B0  0012               	return		;funcret
  2410  0019B2                     __end_of___aldiv:
  2411                           	callstack 0
  2412                           
  2413 ;; *************** function _lcd_4bit_send_string_at_position *****************
  2414 ;; Defined at:
  2415 ;;		line 150 in file "ECU/LCD/ecu_lcd.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  lcd_4bit        2   32[COMRAM] PTR const struct .
  2418 ;;		 -> lcd_4bit(6), 
  2419 ;;  row             1   34[COMRAM] const unsigned char 
  2420 ;;  col             1   35[COMRAM] const unsigned char 
  2421 ;;  str             2   36[COMRAM] PTR const unsigned char 
  2422 ;;		 -> lcd_4bit_send_number_at_position@str(12), STR_4(11), STR_2(12), 
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;  state           1   38[COMRAM] unsigned char 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      unsigned char 
  2427 ;; Registers used:
  2428 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2434 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2435 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;Total ram usage:        7 bytes
  2439 ;; Hardware stack levels used: 1
  2440 ;; Hardware stack levels required when called: 4
  2441 ;; This function calls:
  2442 ;;		_lcd_4bit_send_string_data
  2443 ;;		_lcd_4bit_set_position
  2444 ;; This function is called by:
  2445 ;;		_main
  2446 ;;		_lcd_4bit_send_number_at_position
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           	psect	text11
  2451  00262C                     __ptext11:
  2452                           	callstack 0
  2453  00262C                     _lcd_4bit_send_string_at_position:
  2454                           	callstack 26
  2455  00262C                     
  2456                           ;ECU/LCD/ecu_lcd.c: 150: Std_ReturnType lcd_4bit_send_string_at_position(const lcd_4bit_
      +                          t* lcd_4bit, const uint8 row, const uint8 col, const char* str);ECU/LCD/ecu_lcd.c: 151: 
      +                          {;ECU/LCD/ecu_lcd.c: 152:     Std_ReturnType state = (Std_ReturnType)1;
  2457  00262C  0E01               	movlw	1
  2458  00262E  6E27               	movwf	lcd_4bit_send_string_at_position@state^0,c
  2459  002630                     
  2460                           ;ECU/LCD/ecu_lcd.c: 153:     if(lcd_4bit == ((void*)0) || row > 4 || col > 80 || str == 
      +                          ((void*)0))
  2461  002630  5021               	movf	lcd_4bit_send_string_at_position@lcd_4bit^0,w,c
  2462  002632  1022               	iorwf	(lcd_4bit_send_string_at_position@lcd_4bit+1)^0,w,c
  2463  002634  B4D8               	btfsc	status,2,c
  2464  002636  EF1F  F013         	goto	u2031
  2465  00263A  EF21  F013         	goto	u2030
  2466  00263E                     u2031:
  2467  00263E  EF3A  F013         	goto	l3300
  2468  002642                     u2030:
  2469  002642  0E05               	movlw	5
  2470  002644  6023               	cpfslt	lcd_4bit_send_string_at_position@row^0,c
  2471  002646  EF27  F013         	goto	u2041
  2472  00264A  EF29  F013         	goto	u2040
  2473  00264E                     u2041:
  2474  00264E  EF3A  F013         	goto	l3300
  2475  002652                     u2040:
  2476  002652  0E51               	movlw	81
  2477  002654  6024               	cpfslt	lcd_4bit_send_string_at_position@col^0,c
  2478  002656  EF2F  F013         	goto	u2051
  2479  00265A  EF31  F013         	goto	u2050
  2480  00265E                     u2051:
  2481  00265E  EF3A  F013         	goto	l3300
  2482  002662                     u2050:
  2483  002662  5025               	movf	lcd_4bit_send_string_at_position@str^0,w,c
  2484  002664  1026               	iorwf	(lcd_4bit_send_string_at_position@str+1)^0,w,c
  2485  002666  A4D8               	btfss	status,2,c
  2486  002668  EF38  F013         	goto	u2061
  2487  00266C  EF3A  F013         	goto	u2060
  2488  002670                     u2061:
  2489  002670  EF3E  F013         	goto	l3302
  2490  002674                     u2060:
  2491  002674                     l3300:
  2492                           
  2493                           ;ECU/LCD/ecu_lcd.c: 154:     {;ECU/LCD/ecu_lcd.c: 155:         state = (Std_ReturnType)0
      +                          ;
  2494  002674  0E00               	movlw	0
  2495  002676  6E27               	movwf	lcd_4bit_send_string_at_position@state^0,c
  2496                           
  2497                           ;ECU/LCD/ecu_lcd.c: 156:     }
  2498  002678  EF54  F013         	goto	l3306
  2499  00267C                     l3302:
  2500                           
  2501                           ;ECU/LCD/ecu_lcd.c: 158:     {;ECU/LCD/ecu_lcd.c: 159:         state &= lcd_4bit_set_pos
      +                          ition(lcd_4bit, row, col);
  2502  00267C  C021  F01A         	movff	lcd_4bit_send_string_at_position@lcd_4bit,lcd_4bit_set_position@lcd_4bit
  2503  002680  C022  F01B         	movff	lcd_4bit_send_string_at_position@lcd_4bit+1,lcd_4bit_set_position@lcd_4bit+1
  2504  002684  C023  F01C         	movff	lcd_4bit_send_string_at_position@row,lcd_4bit_set_position@row
  2505  002688  C024  F01D         	movff	lcd_4bit_send_string_at_position@col,lcd_4bit_set_position@col
  2506  00268C  EC45  F00E         	call	_lcd_4bit_set_position	;wreg free
  2507  002690  1627               	andwf	lcd_4bit_send_string_at_position@state^0,f,c
  2508  002692                     
  2509                           ;ECU/LCD/ecu_lcd.c: 160:         state &= lcd_4bit_send_string_data(lcd_4bit, str);
  2510  002692  C021  F01A         	movff	lcd_4bit_send_string_at_position@lcd_4bit,lcd_4bit_send_string_data@lcd_4bit
  2511  002696  C022  F01B         	movff	lcd_4bit_send_string_at_position@lcd_4bit+1,lcd_4bit_send_string_data@lcd_4bit+1
  2512  00269A  C025  F01C         	movff	lcd_4bit_send_string_at_position@str,lcd_4bit_send_string_data@str
  2513  00269E  C026  F01D         	movff	lcd_4bit_send_string_at_position@str+1,lcd_4bit_send_string_data@str+1
  2514  0026A2  EC24  F011         	call	_lcd_4bit_send_string_data	;wreg free
  2515  0026A6  1627               	andwf	lcd_4bit_send_string_at_position@state^0,f,c
  2516  0026A8                     l3306:
  2517                           
  2518                           ;ECU/LCD/ecu_lcd.c: 162:     return state;
  2519  0026A8  5027               	movf	lcd_4bit_send_string_at_position@state^0,w,c
  2520  0026AA  0012               	return		;funcret
  2521  0026AC                     __end_of_lcd_4bit_send_string_at_position:
  2522                           	callstack 0
  2523                           
  2524 ;; *************** function _lcd_4bit_set_position *****************
  2525 ;; Defined at:
  2526 ;;		line 179 in file "ECU/LCD/ecu_lcd.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;  lcd_4bit        2   25[COMRAM] PTR const struct .
  2529 ;;		 -> lcd_4bit(6), 
  2530 ;;  row             1   27[COMRAM] unsigned char 
  2531 ;;  col             1   28[COMRAM] unsigned char 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;  state           1   31[COMRAM] unsigned char 
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  1    wreg      unsigned char 
  2536 ;; Registers used:
  2537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2543 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2545 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2546 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2547 ;;Total ram usage:        7 bytes
  2548 ;; Hardware stack levels used: 1
  2549 ;; Hardware stack levels required when called: 3
  2550 ;; This function calls:
  2551 ;;		_lcd_4bit_send_command
  2552 ;; This function is called by:
  2553 ;;		_lcd_4bit_send_string_at_position
  2554 ;;		_lcd_4bit_send_char_at_position
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text12
  2559  001C8A                     __ptext12:
  2560                           	callstack 0
  2561  001C8A                     _lcd_4bit_set_position:
  2562                           	callstack 26
  2563  001C8A                     
  2564                           ;ECU/LCD/ecu_lcd.c: 179: Std_ReturnType lcd_4bit_set_position(const lcd_4bit_t* lcd_4bit
      +                          , uint8 row, uint8 col);ECU/LCD/ecu_lcd.c: 180: {;ECU/LCD/ecu_lcd.c: 181:     Std_Return
      +                          Type state = (Std_ReturnType)1;
  2565  001C8A  0E01               	movlw	1
  2566  001C8C  6E20               	movwf	lcd_4bit_set_position@state^0,c
  2567  001C8E                     
  2568                           ;ECU/LCD/ecu_lcd.c: 182:     if(lcd_4bit == ((void*)0) || row > 4 || col > 80)
  2569  001C8E  501A               	movf	lcd_4bit_set_position@lcd_4bit^0,w,c
  2570  001C90  101B               	iorwf	(lcd_4bit_set_position@lcd_4bit+1)^0,w,c
  2571  001C92  B4D8               	btfsc	status,2,c
  2572  001C94  EF4E  F00E         	goto	u1701
  2573  001C98  EF50  F00E         	goto	u1700
  2574  001C9C                     u1701:
  2575  001C9C  EF60  F00E         	goto	l3082
  2576  001CA0                     u1700:
  2577  001CA0  0E05               	movlw	5
  2578  001CA2  601C               	cpfslt	lcd_4bit_set_position@row^0,c
  2579  001CA4  EF56  F00E         	goto	u1711
  2580  001CA8  EF58  F00E         	goto	u1710
  2581  001CAC                     u1711:
  2582  001CAC  EF60  F00E         	goto	l3082
  2583  001CB0                     u1710:
  2584  001CB0  0E50               	movlw	80
  2585  001CB2  641D               	cpfsgt	lcd_4bit_set_position@col^0,c
  2586  001CB4  EF5E  F00E         	goto	u1721
  2587  001CB8  EF60  F00E         	goto	u1720
  2588  001CBC                     u1721:
  2589  001CBC  EF64  F00E         	goto	l3084
  2590  001CC0                     u1720:
  2591  001CC0                     l3082:
  2592                           
  2593                           ;ECU/LCD/ecu_lcd.c: 183:     {;ECU/LCD/ecu_lcd.c: 184:         state = (Std_ReturnType)0
      +                          ;
  2594  001CC0  0E00               	movlw	0
  2595  001CC2  6E20               	movwf	lcd_4bit_set_position@state^0,c
  2596                           
  2597                           ;ECU/LCD/ecu_lcd.c: 185:     }
  2598  001CC4  EFB4  F00E         	goto	l3098
  2599  001CC8                     l3084:
  2600                           
  2601                           ;ECU/LCD/ecu_lcd.c: 187:     {;ECU/LCD/ecu_lcd.c: 188:         col--;
  2602  001CC8  061D               	decf	lcd_4bit_set_position@col^0,f,c
  2603                           
  2604                           ;ECU/LCD/ecu_lcd.c: 189:         switch(row)
  2605  001CCA  EF97  F00E         	goto	l3096
  2606  001CCE                     l3086:
  2607                           
  2608                           ;ECU/LCD/ecu_lcd.c: 192:                 state &= lcd_4bit_send_command(lcd_4bit, (0x80 
      +                          + col));
  2609  001CCE  C01A  F014         	movff	lcd_4bit_set_position@lcd_4bit,lcd_4bit_send_command@lcd_4bit
  2610  001CD2  C01B  F015         	movff	lcd_4bit_set_position@lcd_4bit+1,lcd_4bit_send_command@lcd_4bit+1
  2611  001CD6  501D               	movf	lcd_4bit_set_position@col^0,w,c
  2612  001CD8  0F80               	addlw	128
  2613  001CDA  6E16               	movwf	lcd_4bit_send_command@command^0,c
  2614  001CDC  ECD4  F00F         	call	_lcd_4bit_send_command	;wreg free
  2615  001CE0  1620               	andwf	lcd_4bit_set_position@state^0,f,c
  2616                           
  2617                           ;ECU/LCD/ecu_lcd.c: 193:                 break;
  2618  001CE2  EFB4  F00E         	goto	l3098
  2619  001CE6                     l3088:
  2620                           
  2621                           ;ECU/LCD/ecu_lcd.c: 195:                 state &= lcd_4bit_send_command(lcd_4bit, (0xC0 
      +                          + col));
  2622  001CE6  C01A  F014         	movff	lcd_4bit_set_position@lcd_4bit,lcd_4bit_send_command@lcd_4bit
  2623  001CEA  C01B  F015         	movff	lcd_4bit_set_position@lcd_4bit+1,lcd_4bit_send_command@lcd_4bit+1
  2624  001CEE  501D               	movf	lcd_4bit_set_position@col^0,w,c
  2625  001CF0  0FC0               	addlw	192
  2626  001CF2  6E16               	movwf	lcd_4bit_send_command@command^0,c
  2627  001CF4  ECD4  F00F         	call	_lcd_4bit_send_command	;wreg free
  2628  001CF8  1620               	andwf	lcd_4bit_set_position@state^0,f,c
  2629                           
  2630                           ;ECU/LCD/ecu_lcd.c: 196:                 break;
  2631  001CFA  EFB4  F00E         	goto	l3098
  2632  001CFE                     l3090:
  2633                           
  2634                           ;ECU/LCD/ecu_lcd.c: 198:                 state &= lcd_4bit_send_command(lcd_4bit, (0x94 
      +                          + col));
  2635  001CFE  C01A  F014         	movff	lcd_4bit_set_position@lcd_4bit,lcd_4bit_send_command@lcd_4bit
  2636  001D02  C01B  F015         	movff	lcd_4bit_set_position@lcd_4bit+1,lcd_4bit_send_command@lcd_4bit+1
  2637  001D06  501D               	movf	lcd_4bit_set_position@col^0,w,c
  2638  001D08  0F94               	addlw	148
  2639  001D0A  6E16               	movwf	lcd_4bit_send_command@command^0,c
  2640  001D0C  ECD4  F00F         	call	_lcd_4bit_send_command	;wreg free
  2641  001D10  1620               	andwf	lcd_4bit_set_position@state^0,f,c
  2642                           
  2643                           ;ECU/LCD/ecu_lcd.c: 199:                 break;
  2644  001D12  EFB4  F00E         	goto	l3098
  2645  001D16                     l3092:
  2646                           
  2647                           ;ECU/LCD/ecu_lcd.c: 201:                 state &= lcd_4bit_send_command(lcd_4bit, (0xD4 
      +                          + col));
  2648  001D16  C01A  F014         	movff	lcd_4bit_set_position@lcd_4bit,lcd_4bit_send_command@lcd_4bit
  2649  001D1A  C01B  F015         	movff	lcd_4bit_set_position@lcd_4bit+1,lcd_4bit_send_command@lcd_4bit+1
  2650  001D1E  501D               	movf	lcd_4bit_set_position@col^0,w,c
  2651  001D20  0FD4               	addlw	212
  2652  001D22  6E16               	movwf	lcd_4bit_send_command@command^0,c
  2653  001D24  ECD4  F00F         	call	_lcd_4bit_send_command	;wreg free
  2654  001D28  1620               	andwf	lcd_4bit_set_position@state^0,f,c
  2655                           
  2656                           ;ECU/LCD/ecu_lcd.c: 202:                 break;
  2657  001D2A  EFB4  F00E         	goto	l3098
  2658  001D2E                     l3096:
  2659  001D2E  501C               	movf	lcd_4bit_set_position@row^0,w,c
  2660  001D30  6E1E               	movwf	??_lcd_4bit_set_position^0,c
  2661  001D32  6A1F               	clrf	(??_lcd_4bit_set_position+1)^0,c
  2662                           
  2663                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2664                           ; Switch size 1, requested type "simple"
  2665                           ; Number of cases is 1, Range of values is 0 to 0
  2666                           ; switch strategies available:
  2667                           ; Name         Instructions Cycles
  2668                           ; simple_byte            4     3 (average)
  2669                           ;	Chosen strategy is simple_byte
  2670  001D34  501F               	movf	(??_lcd_4bit_set_position+1)^0,w,c
  2671  001D36  0A00               	xorlw	0	; case 0
  2672  001D38  B4D8               	btfsc	status,2,c
  2673  001D3A  EFA1  F00E         	goto	l4180
  2674  001D3E  EFB4  F00E         	goto	l3098
  2675  001D42                     l4180:
  2676                           
  2677                           ; Switch size 1, requested type "simple"
  2678                           ; Number of cases is 4, Range of values is 1 to 4
  2679                           ; switch strategies available:
  2680                           ; Name         Instructions Cycles
  2681                           ; simple_byte           13     7 (average)
  2682                           ;	Chosen strategy is simple_byte
  2683  001D42  501E               	movf	??_lcd_4bit_set_position^0,w,c
  2684  001D44  0A01               	xorlw	1	; case 1
  2685  001D46  B4D8               	btfsc	status,2,c
  2686  001D48  EF67  F00E         	goto	l3086
  2687  001D4C  0A03               	xorlw	3	; case 2
  2688  001D4E  B4D8               	btfsc	status,2,c
  2689  001D50  EF73  F00E         	goto	l3088
  2690  001D54  0A01               	xorlw	1	; case 3
  2691  001D56  B4D8               	btfsc	status,2,c
  2692  001D58  EF7F  F00E         	goto	l3090
  2693  001D5C  0A07               	xorlw	7	; case 4
  2694  001D5E  B4D8               	btfsc	status,2,c
  2695  001D60  EF8B  F00E         	goto	l3092
  2696  001D64  EFB4  F00E         	goto	l3098
  2697  001D68                     l3098:
  2698                           
  2699                           ;ECU/LCD/ecu_lcd.c: 205:     return state;
  2700  001D68  5020               	movf	lcd_4bit_set_position@state^0,w,c
  2701  001D6A  0012               	return		;funcret
  2702  001D6C                     __end_of_lcd_4bit_set_position:
  2703                           	callstack 0
  2704                           
  2705 ;; *************** function _lcd_4bit_send_string_data *****************
  2706 ;; Defined at:
  2707 ;;		line 132 in file "ECU/LCD/ecu_lcd.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;  lcd_4bit        2   25[COMRAM] PTR const struct .
  2710 ;;		 -> lcd_4bit(6), 
  2711 ;;  str             2   27[COMRAM] PTR const unsigned char 
  2712 ;;		 -> lcd_4bit_send_number_at_position@str(12), lcd_4bit_send_number_data@str(12), STR_4(11), STR_2(12), 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;  state           1   29[COMRAM] unsigned char 
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      unsigned char 
  2717 ;; Registers used:
  2718 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2724 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2725 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;Total ram usage:        5 bytes
  2729 ;; Hardware stack levels used: 1
  2730 ;; Hardware stack levels required when called: 3
  2731 ;; This function calls:
  2732 ;;		_lcd_4bit_send_char_data
  2733 ;; This function is called by:
  2734 ;;		_lcd_4bit_send_string_at_position
  2735 ;;		_lcd_4bit_send_number_data
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           	psect	text13
  2740  002248                     __ptext13:
  2741                           	callstack 0
  2742  002248                     _lcd_4bit_send_string_data:
  2743                           	callstack 26
  2744  002248                     
  2745                           ;ECU/LCD/ecu_lcd.c: 132: Std_ReturnType lcd_4bit_send_string_data(const lcd_4bit_t* lcd_
      +                          4bit, const char* str);ECU/LCD/ecu_lcd.c: 133: {;ECU/LCD/ecu_lcd.c: 134:     Std_ReturnT
      +                          ype state = (Std_ReturnType)1;
  2746  002248  0E01               	movlw	1
  2747  00224A  6E1E               	movwf	lcd_4bit_send_string_data@state^0,c
  2748  00224C                     
  2749                           ;ECU/LCD/ecu_lcd.c: 135:     if(lcd_4bit == ((void*)0) || str == ((void*)0))
  2750  00224C  501A               	movf	lcd_4bit_send_string_data@lcd_4bit^0,w,c
  2751  00224E  101B               	iorwf	(lcd_4bit_send_string_data@lcd_4bit+1)^0,w,c
  2752  002250  B4D8               	btfsc	status,2,c
  2753  002252  EF2D  F011         	goto	u1731
  2754  002256  EF2F  F011         	goto	u1730
  2755  00225A                     u1731:
  2756  00225A  EF38  F011         	goto	l3112
  2757  00225E                     u1730:
  2758  00225E  501C               	movf	lcd_4bit_send_string_data@str^0,w,c
  2759  002260  101D               	iorwf	(lcd_4bit_send_string_data@str+1)^0,w,c
  2760  002262  A4D8               	btfss	status,2,c
  2761  002264  EF36  F011         	goto	u1741
  2762  002268  EF38  F011         	goto	u1740
  2763  00226C                     u1741:
  2764  00226C  EF57  F011         	goto	l3118
  2765  002270                     u1740:
  2766  002270                     l3112:
  2767                           
  2768                           ;ECU/LCD/ecu_lcd.c: 136:     {;ECU/LCD/ecu_lcd.c: 137:         state = (Std_ReturnType)0
      +                          ;
  2769  002270  0E00               	movlw	0
  2770  002272  6E1E               	movwf	lcd_4bit_send_string_data@state^0,c
  2771                           
  2772                           ;ECU/LCD/ecu_lcd.c: 138:     }
  2773  002274  EF70  F011         	goto	l3120
  2774  002278                     l3114:
  2775                           
  2776                           ;ECU/LCD/ecu_lcd.c: 142:         {;ECU/LCD/ecu_lcd.c: 143:             state &= lcd_4bit
      +                          _send_char_data(lcd_4bit, *str);
  2777  002278  C01A  F014         	movff	lcd_4bit_send_string_data@lcd_4bit,lcd_4bit_send_char_data@lcd_4bit
  2778  00227C  C01B  F015         	movff	lcd_4bit_send_string_data@lcd_4bit+1,lcd_4bit_send_char_data@lcd_4bit+1
  2779  002280  C01C  FFF6         	movff	lcd_4bit_send_string_data@str,tblptrl
  2780  002284  C01D  FFF7         	movff	lcd_4bit_send_string_data@str+1,tblptrh
  2781  002288  0E00               	movlw	low (__smallconst shr (0+16))
  2782  00228A  6EF8               	movwf	tblptru,c
  2783  00228C  0E0F               	movlw	(high __ramtop+-1)
  2784  00228E  64F7               	cpfsgt	tblptrh,c
  2785  002290  D003               	bra	u1757
  2786  002292  0008               	tblrd		*
  2787  002294  50F5               	movf	tablat,w,c
  2788  002296  D005               	bra	u1750
  2789  002298                     u1757:
  2790  002298  CFF6 FFE9          	movff	tblptrl,fsr0l
  2791  00229C  CFF7 FFEA          	movff	tblptrh,fsr0h
  2792  0022A0  50EF               	movf	indf0,w,c
  2793  0022A2                     u1750:
  2794  0022A2  6E16               	movwf	lcd_4bit_send_char_data@ch^0,c
  2795  0022A4  EC78  F00F         	call	_lcd_4bit_send_char_data	;wreg free
  2796  0022A8  161E               	andwf	lcd_4bit_send_string_data@state^0,f,c
  2797  0022AA                     
  2798                           ;ECU/LCD/ecu_lcd.c: 144:             str++;
  2799  0022AA  4A1C               	infsnz	lcd_4bit_send_string_data@str^0,f,c
  2800  0022AC  2A1D               	incf	(lcd_4bit_send_string_data@str+1)^0,f,c
  2801  0022AE                     l3118:
  2802                           
  2803                           ;ECU/LCD/ecu_lcd.c: 141:         while(*str != '\0')
  2804  0022AE  C01C  FFF6         	movff	lcd_4bit_send_string_data@str,tblptrl
  2805  0022B2  C01D  FFF7         	movff	lcd_4bit_send_string_data@str+1,tblptrh
  2806  0022B6  0E00               	movlw	low (__smallconst shr (0+16))
  2807  0022B8  6EF8               	movwf	tblptru,c
  2808  0022BA  0E0F               	movlw	(high __ramtop+-1)
  2809  0022BC  64F7               	cpfsgt	tblptrh,c
  2810  0022BE  D003               	bra	u1767
  2811  0022C0  0008               	tblrd		*
  2812  0022C2  50F5               	movf	tablat,w,c
  2813  0022C4  D005               	bra	u1760
  2814  0022C6                     u1767:
  2815  0022C6  CFF6 FFE9          	movff	tblptrl,fsr0l
  2816  0022CA  CFF7 FFEA          	movff	tblptrh,fsr0h
  2817  0022CE  50EF               	movf	indf0,w,c
  2818  0022D0                     u1760:
  2819  0022D0  0900               	iorlw	0
  2820  0022D2  A4D8               	btfss	status,2,c
  2821  0022D4  EF6E  F011         	goto	u1771
  2822  0022D8  EF70  F011         	goto	u1770
  2823  0022DC                     u1771:
  2824  0022DC  EF3C  F011         	goto	l3114
  2825  0022E0                     u1770:
  2826  0022E0                     l3120:
  2827                           
  2828                           ;ECU/LCD/ecu_lcd.c: 147:     return state;
  2829  0022E0  501E               	movf	lcd_4bit_send_string_data@state^0,w,c
  2830  0022E2  0012               	return		;funcret
  2831  0022E4                     __end_of_lcd_4bit_send_string_data:
  2832                           	callstack 0
  2833                           
  2834 ;; *************** function _lcd_4bit_send_char_data *****************
  2835 ;; Defined at:
  2836 ;;		line 97 in file "ECU/LCD/ecu_lcd.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  lcd_4bit        2   19[COMRAM] PTR const struct .
  2839 ;;		 -> lcd_4bit(6), 
  2840 ;;  ch              1   21[COMRAM] const unsigned char 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;  rs_pin          1   24[COMRAM] struct .
  2843 ;;  state           1   23[COMRAM] unsigned char 
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  1    wreg      unsigned char 
  2846 ;; Registers used:
  2847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2853 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2854 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2855 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2856 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2857 ;;Total ram usage:        6 bytes
  2858 ;; Hardware stack levels used: 1
  2859 ;; Hardware stack levels required when called: 2
  2860 ;; This function calls:
  2861 ;;		_gpio_pin_write_logic
  2862 ;;		_lcd_4bit_send_enable_signal
  2863 ;;		_lcd_send_4bits
  2864 ;; This function is called by:
  2865 ;;		_lcd_4bit_send_string_data
  2866 ;;		_lcd_4bit_send_char_at_position
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text14
  2871  001EF0                     __ptext14:
  2872                           	callstack 0
  2873  001EF0                     _lcd_4bit_send_char_data:
  2874                           	callstack 26
  2875  001EF0                     
  2876                           ;ECU/LCD/ecu_lcd.c: 97: Std_ReturnType lcd_4bit_send_char_data(const lcd_4bit_t* lcd_4bi
      +                          t, const uint8 ch);ECU/LCD/ecu_lcd.c: 98: {;ECU/LCD/ecu_lcd.c: 99:     Std_ReturnType st
      +                          ate = (Std_ReturnType)1;
  2877  001EF0  0E01               	movlw	1
  2878  001EF2  6E18               	movwf	lcd_4bit_send_char_data@state^0,c
  2879  001EF4                     
  2880                           ;ECU/LCD/ecu_lcd.c: 100:     if(lcd_4bit == ((void*)0))
  2881  001EF4  5014               	movf	lcd_4bit_send_char_data@lcd_4bit^0,w,c
  2882  001EF6  1015               	iorwf	(lcd_4bit_send_char_data@lcd_4bit+1)^0,w,c
  2883  001EF8  A4D8               	btfss	status,2,c
  2884  001EFA  EF81  F00F         	goto	u1571
  2885  001EFE  EF83  F00F         	goto	u1570
  2886  001F02                     u1571:
  2887  001F02  EF87  F00F         	goto	l466
  2888  001F06                     u1570:
  2889  001F06                     
  2890                           ;ECU/LCD/ecu_lcd.c: 101:     {;ECU/LCD/ecu_lcd.c: 102:         state = (Std_ReturnType)0
      +                          ;
  2891  001F06  0E00               	movlw	0
  2892  001F08  6E18               	movwf	lcd_4bit_send_char_data@state^0,c
  2893                           
  2894                           ;ECU/LCD/ecu_lcd.c: 103:     }
  2895  001F0A  EFD2  F00F         	goto	l2968
  2896  001F0E                     l466:
  2897                           
  2898                           ;ECU/LCD/ecu_lcd.c: 105:     {;ECU/LCD/ecu_lcd.c: 106:         pin_config_t rs_pin={.por
      +                          t=lcd_4bit->lcd_rs_pin.port,.pin=lcd_4bit->lcd_rs_pin.pin,.direction=GPIO_OUTPUT,.logic=
      +                          GPIO_LOW};
  2899  001F0E  C054  F019         	movff	lcd_4bit_send_char_data@F2990,lcd_4bit_send_char_data@rs_pin
  2900  001F12  C014  FFD9         	movff	lcd_4bit_send_char_data@lcd_4bit,fsr2l
  2901  001F16  C015  FFDA         	movff	lcd_4bit_send_char_data@lcd_4bit+1,fsr2h
  2902  001F1A  50DF               	movf	223,w,c
  2903  001F1C  0B07               	andlw	7
  2904  001F1E  6E17               	movwf	??_lcd_4bit_send_char_data^0,c
  2905  001F20  5019               	movf	lcd_4bit_send_char_data@rs_pin^0,w,c
  2906  001F22  1817               	xorwf	??_lcd_4bit_send_char_data^0,w,c
  2907  001F24  0BF8               	andlw	-8
  2908  001F26  1817               	xorwf	??_lcd_4bit_send_char_data^0,w,c
  2909  001F28  6E19               	movwf	lcd_4bit_send_char_data@rs_pin^0,c
  2910  001F2A  C014  FFD9         	movff	lcd_4bit_send_char_data@lcd_4bit,fsr2l
  2911  001F2E  C015  FFDA         	movff	lcd_4bit_send_char_data@lcd_4bit+1,fsr2h
  2912  001F32  30DF               	rrcf	223,w,c
  2913  001F34  32E8               	rrcf	wreg,f,c
  2914  001F36  32E8               	rrcf	wreg,f,c
  2915  001F38  0B07               	andlw	7
  2916  001F3A  6E17               	movwf	??_lcd_4bit_send_char_data^0,c
  2917  001F3C  4617               	rlncf	??_lcd_4bit_send_char_data^0,f,c
  2918  001F3E  4617               	rlncf	??_lcd_4bit_send_char_data^0,f,c
  2919  001F40  4617               	rlncf	??_lcd_4bit_send_char_data^0,f,c
  2920  001F42  5019               	movf	lcd_4bit_send_char_data@rs_pin^0,w,c
  2921  001F44  1817               	xorwf	??_lcd_4bit_send_char_data^0,w,c
  2922  001F46  0BC7               	andlw	-57
  2923  001F48  1817               	xorwf	??_lcd_4bit_send_char_data^0,w,c
  2924  001F4A  6E19               	movwf	lcd_4bit_send_char_data@rs_pin^0,c
  2925  001F4C  9C19               	bcf	lcd_4bit_send_char_data@rs_pin^0,6,c
  2926  001F4E  9E19               	bcf	lcd_4bit_send_char_data@rs_pin^0,7,c
  2927  001F50                     
  2928                           ;ECU/LCD/ecu_lcd.c: 107:         state &= gpio_pin_write_logic(&rs_pin,GPIO_HIGH);
  2929  001F50  0E19               	movlw	low lcd_4bit_send_char_data@rs_pin
  2930  001F52  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2931  001F54  0E00               	movlw	high lcd_4bit_send_char_data@rs_pin
  2932  001F56  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2933  001F58  0E01               	movlw	1
  2934  001F5A  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  2935  001F5C  ECD9  F00C         	call	_gpio_pin_write_logic	;wreg free
  2936  001F60  1618               	andwf	lcd_4bit_send_char_data@state^0,f,c
  2937  001F62                     
  2938                           ;ECU/LCD/ecu_lcd.c: 109:         state &= lcd_send_4bits(lcd_4bit,ch >> 4);
  2939  001F62  C014  F00B         	movff	lcd_4bit_send_char_data@lcd_4bit,lcd_send_4bits@lcd_4bit
  2940  001F66  C015  F00C         	movff	lcd_4bit_send_char_data@lcd_4bit+1,lcd_send_4bits@lcd_4bit+1
  2941  001F6A  3816               	swapf	lcd_4bit_send_char_data@ch^0,w,c
  2942  001F6C  0B0F               	andlw	15
  2943  001F6E  6E0D               	movwf	lcd_send_4bits@data_or_command^0,c
  2944  001F70  EC17  F00F         	call	_lcd_send_4bits	;wreg free
  2945  001F74  1618               	andwf	lcd_4bit_send_char_data@state^0,f,c
  2946  001F76                     
  2947                           ;ECU/LCD/ecu_lcd.c: 110:         state &= lcd_4bit_send_enable_signal(lcd_4bit);
  2948  001F76  C014  F00B         	movff	lcd_4bit_send_char_data@lcd_4bit,lcd_4bit_send_enable_signal@lcd_4bit
  2949  001F7A  C015  F00C         	movff	lcd_4bit_send_char_data@lcd_4bit+1,lcd_4bit_send_enable_signal@lcd_4bit+1
  2950  001F7E  EC83  F010         	call	_lcd_4bit_send_enable_signal	;wreg free
  2951  001F82  1618               	andwf	lcd_4bit_send_char_data@state^0,f,c
  2952  001F84                     
  2953                           ;ECU/LCD/ecu_lcd.c: 111:         state &= lcd_send_4bits(lcd_4bit,ch);
  2954  001F84  C014  F00B         	movff	lcd_4bit_send_char_data@lcd_4bit,lcd_send_4bits@lcd_4bit
  2955  001F88  C015  F00C         	movff	lcd_4bit_send_char_data@lcd_4bit+1,lcd_send_4bits@lcd_4bit+1
  2956  001F8C  C016  F00D         	movff	lcd_4bit_send_char_data@ch,lcd_send_4bits@data_or_command
  2957  001F90  EC17  F00F         	call	_lcd_send_4bits	;wreg free
  2958  001F94  1618               	andwf	lcd_4bit_send_char_data@state^0,f,c
  2959  001F96                     
  2960                           ;ECU/LCD/ecu_lcd.c: 112:         state &= lcd_4bit_send_enable_signal(lcd_4bit);
  2961  001F96  C014  F00B         	movff	lcd_4bit_send_char_data@lcd_4bit,lcd_4bit_send_enable_signal@lcd_4bit
  2962  001F9A  C015  F00C         	movff	lcd_4bit_send_char_data@lcd_4bit+1,lcd_4bit_send_enable_signal@lcd_4bit+1
  2963  001F9E  EC83  F010         	call	_lcd_4bit_send_enable_signal	;wreg free
  2964  001FA2  1618               	andwf	lcd_4bit_send_char_data@state^0,f,c
  2965  001FA4                     l2968:
  2966                           
  2967                           ;ECU/LCD/ecu_lcd.c: 114:     return state;
  2968  001FA4  5018               	movf	lcd_4bit_send_char_data@state^0,w,c
  2969  001FA6  0012               	return		;funcret
  2970  001FA8                     __end_of_lcd_4bit_send_char_data:
  2971                           	callstack 0
  2972                           
  2973 ;; *************** function _application_initialize *****************
  2974 ;; Defined at:
  2975 ;;		line 59 in file "application.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;		None
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  state           1   35[COMRAM] unsigned char 
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      unsigned char 
  2982 ;; Registers used:
  2983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;Total ram usage:        1 bytes
  2994 ;; Hardware stack levels used: 1
  2995 ;; Hardware stack levels required when called: 4
  2996 ;; This function calls:
  2997 ;;		_lcd_4bit_initialize
  2998 ;;		_lcd_8bit_initialize
  2999 ;; This function is called by:
  3000 ;;		_main
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           	psect	text15
  3005  002796                     __ptext15:
  3006                           	callstack 0
  3007  002796                     _application_initialize:
  3008                           	callstack 26
  3009  002796                     
  3010                           ;application.c: 61:     Std_ReturnType state = (Std_ReturnType)1;
  3011  002796  0E01               	movlw	1
  3012  002798  6E24               	movwf	application_initialize@state^0,c
  3013  00279A                     
  3014                           ;application.c: 62:     state &= lcd_4bit_initialize(&lcd_4bit);
  3015  00279A  0EE6               	movlw	low _lcd_4bit
  3016  00279C  6E1A               	movwf	lcd_4bit_initialize@lcd_4bit^0,c
  3017  00279E  0E00               	movlw	high _lcd_4bit
  3018  0027A0  6E1B               	movwf	(lcd_4bit_initialize@lcd_4bit+1)^0,c
  3019  0027A2  EC1E  F009         	call	_lcd_4bit_initialize	;wreg free
  3020  0027A6  1624               	andwf	application_initialize@state^0,f,c
  3021  0027A8                     
  3022                           ;application.c: 63:     state &= lcd_8bit_initialize(&lcd_8bit);
  3023  0027A8  0EDC               	movlw	low _lcd_8bit
  3024  0027AA  6E1A               	movwf	lcd_8bit_initialize@lcd_8bit^0,c
  3025  0027AC  0E00               	movlw	high _lcd_8bit
  3026  0027AE  6E1B               	movwf	(lcd_8bit_initialize@lcd_8bit+1)^0,c
  3027  0027B0  EC28  F00A         	call	_lcd_8bit_initialize	;wreg free
  3028  0027B4  1624               	andwf	application_initialize@state^0,f,c
  3029  0027B6  0012               	return		;funcret
  3030  0027B8                     __end_of_application_initialize:
  3031                           	callstack 0
  3032                           
  3033 ;; *************** function _lcd_8bit_initialize *****************
  3034 ;; Defined at:
  3035 ;;		line 242 in file "ECU/LCD/ecu_lcd.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;  lcd_8bit        2   25[COMRAM] PTR const struct .
  3038 ;;		 -> lcd_8bit(10), 
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  data_pin        1   34[COMRAM] struct .
  3041 ;;  local_index     1   31[COMRAM] unsigned char 
  3042 ;;  en_pin          1   33[COMRAM] struct .
  3043 ;;  rs_pin          1   32[COMRAM] struct .
  3044 ;;  state           1   30[COMRAM] unsigned char 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      unsigned char 
  3047 ;; Registers used:
  3048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3054 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;Total ram usage:       10 bytes
  3059 ;; Hardware stack levels used: 1
  3060 ;; Hardware stack levels required when called: 3
  3061 ;; This function calls:
  3062 ;;		_gpio_pin_direction_initialize
  3063 ;;		_lcd_8bit_send_command
  3064 ;; This function is called by:
  3065 ;;		_application_initialize
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text16
  3070  001450                     __ptext16:
  3071                           	callstack 0
  3072  001450                     _lcd_8bit_initialize:
  3073                           	callstack 26
  3074  001450                     
  3075                           ;ECU/LCD/ecu_lcd.c: 242: Std_ReturnType lcd_8bit_initialize(const lcd_8bit_t* lcd_8bit);
      +                          ECU/LCD/ecu_lcd.c: 243: {;ECU/LCD/ecu_lcd.c: 244:     Std_ReturnType state = (Std_Return
      +                          Type)1;
  3076  001450  0E01               	movlw	1
  3077  001452  6E1F               	movwf	lcd_8bit_initialize@state^0,c
  3078  001454                     
  3079                           ;ECU/LCD/ecu_lcd.c: 245:     if(lcd_8bit == ((void*)0))
  3080  001454  501A               	movf	lcd_8bit_initialize@lcd_8bit^0,w,c
  3081  001456  101B               	iorwf	(lcd_8bit_initialize@lcd_8bit+1)^0,w,c
  3082  001458  A4D8               	btfss	status,2,c
  3083  00145A  EF31  F00A         	goto	u2091
  3084  00145E  EF33  F00A         	goto	u2090
  3085  001462                     u2091:
  3086  001462  EF37  F00A         	goto	l531
  3087  001466                     u2090:
  3088  001466                     
  3089                           ;ECU/LCD/ecu_lcd.c: 246:     {;ECU/LCD/ecu_lcd.c: 247:         state = (Std_ReturnType)0
      +                          ;
  3090  001466  0E00               	movlw	0
  3091  001468  6E1F               	movwf	lcd_8bit_initialize@state^0,c
  3092                           
  3093                           ;ECU/LCD/ecu_lcd.c: 248:     }
  3094  00146A  EF1E  F00B         	goto	l3442
  3095  00146E                     l531:
  3096                           
  3097                           ;ECU/LCD/ecu_lcd.c: 250:     {;ECU/LCD/ecu_lcd.c: 251:         pin_config_t rs_pin = { .
      +                          port = lcd_8bit->lcd_rs_pin.port,
  3098  00146E  C053  F021         	movff	lcd_8bit_initialize@F3037,lcd_8bit_initialize@rs_pin
  3099  001472  C01A  FFD9         	movff	lcd_8bit_initialize@lcd_8bit,fsr2l
  3100  001476  C01B  FFDA         	movff	lcd_8bit_initialize@lcd_8bit+1,fsr2h
  3101  00147A  50DF               	movf	223,w,c
  3102  00147C  0B07               	andlw	7
  3103  00147E  6E1C               	movwf	??_lcd_8bit_initialize^0,c
  3104  001480  5021               	movf	lcd_8bit_initialize@rs_pin^0,w,c
  3105  001482  181C               	xorwf	??_lcd_8bit_initialize^0,w,c
  3106  001484  0BF8               	andlw	-8
  3107  001486  181C               	xorwf	??_lcd_8bit_initialize^0,w,c
  3108  001488  6E21               	movwf	lcd_8bit_initialize@rs_pin^0,c
  3109  00148A  C01A  FFD9         	movff	lcd_8bit_initialize@lcd_8bit,fsr2l
  3110  00148E  C01B  FFDA         	movff	lcd_8bit_initialize@lcd_8bit+1,fsr2h
  3111  001492  30DF               	rrcf	223,w,c
  3112  001494  32E8               	rrcf	wreg,f,c
  3113  001496  32E8               	rrcf	wreg,f,c
  3114  001498  0B07               	andlw	7
  3115  00149A  6E1C               	movwf	??_lcd_8bit_initialize^0,c
  3116  00149C  461C               	rlncf	??_lcd_8bit_initialize^0,f,c
  3117  00149E  461C               	rlncf	??_lcd_8bit_initialize^0,f,c
  3118  0014A0  461C               	rlncf	??_lcd_8bit_initialize^0,f,c
  3119  0014A2  5021               	movf	lcd_8bit_initialize@rs_pin^0,w,c
  3120  0014A4  181C               	xorwf	??_lcd_8bit_initialize^0,w,c
  3121  0014A6  0BC7               	andlw	-57
  3122  0014A8  181C               	xorwf	??_lcd_8bit_initialize^0,w,c
  3123  0014AA  6E21               	movwf	lcd_8bit_initialize@rs_pin^0,c
  3124  0014AC  9C21               	bcf	lcd_8bit_initialize@rs_pin^0,6,c
  3125  0014AE  9E21               	bcf	lcd_8bit_initialize@rs_pin^0,7,c
  3126  0014B0                     
  3127                           ;ECU/LCD/ecu_lcd.c: 255:         state &= gpio_pin_direction_initialize(&rs_pin);
  3128  0014B0  0E21               	movlw	low lcd_8bit_initialize@rs_pin
  3129  0014B2  6E01               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
  3130  0014B4  0E00               	movlw	high lcd_8bit_initialize@rs_pin
  3131  0014B6  6E02               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
  3132  0014B8  EC0D  F008         	call	_gpio_pin_direction_initialize	;wreg free
  3133  0014BC  161F               	andwf	lcd_8bit_initialize@state^0,f,c
  3134  0014BE                     
  3135                           ;ECU/LCD/ecu_lcd.c: 256:         pin_config_t en_pin = { .port = lcd_8bit->lcd_en_pin.po
      +                          rt,
  3136  0014BE  C052  F022         	movff	lcd_8bit_initialize@F3039,lcd_8bit_initialize@en_pin
  3137  0014C2  EE20 F001          	lfsr	2,1
  3138  0014C6  501A               	movf	lcd_8bit_initialize@lcd_8bit^0,w,c
  3139  0014C8  26D9               	addwf	fsr2l,f,c
  3140  0014CA  501B               	movf	(lcd_8bit_initialize@lcd_8bit+1)^0,w,c
  3141  0014CC  22DA               	addwfc	fsr2h,f,c
  3142  0014CE  50DF               	movf	223,w,c
  3143  0014D0  0B07               	andlw	7
  3144  0014D2  6E1C               	movwf	??_lcd_8bit_initialize^0,c
  3145  0014D4  5022               	movf	lcd_8bit_initialize@en_pin^0,w,c
  3146  0014D6  181C               	xorwf	??_lcd_8bit_initialize^0,w,c
  3147  0014D8  0BF8               	andlw	-8
  3148  0014DA  181C               	xorwf	??_lcd_8bit_initialize^0,w,c
  3149  0014DC  6E22               	movwf	lcd_8bit_initialize@en_pin^0,c
  3150  0014DE  EE20 F001          	lfsr	2,1
  3151  0014E2  501A               	movf	lcd_8bit_initialize@lcd_8bit^0,w,c
  3152  0014E4  26D9               	addwf	fsr2l,f,c
  3153  0014E6  501B               	movf	(lcd_8bit_initialize@lcd_8bit+1)^0,w,c
  3154  0014E8  22DA               	addwfc	fsr2h,f,c
  3155  0014EA  30DF               	rrcf	223,w,c
  3156  0014EC  32E8               	rrcf	wreg,f,c
  3157  0014EE  32E8               	rrcf	wreg,f,c
  3158  0014F0  0B07               	andlw	7
  3159  0014F2  6E1C               	movwf	??_lcd_8bit_initialize^0,c
  3160  0014F4  461C               	rlncf	??_lcd_8bit_initialize^0,f,c
  3161  0014F6  461C               	rlncf	??_lcd_8bit_initialize^0,f,c
  3162  0014F8  461C               	rlncf	??_lcd_8bit_initialize^0,f,c
  3163  0014FA  5022               	movf	lcd_8bit_initialize@en_pin^0,w,c
  3164  0014FC  181C               	xorwf	??_lcd_8bit_initialize^0,w,c
  3165  0014FE  0BC7               	andlw	-57
  3166  001500  181C               	xorwf	??_lcd_8bit_initialize^0,w,c
  3167  001502  6E22               	movwf	lcd_8bit_initialize@en_pin^0,c
  3168  001504  9C22               	bcf	lcd_8bit_initialize@en_pin^0,6,c
  3169  001506  9E22               	bcf	lcd_8bit_initialize@en_pin^0,7,c
  3170  001508                     
  3171                           ;ECU/LCD/ecu_lcd.c: 260:         state &= gpio_pin_direction_initialize(&en_pin);
  3172  001508  0E22               	movlw	low lcd_8bit_initialize@en_pin
  3173  00150A  6E01               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
  3174  00150C  0E00               	movlw	high lcd_8bit_initialize@en_pin
  3175  00150E  6E02               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
  3176  001510  EC0D  F008         	call	_gpio_pin_direction_initialize	;wreg free
  3177  001514  161F               	andwf	lcd_8bit_initialize@state^0,f,c
  3178  001516                     
  3179                           ;ECU/LCD/ecu_lcd.c: 262:         for(uint8 local_index=0; local_index<8; local_index++)
  3180  001516  0E00               	movlw	0
  3181  001518  6E20               	movwf	lcd_8bit_initialize@local_index^0,c
  3182  00151A                     l537:
  3183                           
  3184                           ;ECU/LCD/ecu_lcd.c: 263:         {;ECU/LCD/ecu_lcd.c: 264:             pin_config_t data
      +                          _pin = { .port = lcd_8bit->lcd_data_pins[local_index].port,
  3185  00151A  C051  F023         	movff	lcd_8bit_initialize@F3042,lcd_8bit_initialize@data_pin
  3186  00151E  5020               	movf	lcd_8bit_initialize@local_index^0,w,c
  3187  001520  241A               	addwf	lcd_8bit_initialize@lcd_8bit^0,w,c
  3188  001522  6E1C               	movwf	??_lcd_8bit_initialize^0,c
  3189  001524  0E00               	movlw	0
  3190  001526  201B               	addwfc	(lcd_8bit_initialize@lcd_8bit+1)^0,w,c
  3191  001528  6E1D               	movwf	(??_lcd_8bit_initialize+1)^0,c
  3192  00152A  0E02               	movlw	2
  3193  00152C  241C               	addwf	??_lcd_8bit_initialize^0,w,c
  3194  00152E  6ED9               	movwf	fsr2l,c
  3195  001530  0E00               	movlw	0
  3196  001532  201D               	addwfc	(??_lcd_8bit_initialize+1)^0,w,c
  3197  001534  6EDA               	movwf	fsr2h,c
  3198  001536  50DF               	movf	223,w,c
  3199  001538  0B07               	andlw	7
  3200  00153A  6E1E               	movwf	(??_lcd_8bit_initialize+2)^0,c
  3201  00153C  5023               	movf	lcd_8bit_initialize@data_pin^0,w,c
  3202  00153E  181E               	xorwf	(??_lcd_8bit_initialize+2)^0,w,c
  3203  001540  0BF8               	andlw	-8
  3204  001542  181E               	xorwf	(??_lcd_8bit_initialize+2)^0,w,c
  3205  001544  6E23               	movwf	lcd_8bit_initialize@data_pin^0,c
  3206  001546  5020               	movf	lcd_8bit_initialize@local_index^0,w,c
  3207  001548  241A               	addwf	lcd_8bit_initialize@lcd_8bit^0,w,c
  3208  00154A  6E1C               	movwf	??_lcd_8bit_initialize^0,c
  3209  00154C  0E00               	movlw	0
  3210  00154E  201B               	addwfc	(lcd_8bit_initialize@lcd_8bit+1)^0,w,c
  3211  001550  6E1D               	movwf	(??_lcd_8bit_initialize+1)^0,c
  3212  001552  0E02               	movlw	2
  3213  001554  241C               	addwf	??_lcd_8bit_initialize^0,w,c
  3214  001556  6ED9               	movwf	fsr2l,c
  3215  001558  0E00               	movlw	0
  3216  00155A  201D               	addwfc	(??_lcd_8bit_initialize+1)^0,w,c
  3217  00155C  6EDA               	movwf	fsr2h,c
  3218  00155E  30DF               	rrcf	223,w,c
  3219  001560  32E8               	rrcf	wreg,f,c
  3220  001562  32E8               	rrcf	wreg,f,c
  3221  001564  0B07               	andlw	7
  3222  001566  6E1E               	movwf	(??_lcd_8bit_initialize+2)^0,c
  3223  001568  461E               	rlncf	(??_lcd_8bit_initialize+2)^0,f,c
  3224  00156A  461E               	rlncf	(??_lcd_8bit_initialize+2)^0,f,c
  3225  00156C  461E               	rlncf	(??_lcd_8bit_initialize+2)^0,f,c
  3226  00156E  5023               	movf	lcd_8bit_initialize@data_pin^0,w,c
  3227  001570  181E               	xorwf	(??_lcd_8bit_initialize+2)^0,w,c
  3228  001572  0BC7               	andlw	-57
  3229  001574  181E               	xorwf	(??_lcd_8bit_initialize+2)^0,w,c
  3230  001576  6E23               	movwf	lcd_8bit_initialize@data_pin^0,c
  3231  001578  9C23               	bcf	lcd_8bit_initialize@data_pin^0,6,c
  3232  00157A  9E23               	bcf	lcd_8bit_initialize@data_pin^0,7,c
  3233  00157C                     
  3234                           ;ECU/LCD/ecu_lcd.c: 268:             state &= gpio_pin_direction_initialize(&data_pin);
  3235  00157C  0E23               	movlw	low lcd_8bit_initialize@data_pin
  3236  00157E  6E01               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
  3237  001580  0E00               	movlw	high lcd_8bit_initialize@data_pin
  3238  001582  6E02               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
  3239  001584  EC0D  F008         	call	_gpio_pin_direction_initialize	;wreg free
  3240  001588  161F               	andwf	lcd_8bit_initialize@state^0,f,c
  3241  00158A                     
  3242                           ;ECU/LCD/ecu_lcd.c: 269:         }
  3243  00158A  2A20               	incf	lcd_8bit_initialize@local_index^0,f,c
  3244  00158C  0E07               	movlw	7
  3245  00158E  6420               	cpfsgt	lcd_8bit_initialize@local_index^0,c
  3246  001590  EFCC  F00A         	goto	u2101
  3247  001594  EFCE  F00A         	goto	u2100
  3248  001598                     u2101:
  3249  001598  EF8D  F00A         	goto	l537
  3250  00159C                     u2100:
  3251  00159C                     
  3252                           ;ECU/LCD/ecu_lcd.c: 270:         _delay((unsigned long)((20)*(8000000/4000.0)));
  3253  00159C  0E34               	movlw	52
  3254  00159E  6E1C               	movwf	??_lcd_8bit_initialize^0,c
  3255  0015A0  0EF2               	movlw	242
  3256  0015A2                     u2797:
  3257  0015A2  2EE8               	decfsz	wreg,f,c
  3258  0015A4  D7FE               	bra	u2797
  3259  0015A6  2E1C               	decfsz	??_lcd_8bit_initialize^0,f,c
  3260  0015A8  D7FC               	bra	u2797
  3261  0015AA                     
  3262                           ;ECU/LCD/ecu_lcd.c: 271:         state &= lcd_8bit_send_command(lcd_8bit, 0x38);
  3263  0015AA  C01A  F014         	movff	lcd_8bit_initialize@lcd_8bit,lcd_8bit_send_command@lcd_8bit
  3264  0015AE  C01B  F015         	movff	lcd_8bit_initialize@lcd_8bit+1,lcd_8bit_send_command@lcd_8bit+1
  3265  0015B2  0E38               	movlw	56
  3266  0015B4  6E16               	movwf	lcd_8bit_send_command@command^0,c
  3267  0015B6  ECBD  F011         	call	_lcd_8bit_send_command	;wreg free
  3268  0015BA  161F               	andwf	lcd_8bit_initialize@state^0,f,c
  3269  0015BC                     
  3270                           ;ECU/LCD/ecu_lcd.c: 272:         _delay((unsigned long)((5)*(8000000/4000.0)));
  3271  0015BC  0E0D               	movlw	13
  3272  0015BE  6E1C               	movwf	??_lcd_8bit_initialize^0,c
  3273  0015C0  0EFC               	movlw	252
  3274  0015C2                     u2807:
  3275  0015C2  2EE8               	decfsz	wreg,f,c
  3276  0015C4  D7FE               	bra	u2807
  3277  0015C6  2E1C               	decfsz	??_lcd_8bit_initialize^0,f,c
  3278  0015C8  D7FC               	bra	u2807
  3279                           
  3280                           ;ECU/LCD/ecu_lcd.c: 273:         state &= lcd_8bit_send_command(lcd_8bit, 0x38);
  3281  0015CA  C01A  F014         	movff	lcd_8bit_initialize@lcd_8bit,lcd_8bit_send_command@lcd_8bit
  3282  0015CE  C01B  F015         	movff	lcd_8bit_initialize@lcd_8bit+1,lcd_8bit_send_command@lcd_8bit+1
  3283  0015D2  0E38               	movlw	56
  3284  0015D4  6E16               	movwf	lcd_8bit_send_command@command^0,c
  3285  0015D6  ECBD  F011         	call	_lcd_8bit_send_command	;wreg free
  3286  0015DA  161F               	andwf	lcd_8bit_initialize@state^0,f,c
  3287  0015DC                     
  3288                           ;ECU/LCD/ecu_lcd.c: 274:         _delay((unsigned long)((150)*(8000000/4000000.0)));
  3289  0015DC  0E64               	movlw	100
  3290  0015DE                     u2817:
  3291  0015DE  2EE8               	decfsz	wreg,f,c
  3292  0015E0  D7FE               	bra	u2817
  3293  0015E2                     
  3294                           ;ECU/LCD/ecu_lcd.c: 275:         state &= lcd_8bit_send_command(lcd_8bit, 0x38);
  3295  0015E2  C01A  F014         	movff	lcd_8bit_initialize@lcd_8bit,lcd_8bit_send_command@lcd_8bit
  3296  0015E6  C01B  F015         	movff	lcd_8bit_initialize@lcd_8bit+1,lcd_8bit_send_command@lcd_8bit+1
  3297  0015EA  0E38               	movlw	56
  3298  0015EC  6E16               	movwf	lcd_8bit_send_command@command^0,c
  3299  0015EE  ECBD  F011         	call	_lcd_8bit_send_command	;wreg free
  3300  0015F2  161F               	andwf	lcd_8bit_initialize@state^0,f,c
  3301  0015F4                     
  3302                           ;ECU/LCD/ecu_lcd.c: 277:         state &= lcd_8bit_send_command(lcd_8bit, 0x01);
  3303  0015F4  C01A  F014         	movff	lcd_8bit_initialize@lcd_8bit,lcd_8bit_send_command@lcd_8bit
  3304  0015F8  C01B  F015         	movff	lcd_8bit_initialize@lcd_8bit+1,lcd_8bit_send_command@lcd_8bit+1
  3305  0015FC  0E01               	movlw	1
  3306  0015FE  6E16               	movwf	lcd_8bit_send_command@command^0,c
  3307  001600  ECBD  F011         	call	_lcd_8bit_send_command	;wreg free
  3308  001604  161F               	andwf	lcd_8bit_initialize@state^0,f,c
  3309  001606                     
  3310                           ;ECU/LCD/ecu_lcd.c: 278:         state &= lcd_8bit_send_command(lcd_8bit, 0x02);
  3311  001606  C01A  F014         	movff	lcd_8bit_initialize@lcd_8bit,lcd_8bit_send_command@lcd_8bit
  3312  00160A  C01B  F015         	movff	lcd_8bit_initialize@lcd_8bit+1,lcd_8bit_send_command@lcd_8bit+1
  3313  00160E  0E02               	movlw	2
  3314  001610  6E16               	movwf	lcd_8bit_send_command@command^0,c
  3315  001612  ECBD  F011         	call	_lcd_8bit_send_command	;wreg free
  3316  001616  161F               	andwf	lcd_8bit_initialize@state^0,f,c
  3317  001618                     
  3318                           ;ECU/LCD/ecu_lcd.c: 279:         state &= lcd_8bit_send_command(lcd_8bit, 0x0c);
  3319  001618  C01A  F014         	movff	lcd_8bit_initialize@lcd_8bit,lcd_8bit_send_command@lcd_8bit
  3320  00161C  C01B  F015         	movff	lcd_8bit_initialize@lcd_8bit+1,lcd_8bit_send_command@lcd_8bit+1
  3321  001620  0E0C               	movlw	12
  3322  001622  6E16               	movwf	lcd_8bit_send_command@command^0,c
  3323  001624  ECBD  F011         	call	_lcd_8bit_send_command	;wreg free
  3324  001628  161F               	andwf	lcd_8bit_initialize@state^0,f,c
  3325  00162A                     
  3326                           ;ECU/LCD/ecu_lcd.c: 280:         state &= lcd_8bit_send_command(lcd_8bit, 0x06);
  3327  00162A  C01A  F014         	movff	lcd_8bit_initialize@lcd_8bit,lcd_8bit_send_command@lcd_8bit
  3328  00162E  C01B  F015         	movff	lcd_8bit_initialize@lcd_8bit+1,lcd_8bit_send_command@lcd_8bit+1
  3329  001632  0E06               	movlw	6
  3330  001634  6E16               	movwf	lcd_8bit_send_command@command^0,c
  3331  001636  ECBD  F011         	call	_lcd_8bit_send_command	;wreg free
  3332  00163A  161F               	andwf	lcd_8bit_initialize@state^0,f,c
  3333  00163C                     l3442:
  3334                           
  3335                           ;ECU/LCD/ecu_lcd.c: 282:     return state;
  3336  00163C  501F               	movf	lcd_8bit_initialize@state^0,w,c
  3337  00163E  0012               	return		;funcret
  3338  001640                     __end_of_lcd_8bit_initialize:
  3339                           	callstack 0
  3340                           
  3341 ;; *************** function _lcd_8bit_send_command *****************
  3342 ;; Defined at:
  3343 ;;		line 285 in file "ECU/LCD/ecu_lcd.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;  lcd_8bit        2   19[COMRAM] PTR const struct .
  3346 ;;		 -> lcd_8bit(10), 
  3347 ;;  command         1   21[COMRAM] const unsigned char 
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;  rs_pin          1   24[COMRAM] struct .
  3350 ;;  state           1   23[COMRAM] unsigned char 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      unsigned char 
  3353 ;; Registers used:
  3354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3360 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3364 ;;Total ram usage:        6 bytes
  3365 ;; Hardware stack levels used: 1
  3366 ;; Hardware stack levels required when called: 2
  3367 ;; This function calls:
  3368 ;;		_gpio_pin_write_logic
  3369 ;;		_lcd_8bit_send_enable_signal
  3370 ;;		_lcd_send_8bits
  3371 ;; This function is called by:
  3372 ;;		_lcd_8bit_initialize
  3373 ;;		_lcd_8bit_set_position
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           	psect	text17
  3378  00237A                     __ptext17:
  3379                           	callstack 0
  3380  00237A                     _lcd_8bit_send_command:
  3381                           	callstack 26
  3382  00237A                     
  3383                           ;ECU/LCD/ecu_lcd.c: 285: Std_ReturnType lcd_8bit_send_command(const lcd_8bit_t* lcd_8bit
      +                          , const uint8 command);ECU/LCD/ecu_lcd.c: 286: {;ECU/LCD/ecu_lcd.c: 287:     Std_ReturnT
      +                          ype state = (Std_ReturnType)1;
  3384  00237A  0E01               	movlw	1
  3385  00237C  6E18               	movwf	lcd_8bit_send_command@state^0,c
  3386  00237E                     
  3387                           ;ECU/LCD/ecu_lcd.c: 288:     if(lcd_8bit == ((void*)0))
  3388  00237E  5014               	movf	lcd_8bit_send_command@lcd_8bit^0,w,c
  3389  002380  1015               	iorwf	(lcd_8bit_send_command@lcd_8bit+1)^0,w,c
  3390  002382  A4D8               	btfss	status,2,c
  3391  002384  EFC6  F011         	goto	u1581
  3392  002388  EFC8  F011         	goto	u1580
  3393  00238C                     u1581:
  3394  00238C  EFCC  F011         	goto	l544
  3395  002390                     u1580:
  3396  002390                     
  3397                           ;ECU/LCD/ecu_lcd.c: 289:     {;ECU/LCD/ecu_lcd.c: 290:         state = (Std_ReturnType)0
      +                          ;
  3398  002390  0E00               	movlw	0
  3399  002392  6E18               	movwf	lcd_8bit_send_command@state^0,c
  3400                           
  3401                           ;ECU/LCD/ecu_lcd.c: 291:     }
  3402  002394  EF06  F012         	goto	l2990
  3403  002398                     l544:
  3404                           
  3405                           ;ECU/LCD/ecu_lcd.c: 293:     {;ECU/LCD/ecu_lcd.c: 294:         pin_config_t rs_pin={.por
      +                          t=lcd_8bit->lcd_rs_pin.port,.pin=lcd_8bit->lcd_rs_pin.pin,.direction=GPIO_OUTPUT,.logic=
      +                          GPIO_LOW};
  3406  002398  C050  F019         	movff	lcd_8bit_send_command@F3048,lcd_8bit_send_command@rs_pin
  3407  00239C  C014  FFD9         	movff	lcd_8bit_send_command@lcd_8bit,fsr2l
  3408  0023A0  C015  FFDA         	movff	lcd_8bit_send_command@lcd_8bit+1,fsr2h
  3409  0023A4  50DF               	movf	223,w,c
  3410  0023A6  0B07               	andlw	7
  3411  0023A8  6E17               	movwf	??_lcd_8bit_send_command^0,c
  3412  0023AA  5019               	movf	lcd_8bit_send_command@rs_pin^0,w,c
  3413  0023AC  1817               	xorwf	??_lcd_8bit_send_command^0,w,c
  3414  0023AE  0BF8               	andlw	-8
  3415  0023B0  1817               	xorwf	??_lcd_8bit_send_command^0,w,c
  3416  0023B2  6E19               	movwf	lcd_8bit_send_command@rs_pin^0,c
  3417  0023B4  C014  FFD9         	movff	lcd_8bit_send_command@lcd_8bit,fsr2l
  3418  0023B8  C015  FFDA         	movff	lcd_8bit_send_command@lcd_8bit+1,fsr2h
  3419  0023BC  30DF               	rrcf	223,w,c
  3420  0023BE  32E8               	rrcf	wreg,f,c
  3421  0023C0  32E8               	rrcf	wreg,f,c
  3422  0023C2  0B07               	andlw	7
  3423  0023C4  6E17               	movwf	??_lcd_8bit_send_command^0,c
  3424  0023C6  4617               	rlncf	??_lcd_8bit_send_command^0,f,c
  3425  0023C8  4617               	rlncf	??_lcd_8bit_send_command^0,f,c
  3426  0023CA  4617               	rlncf	??_lcd_8bit_send_command^0,f,c
  3427  0023CC  5019               	movf	lcd_8bit_send_command@rs_pin^0,w,c
  3428  0023CE  1817               	xorwf	??_lcd_8bit_send_command^0,w,c
  3429  0023D0  0BC7               	andlw	-57
  3430  0023D2  1817               	xorwf	??_lcd_8bit_send_command^0,w,c
  3431  0023D4  6E19               	movwf	lcd_8bit_send_command@rs_pin^0,c
  3432  0023D6  9C19               	bcf	lcd_8bit_send_command@rs_pin^0,6,c
  3433  0023D8  9E19               	bcf	lcd_8bit_send_command@rs_pin^0,7,c
  3434  0023DA                     
  3435                           ;ECU/LCD/ecu_lcd.c: 295:         state &= gpio_pin_write_logic(&rs_pin,GPIO_LOW);
  3436  0023DA  0E19               	movlw	low lcd_8bit_send_command@rs_pin
  3437  0023DC  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3438  0023DE  0E00               	movlw	high lcd_8bit_send_command@rs_pin
  3439  0023E0  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  3440  0023E2  0E00               	movlw	0
  3441  0023E4  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  3442  0023E6  ECD9  F00C         	call	_gpio_pin_write_logic	;wreg free
  3443  0023EA  1618               	andwf	lcd_8bit_send_command@state^0,f,c
  3444  0023EC                     
  3445                           ;ECU/LCD/ecu_lcd.c: 297:         state &= lcd_send_8bits(lcd_8bit,command);
  3446  0023EC  C014  F00B         	movff	lcd_8bit_send_command@lcd_8bit,lcd_send_8bits@lcd_8bit
  3447  0023F0  C015  F00C         	movff	lcd_8bit_send_command@lcd_8bit+1,lcd_send_8bits@lcd_8bit+1
  3448  0023F4  C016  F00D         	movff	lcd_8bit_send_command@command,lcd_send_8bits@data_or_command
  3449  0023F8  ECB6  F00E         	call	_lcd_send_8bits	;wreg free
  3450  0023FC  1618               	andwf	lcd_8bit_send_command@state^0,f,c
  3451  0023FE                     
  3452                           ;ECU/LCD/ecu_lcd.c: 298:         state &= lcd_8bit_send_enable_signal(lcd_8bit);
  3453  0023FE  C014  F00B         	movff	lcd_8bit_send_command@lcd_8bit,lcd_8bit_send_enable_signal@lcd_8bit
  3454  002402  C015  F00C         	movff	lcd_8bit_send_command@lcd_8bit+1,lcd_8bit_send_enable_signal@lcd_8bit+1
  3455  002406  EC30  F010         	call	_lcd_8bit_send_enable_signal	;wreg free
  3456  00240A  1618               	andwf	lcd_8bit_send_command@state^0,f,c
  3457  00240C                     l2990:
  3458                           
  3459                           ;ECU/LCD/ecu_lcd.c: 300:     return state;
  3460  00240C  5018               	movf	lcd_8bit_send_command@state^0,w,c
  3461  00240E  0012               	return		;funcret
  3462  002410                     __end_of_lcd_8bit_send_command:
  3463                           	callstack 0
  3464                           
  3465 ;; *************** function _lcd_send_8bits *****************
  3466 ;; Defined at:
  3467 ;;		line 571 in file "ECU/LCD/ecu_lcd.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;  lcd_8bit        2   10[COMRAM] PTR const struct .
  3470 ;;		 -> lcd_8bit(10), 
  3471 ;;  data_or_comm    1   12[COMRAM] unsigned char 
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;  data_pin        1   17[COMRAM] struct .
  3474 ;;  local_index     1   18[COMRAM] unsigned char 
  3475 ;;  state           1   16[COMRAM] unsigned char 
  3476 ;; Return value:  Size  Location     Type
  3477 ;;                  1    wreg      unsigned char 
  3478 ;; Registers used:
  3479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 0/0
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3485 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3486 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3487 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3488 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3489 ;;Total ram usage:        9 bytes
  3490 ;; Hardware stack levels used: 1
  3491 ;; Hardware stack levels required when called: 1
  3492 ;; This function calls:
  3493 ;;		_gpio_pin_write_logic
  3494 ;; This function is called by:
  3495 ;;		_lcd_8bit_send_command
  3496 ;;		_lcd_8bit_send_char_data
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           	psect	text18
  3501  001D6C                     __ptext18:
  3502                           	callstack 0
  3503  001D6C                     _lcd_send_8bits:
  3504                           	callstack 26
  3505  001D6C                     
  3506                           ;ECU/LCD/ecu_lcd.c: 571: static Std_ReturnType lcd_send_8bits(const lcd_8bit_t *lcd_8bit
      +                          , uint8 data_or_command);ECU/LCD/ecu_lcd.c: 572: {;ECU/LCD/ecu_lcd.c: 573:     Std_Retur
      +                          nType state = (Std_ReturnType)1;
  3507  001D6C  0E01               	movlw	1
  3508  001D6E  6E11               	movwf	lcd_send_8bits@state^0,c
  3509  001D70                     
  3510                           ;ECU/LCD/ecu_lcd.c: 574:     if(lcd_8bit == ((void*)0))
  3511  001D70  500B               	movf	lcd_send_8bits@lcd_8bit^0,w,c
  3512  001D72  100C               	iorwf	(lcd_send_8bits@lcd_8bit+1)^0,w,c
  3513  001D74  A4D8               	btfss	status,2,c
  3514  001D76  EFBF  F00E         	goto	u1521
  3515  001D7A  EFC1  F00E         	goto	u1520
  3516  001D7E                     u1521:
  3517  001D7E  EFC5  F00E         	goto	l2878
  3518  001D82                     u1520:
  3519  001D82                     
  3520                           ;ECU/LCD/ecu_lcd.c: 575:     {;ECU/LCD/ecu_lcd.c: 576:         state = (Std_ReturnType)0
      +                          ;
  3521  001D82  0E00               	movlw	0
  3522  001D84  6E11               	movwf	lcd_send_8bits@state^0,c
  3523                           
  3524                           ;ECU/LCD/ecu_lcd.c: 577:     }
  3525  001D86  EF15  F00F         	goto	l2892
  3526  001D8A                     l2878:
  3527                           
  3528                           ;ECU/LCD/ecu_lcd.c: 579:     {;ECU/LCD/ecu_lcd.c: 580:         for(uint8 local_index=0; 
      +                          local_index<8; local_index++)
  3529  001D8A  0E00               	movlw	0
  3530  001D8C  6E13               	movwf	lcd_send_8bits@local_index^0,c
  3531  001D8E                     l661:
  3532                           
  3533                           ;ECU/LCD/ecu_lcd.c: 581:         {;ECU/LCD/ecu_lcd.c: 582:             pin_config_t data
      +                          _pin = {.port = lcd_8bit->lcd_data_pins[local_index].port,
  3534  001D8E  C04B  F012         	movff	lcd_send_8bits@F3133,lcd_send_8bits@data_pin
  3535  001D92  5013               	movf	lcd_send_8bits@local_index^0,w,c
  3536  001D94  240B               	addwf	lcd_send_8bits@lcd_8bit^0,w,c
  3537  001D96  6E0E               	movwf	??_lcd_send_8bits^0,c
  3538  001D98  0E00               	movlw	0
  3539  001D9A  200C               	addwfc	(lcd_send_8bits@lcd_8bit+1)^0,w,c
  3540  001D9C  6E0F               	movwf	(??_lcd_send_8bits+1)^0,c
  3541  001D9E  0E02               	movlw	2
  3542  001DA0  240E               	addwf	??_lcd_send_8bits^0,w,c
  3543  001DA2  6ED9               	movwf	fsr2l,c
  3544  001DA4  0E00               	movlw	0
  3545  001DA6  200F               	addwfc	(??_lcd_send_8bits+1)^0,w,c
  3546  001DA8  6EDA               	movwf	fsr2h,c
  3547  001DAA  50DF               	movf	223,w,c
  3548  001DAC  0B07               	andlw	7
  3549  001DAE  6E10               	movwf	(??_lcd_send_8bits+2)^0,c
  3550  001DB0  5012               	movf	lcd_send_8bits@data_pin^0,w,c
  3551  001DB2  1810               	xorwf	(??_lcd_send_8bits+2)^0,w,c
  3552  001DB4  0BF8               	andlw	-8
  3553  001DB6  1810               	xorwf	(??_lcd_send_8bits+2)^0,w,c
  3554  001DB8  6E12               	movwf	lcd_send_8bits@data_pin^0,c
  3555  001DBA  5013               	movf	lcd_send_8bits@local_index^0,w,c
  3556  001DBC  240B               	addwf	lcd_send_8bits@lcd_8bit^0,w,c
  3557  001DBE  6E0E               	movwf	??_lcd_send_8bits^0,c
  3558  001DC0  0E00               	movlw	0
  3559  001DC2  200C               	addwfc	(lcd_send_8bits@lcd_8bit+1)^0,w,c
  3560  001DC4  6E0F               	movwf	(??_lcd_send_8bits+1)^0,c
  3561  001DC6  0E02               	movlw	2
  3562  001DC8  240E               	addwf	??_lcd_send_8bits^0,w,c
  3563  001DCA  6ED9               	movwf	fsr2l,c
  3564  001DCC  0E00               	movlw	0
  3565  001DCE  200F               	addwfc	(??_lcd_send_8bits+1)^0,w,c
  3566  001DD0  6EDA               	movwf	fsr2h,c
  3567  001DD2  30DF               	rrcf	223,w,c
  3568  001DD4  32E8               	rrcf	wreg,f,c
  3569  001DD6  32E8               	rrcf	wreg,f,c
  3570  001DD8  0B07               	andlw	7
  3571  001DDA  6E10               	movwf	(??_lcd_send_8bits+2)^0,c
  3572  001DDC  4610               	rlncf	(??_lcd_send_8bits+2)^0,f,c
  3573  001DDE  4610               	rlncf	(??_lcd_send_8bits+2)^0,f,c
  3574  001DE0  4610               	rlncf	(??_lcd_send_8bits+2)^0,f,c
  3575  001DE2  5012               	movf	lcd_send_8bits@data_pin^0,w,c
  3576  001DE4  1810               	xorwf	(??_lcd_send_8bits+2)^0,w,c
  3577  001DE6  0BC7               	andlw	-57
  3578  001DE8  1810               	xorwf	(??_lcd_send_8bits+2)^0,w,c
  3579  001DEA  6E12               	movwf	lcd_send_8bits@data_pin^0,c
  3580  001DEC                     
  3581                           ;ECU/LCD/ecu_lcd.c: 584:             state &= gpio_pin_write_logic(&data_pin, (data_or_c
      +                          ommand >> local_index) & 0x01);
  3582  001DEC  0E12               	movlw	low lcd_send_8bits@data_pin
  3583  001DEE  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3584  001DF0  0E00               	movlw	high lcd_send_8bits@data_pin
  3585  001DF2  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  3586  001DF4  C013  F00E         	movff	lcd_send_8bits@local_index,??_lcd_send_8bits
  3587  001DF8  C00D  F00F         	movff	lcd_send_8bits@data_or_command,??_lcd_send_8bits+1
  3588  001DFC  2A0E               	incf	??_lcd_send_8bits^0,f,c
  3589  001DFE  EF03  F00F         	goto	u1534
  3590  001E02                     u1535:
  3591  001E02  90D8               	bcf	status,0,c
  3592  001E04  320F               	rrcf	(??_lcd_send_8bits+1)^0,f,c
  3593  001E06                     u1534:
  3594  001E06  2E0E               	decfsz	??_lcd_send_8bits^0,f,c
  3595  001E08  EF01  F00F         	goto	u1535
  3596  001E0C  500F               	movf	(??_lcd_send_8bits+1)^0,w,c
  3597  001E0E  0B01               	andlw	1
  3598  001E10  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  3599  001E12  ECD9  F00C         	call	_gpio_pin_write_logic	;wreg free
  3600  001E16  1611               	andwf	lcd_send_8bits@state^0,f,c
  3601  001E18                     
  3602                           ;ECU/LCD/ecu_lcd.c: 585:         }
  3603  001E18  2A13               	incf	lcd_send_8bits@local_index^0,f,c
  3604  001E1A  0E07               	movlw	7
  3605  001E1C  6413               	cpfsgt	lcd_send_8bits@local_index^0,c
  3606  001E1E  EF13  F00F         	goto	u1541
  3607  001E22  EF15  F00F         	goto	u1540
  3608  001E26                     u1541:
  3609  001E26  EFC7  F00E         	goto	l661
  3610  001E2A                     u1540:
  3611  001E2A                     l2892:
  3612                           
  3613                           ;ECU/LCD/ecu_lcd.c: 587:     return state;
  3614  001E2A  5011               	movf	lcd_send_8bits@state^0,w,c
  3615  001E2C  0012               	return		;funcret
  3616  001E2E                     __end_of_lcd_send_8bits:
  3617                           	callstack 0
  3618                           
  3619 ;; *************** function _lcd_8bit_send_enable_signal *****************
  3620 ;; Defined at:
  3621 ;;		line 590 in file "ECU/LCD/ecu_lcd.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;  lcd_8bit        2   10[COMRAM] PTR const struct .
  3624 ;;		 -> lcd_8bit(10), 
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;  en_pin          1   14[COMRAM] struct .
  3627 ;;  state           1   13[COMRAM] unsigned char 
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  1    wreg      unsigned char 
  3630 ;; Registers used:
  3631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3637 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3638 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3639 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3640 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;Total ram usage:        5 bytes
  3642 ;; Hardware stack levels used: 1
  3643 ;; Hardware stack levels required when called: 1
  3644 ;; This function calls:
  3645 ;;		_gpio_pin_write_logic
  3646 ;; This function is called by:
  3647 ;;		_lcd_8bit_send_command
  3648 ;;		_lcd_8bit_send_char_data
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           	psect	text19
  3653  002060                     __ptext19:
  3654                           	callstack 0
  3655  002060                     _lcd_8bit_send_enable_signal:
  3656                           	callstack 26
  3657  002060                     
  3658                           ;ECU/LCD/ecu_lcd.c: 590: static Std_ReturnType lcd_8bit_send_enable_signal(const lcd_8bi
      +                          t_t *lcd_8bit);ECU/LCD/ecu_lcd.c: 591: {;ECU/LCD/ecu_lcd.c: 592:     Std_ReturnType stat
      +                          e = (Std_ReturnType)1;
  3659  002060  0E01               	movlw	1
  3660  002062  6E0E               	movwf	lcd_8bit_send_enable_signal@state^0,c
  3661  002064                     
  3662                           ;ECU/LCD/ecu_lcd.c: 593:     if(lcd_8bit == ((void*)0))
  3663  002064  500B               	movf	lcd_8bit_send_enable_signal@lcd_8bit^0,w,c
  3664  002066  100C               	iorwf	(lcd_8bit_send_enable_signal@lcd_8bit+1)^0,w,c
  3665  002068  A4D8               	btfss	status,2,c
  3666  00206A  EF39  F010         	goto	u1551
  3667  00206E  EF3B  F010         	goto	u1550
  3668  002072                     u1551:
  3669  002072  EF3F  F010         	goto	l668
  3670  002076                     u1550:
  3671  002076                     
  3672                           ;ECU/LCD/ecu_lcd.c: 594:     {;ECU/LCD/ecu_lcd.c: 595:         state = (Std_ReturnType)0
      +                          ;
  3673  002076  0E00               	movlw	0
  3674  002078  6E0E               	movwf	lcd_8bit_send_enable_signal@state^0,c
  3675                           
  3676                           ;ECU/LCD/ecu_lcd.c: 596:     }
  3677  00207A  EF81  F010         	goto	l2916
  3678  00207E                     l668:
  3679                           
  3680                           ;ECU/LCD/ecu_lcd.c: 598:     {;ECU/LCD/ecu_lcd.c: 599:         pin_config_t en_pin={.por
      +                          t=lcd_8bit->lcd_en_pin.port,.pin=lcd_8bit->lcd_en_pin.pin,.direction=GPIO_OUTPUT,.logic=
      +                          GPIO_LOW};
  3681  00207E  C04A  F00F         	movff	lcd_8bit_send_enable_signal@F3138,lcd_8bit_send_enable_signal@en_pin
  3682  002082  EE20 F001          	lfsr	2,1
  3683  002086  500B               	movf	lcd_8bit_send_enable_signal@lcd_8bit^0,w,c
  3684  002088  26D9               	addwf	fsr2l,f,c
  3685  00208A  500C               	movf	(lcd_8bit_send_enable_signal@lcd_8bit+1)^0,w,c
  3686  00208C  22DA               	addwfc	fsr2h,f,c
  3687  00208E  50DF               	movf	223,w,c
  3688  002090  0B07               	andlw	7
  3689  002092  6E0D               	movwf	??_lcd_8bit_send_enable_signal^0,c
  3690  002094  500F               	movf	lcd_8bit_send_enable_signal@en_pin^0,w,c
  3691  002096  180D               	xorwf	??_lcd_8bit_send_enable_signal^0,w,c
  3692  002098  0BF8               	andlw	-8
  3693  00209A  180D               	xorwf	??_lcd_8bit_send_enable_signal^0,w,c
  3694  00209C  6E0F               	movwf	lcd_8bit_send_enable_signal@en_pin^0,c
  3695  00209E  EE20 F001          	lfsr	2,1
  3696  0020A2  500B               	movf	lcd_8bit_send_enable_signal@lcd_8bit^0,w,c
  3697  0020A4  26D9               	addwf	fsr2l,f,c
  3698  0020A6  500C               	movf	(lcd_8bit_send_enable_signal@lcd_8bit+1)^0,w,c
  3699  0020A8  22DA               	addwfc	fsr2h,f,c
  3700  0020AA  30DF               	rrcf	223,w,c
  3701  0020AC  32E8               	rrcf	wreg,f,c
  3702  0020AE  32E8               	rrcf	wreg,f,c
  3703  0020B0  0B07               	andlw	7
  3704  0020B2  6E0D               	movwf	??_lcd_8bit_send_enable_signal^0,c
  3705  0020B4  460D               	rlncf	??_lcd_8bit_send_enable_signal^0,f,c
  3706  0020B6  460D               	rlncf	??_lcd_8bit_send_enable_signal^0,f,c
  3707  0020B8  460D               	rlncf	??_lcd_8bit_send_enable_signal^0,f,c
  3708  0020BA  500F               	movf	lcd_8bit_send_enable_signal@en_pin^0,w,c
  3709  0020BC  180D               	xorwf	??_lcd_8bit_send_enable_signal^0,w,c
  3710  0020BE  0BC7               	andlw	-57
  3711  0020C0  180D               	xorwf	??_lcd_8bit_send_enable_signal^0,w,c
  3712  0020C2  6E0F               	movwf	lcd_8bit_send_enable_signal@en_pin^0,c
  3713  0020C4  9C0F               	bcf	lcd_8bit_send_enable_signal@en_pin^0,6,c
  3714  0020C6  9E0F               	bcf	lcd_8bit_send_enable_signal@en_pin^0,7,c
  3715  0020C8                     
  3716                           ;ECU/LCD/ecu_lcd.c: 600:         state &= gpio_pin_write_logic(&en_pin,GPIO_HIGH);
  3717  0020C8  0E0F               	movlw	low lcd_8bit_send_enable_signal@en_pin
  3718  0020CA  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3719  0020CC  0E00               	movlw	high lcd_8bit_send_enable_signal@en_pin
  3720  0020CE  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  3721  0020D0  0E01               	movlw	1
  3722  0020D2  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  3723  0020D4  ECD9  F00C         	call	_gpio_pin_write_logic	;wreg free
  3724  0020D8  160E               	andwf	lcd_8bit_send_enable_signal@state^0,f,c
  3725  0020DA                     
  3726                           ;ECU/LCD/ecu_lcd.c: 601:         _delay((unsigned long)((1)*(8000000/4000.0)));
  3727  0020DA  0E03               	movlw	3
  3728  0020DC  6E0D               	movwf	??_lcd_8bit_send_enable_signal^0,c
  3729  0020DE  0E98               	movlw	152
  3730  0020E0                     u2827:
  3731  0020E0  2EE8               	decfsz	wreg,f,c
  3732  0020E2  D7FE               	bra	u2827
  3733  0020E4  2E0D               	decfsz	??_lcd_8bit_send_enable_signal^0,f,c
  3734  0020E6  D7FC               	bra	u2827
  3735  0020E8                     
  3736                           ;ECU/LCD/ecu_lcd.c: 602:         state &= gpio_pin_write_logic(&en_pin,GPIO_LOW);
  3737  0020E8  0E0F               	movlw	low lcd_8bit_send_enable_signal@en_pin
  3738  0020EA  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3739  0020EC  0E00               	movlw	high lcd_8bit_send_enable_signal@en_pin
  3740  0020EE  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  3741  0020F0  0E00               	movlw	0
  3742  0020F2  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  3743  0020F4  ECD9  F00C         	call	_gpio_pin_write_logic	;wreg free
  3744  0020F8  160E               	andwf	lcd_8bit_send_enable_signal@state^0,f,c
  3745  0020FA                     
  3746                           ;ECU/LCD/ecu_lcd.c: 603:         _delay((unsigned long)((100)*(8000000/4000000.0)));
  3747  0020FA  0E42               	movlw	66
  3748  0020FC                     u2837:
  3749  0020FC  2EE8               	decfsz	wreg,f,c
  3750  0020FE  D7FE               	bra	u2837
  3751  002100  D000               	nop2	
  3752  002102                     l2916:
  3753                           
  3754                           ;ECU/LCD/ecu_lcd.c: 605:     return state;
  3755  002102  500E               	movf	lcd_8bit_send_enable_signal@state^0,w,c
  3756  002104  0012               	return		;funcret
  3757  002106                     __end_of_lcd_8bit_send_enable_signal:
  3758                           	callstack 0
  3759                           
  3760 ;; *************** function _lcd_4bit_initialize *****************
  3761 ;; Defined at:
  3762 ;;		line 19 in file "ECU/LCD/ecu_lcd.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;  lcd_4bit        2   25[COMRAM] PTR const struct .
  3765 ;;		 -> lcd_4bit(6), 
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;  data_pin        1   34[COMRAM] struct .
  3768 ;;  local_index     1   31[COMRAM] unsigned char 
  3769 ;;  en_pin          1   33[COMRAM] struct .
  3770 ;;  rs_pin          1   32[COMRAM] struct .
  3771 ;;  state           1   30[COMRAM] unsigned char 
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      unsigned char 
  3774 ;; Registers used:
  3775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;Total ram usage:       10 bytes
  3786 ;; Hardware stack levels used: 1
  3787 ;; Hardware stack levels required when called: 3
  3788 ;; This function calls:
  3789 ;;		_gpio_pin_direction_initialize
  3790 ;;		_lcd_4bit_send_command
  3791 ;;		_lcd_send_higher_nibble
  3792 ;; This function is called by:
  3793 ;;		_application_initialize
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           	psect	text20
  3798  00123C                     __ptext20:
  3799                           	callstack 0
  3800  00123C                     _lcd_4bit_initialize:
  3801                           	callstack 26
  3802  00123C                     
  3803                           ;ECU/LCD/ecu_lcd.c: 19: Std_ReturnType lcd_4bit_initialize(const lcd_4bit_t* lcd_4bit);E
      +                          CU/LCD/ecu_lcd.c: 20: {;ECU/LCD/ecu_lcd.c: 21:     Std_ReturnType state = (Std_ReturnTyp
      +                          e)1;
  3804  00123C  0E01               	movlw	1
  3805  00123E  6E1F               	movwf	lcd_4bit_initialize@state^0,c
  3806  001240                     
  3807                           ;ECU/LCD/ecu_lcd.c: 22:     if(lcd_4bit == ((void*)0))
  3808  001240  501A               	movf	lcd_4bit_initialize@lcd_4bit^0,w,c
  3809  001242  101B               	iorwf	(lcd_4bit_initialize@lcd_4bit+1)^0,w,c
  3810  001244  A4D8               	btfss	status,2,c
  3811  001246  EF27  F009         	goto	u2071
  3812  00124A  EF29  F009         	goto	u2070
  3813  00124E                     u2071:
  3814  00124E  EF2D  F009         	goto	l446
  3815  001252                     u2070:
  3816  001252                     
  3817                           ;ECU/LCD/ecu_lcd.c: 23:     {;ECU/LCD/ecu_lcd.c: 24:         state = (Std_ReturnType)0;
  3818  001252  0E00               	movlw	0
  3819  001254  6E1F               	movwf	lcd_4bit_initialize@state^0,c
  3820                           
  3821                           ;ECU/LCD/ecu_lcd.c: 25:     }
  3822  001256  EF26  F00A         	goto	l3376
  3823  00125A                     l446:
  3824                           
  3825                           ;ECU/LCD/ecu_lcd.c: 27:     {;ECU/LCD/ecu_lcd.c: 28:         pin_config_t rs_pin = {.por
      +                          t = lcd_4bit->lcd_rs_pin.port,
  3826  00125A  C058  F021         	movff	lcd_4bit_initialize@F2973,lcd_4bit_initialize@rs_pin
  3827  00125E  C01A  FFD9         	movff	lcd_4bit_initialize@lcd_4bit,fsr2l
  3828  001262  C01B  FFDA         	movff	lcd_4bit_initialize@lcd_4bit+1,fsr2h
  3829  001266  50DF               	movf	223,w,c
  3830  001268  0B07               	andlw	7
  3831  00126A  6E1C               	movwf	??_lcd_4bit_initialize^0,c
  3832  00126C  5021               	movf	lcd_4bit_initialize@rs_pin^0,w,c
  3833  00126E  181C               	xorwf	??_lcd_4bit_initialize^0,w,c
  3834  001270  0BF8               	andlw	-8
  3835  001272  181C               	xorwf	??_lcd_4bit_initialize^0,w,c
  3836  001274  6E21               	movwf	lcd_4bit_initialize@rs_pin^0,c
  3837  001276  C01A  FFD9         	movff	lcd_4bit_initialize@lcd_4bit,fsr2l
  3838  00127A  C01B  FFDA         	movff	lcd_4bit_initialize@lcd_4bit+1,fsr2h
  3839  00127E  30DF               	rrcf	223,w,c
  3840  001280  32E8               	rrcf	wreg,f,c
  3841  001282  32E8               	rrcf	wreg,f,c
  3842  001284  0B07               	andlw	7
  3843  001286  6E1C               	movwf	??_lcd_4bit_initialize^0,c
  3844  001288  461C               	rlncf	??_lcd_4bit_initialize^0,f,c
  3845  00128A  461C               	rlncf	??_lcd_4bit_initialize^0,f,c
  3846  00128C  461C               	rlncf	??_lcd_4bit_initialize^0,f,c
  3847  00128E  5021               	movf	lcd_4bit_initialize@rs_pin^0,w,c
  3848  001290  181C               	xorwf	??_lcd_4bit_initialize^0,w,c
  3849  001292  0BC7               	andlw	-57
  3850  001294  181C               	xorwf	??_lcd_4bit_initialize^0,w,c
  3851  001296  6E21               	movwf	lcd_4bit_initialize@rs_pin^0,c
  3852  001298  9C21               	bcf	lcd_4bit_initialize@rs_pin^0,6,c
  3853  00129A  9E21               	bcf	lcd_4bit_initialize@rs_pin^0,7,c
  3854  00129C                     
  3855                           ;ECU/LCD/ecu_lcd.c: 32:         state &= gpio_pin_direction_initialize(&rs_pin);
  3856  00129C  0E21               	movlw	low lcd_4bit_initialize@rs_pin
  3857  00129E  6E01               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
  3858  0012A0  0E00               	movlw	high lcd_4bit_initialize@rs_pin
  3859  0012A2  6E02               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
  3860  0012A4  EC0D  F008         	call	_gpio_pin_direction_initialize	;wreg free
  3861  0012A8  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  3862  0012AA                     
  3863                           ;ECU/LCD/ecu_lcd.c: 33:         pin_config_t en_pin = {.port = lcd_4bit->lcd_en_pin.port
      +                          ,
  3864  0012AA  C057  F022         	movff	lcd_4bit_initialize@F2975,lcd_4bit_initialize@en_pin
  3865  0012AE  EE20 F001          	lfsr	2,1
  3866  0012B2  501A               	movf	lcd_4bit_initialize@lcd_4bit^0,w,c
  3867  0012B4  26D9               	addwf	fsr2l,f,c
  3868  0012B6  501B               	movf	(lcd_4bit_initialize@lcd_4bit+1)^0,w,c
  3869  0012B8  22DA               	addwfc	fsr2h,f,c
  3870  0012BA  50DF               	movf	223,w,c
  3871  0012BC  0B07               	andlw	7
  3872  0012BE  6E1C               	movwf	??_lcd_4bit_initialize^0,c
  3873  0012C0  5022               	movf	lcd_4bit_initialize@en_pin^0,w,c
  3874  0012C2  181C               	xorwf	??_lcd_4bit_initialize^0,w,c
  3875  0012C4  0BF8               	andlw	-8
  3876  0012C6  181C               	xorwf	??_lcd_4bit_initialize^0,w,c
  3877  0012C8  6E22               	movwf	lcd_4bit_initialize@en_pin^0,c
  3878  0012CA  EE20 F001          	lfsr	2,1
  3879  0012CE  501A               	movf	lcd_4bit_initialize@lcd_4bit^0,w,c
  3880  0012D0  26D9               	addwf	fsr2l,f,c
  3881  0012D2  501B               	movf	(lcd_4bit_initialize@lcd_4bit+1)^0,w,c
  3882  0012D4  22DA               	addwfc	fsr2h,f,c
  3883  0012D6  30DF               	rrcf	223,w,c
  3884  0012D8  32E8               	rrcf	wreg,f,c
  3885  0012DA  32E8               	rrcf	wreg,f,c
  3886  0012DC  0B07               	andlw	7
  3887  0012DE  6E1C               	movwf	??_lcd_4bit_initialize^0,c
  3888  0012E0  461C               	rlncf	??_lcd_4bit_initialize^0,f,c
  3889  0012E2  461C               	rlncf	??_lcd_4bit_initialize^0,f,c
  3890  0012E4  461C               	rlncf	??_lcd_4bit_initialize^0,f,c
  3891  0012E6  5022               	movf	lcd_4bit_initialize@en_pin^0,w,c
  3892  0012E8  181C               	xorwf	??_lcd_4bit_initialize^0,w,c
  3893  0012EA  0BC7               	andlw	-57
  3894  0012EC  181C               	xorwf	??_lcd_4bit_initialize^0,w,c
  3895  0012EE  6E22               	movwf	lcd_4bit_initialize@en_pin^0,c
  3896  0012F0  9C22               	bcf	lcd_4bit_initialize@en_pin^0,6,c
  3897  0012F2  9E22               	bcf	lcd_4bit_initialize@en_pin^0,7,c
  3898  0012F4                     
  3899                           ;ECU/LCD/ecu_lcd.c: 37:         state &= gpio_pin_direction_initialize(&en_pin);
  3900  0012F4  0E22               	movlw	low lcd_4bit_initialize@en_pin
  3901  0012F6  6E01               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
  3902  0012F8  0E00               	movlw	high lcd_4bit_initialize@en_pin
  3903  0012FA  6E02               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
  3904  0012FC  EC0D  F008         	call	_gpio_pin_direction_initialize	;wreg free
  3905  001300  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  3906  001302                     
  3907                           ;ECU/LCD/ecu_lcd.c: 39:         for(uint8 local_index=0; local_index<4; local_index++)
  3908  001302  0E00               	movlw	0
  3909  001304  6E20               	movwf	lcd_4bit_initialize@local_index^0,c
  3910  001306                     l452:
  3911                           
  3912                           ;ECU/LCD/ecu_lcd.c: 40:         {;ECU/LCD/ecu_lcd.c: 41:             pin_config_t data_p
      +                          in = {.port = lcd_4bit->lcd_data_pins[local_index].port,
  3913  001306  C056  F023         	movff	lcd_4bit_initialize@F2978,lcd_4bit_initialize@data_pin
  3914  00130A  5020               	movf	lcd_4bit_initialize@local_index^0,w,c
  3915  00130C  241A               	addwf	lcd_4bit_initialize@lcd_4bit^0,w,c
  3916  00130E  6E1C               	movwf	??_lcd_4bit_initialize^0,c
  3917  001310  0E00               	movlw	0
  3918  001312  201B               	addwfc	(lcd_4bit_initialize@lcd_4bit+1)^0,w,c
  3919  001314  6E1D               	movwf	(??_lcd_4bit_initialize+1)^0,c
  3920  001316  0E02               	movlw	2
  3921  001318  241C               	addwf	??_lcd_4bit_initialize^0,w,c
  3922  00131A  6ED9               	movwf	fsr2l,c
  3923  00131C  0E00               	movlw	0
  3924  00131E  201D               	addwfc	(??_lcd_4bit_initialize+1)^0,w,c
  3925  001320  6EDA               	movwf	fsr2h,c
  3926  001322  50DF               	movf	223,w,c
  3927  001324  0B07               	andlw	7
  3928  001326  6E1E               	movwf	(??_lcd_4bit_initialize+2)^0,c
  3929  001328  5023               	movf	lcd_4bit_initialize@data_pin^0,w,c
  3930  00132A  181E               	xorwf	(??_lcd_4bit_initialize+2)^0,w,c
  3931  00132C  0BF8               	andlw	-8
  3932  00132E  181E               	xorwf	(??_lcd_4bit_initialize+2)^0,w,c
  3933  001330  6E23               	movwf	lcd_4bit_initialize@data_pin^0,c
  3934  001332  5020               	movf	lcd_4bit_initialize@local_index^0,w,c
  3935  001334  241A               	addwf	lcd_4bit_initialize@lcd_4bit^0,w,c
  3936  001336  6E1C               	movwf	??_lcd_4bit_initialize^0,c
  3937  001338  0E00               	movlw	0
  3938  00133A  201B               	addwfc	(lcd_4bit_initialize@lcd_4bit+1)^0,w,c
  3939  00133C  6E1D               	movwf	(??_lcd_4bit_initialize+1)^0,c
  3940  00133E  0E02               	movlw	2
  3941  001340  241C               	addwf	??_lcd_4bit_initialize^0,w,c
  3942  001342  6ED9               	movwf	fsr2l,c
  3943  001344  0E00               	movlw	0
  3944  001346  201D               	addwfc	(??_lcd_4bit_initialize+1)^0,w,c
  3945  001348  6EDA               	movwf	fsr2h,c
  3946  00134A  30DF               	rrcf	223,w,c
  3947  00134C  32E8               	rrcf	wreg,f,c
  3948  00134E  32E8               	rrcf	wreg,f,c
  3949  001350  0B07               	andlw	7
  3950  001352  6E1E               	movwf	(??_lcd_4bit_initialize+2)^0,c
  3951  001354  461E               	rlncf	(??_lcd_4bit_initialize+2)^0,f,c
  3952  001356  461E               	rlncf	(??_lcd_4bit_initialize+2)^0,f,c
  3953  001358  461E               	rlncf	(??_lcd_4bit_initialize+2)^0,f,c
  3954  00135A  5023               	movf	lcd_4bit_initialize@data_pin^0,w,c
  3955  00135C  181E               	xorwf	(??_lcd_4bit_initialize+2)^0,w,c
  3956  00135E  0BC7               	andlw	-57
  3957  001360  181E               	xorwf	(??_lcd_4bit_initialize+2)^0,w,c
  3958  001362  6E23               	movwf	lcd_4bit_initialize@data_pin^0,c
  3959  001364  9C23               	bcf	lcd_4bit_initialize@data_pin^0,6,c
  3960  001366  9E23               	bcf	lcd_4bit_initialize@data_pin^0,7,c
  3961  001368                     
  3962                           ;ECU/LCD/ecu_lcd.c: 45:             state &= gpio_pin_direction_initialize(&data_pin);
  3963  001368  0E23               	movlw	low lcd_4bit_initialize@data_pin
  3964  00136A  6E01               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
  3965  00136C  0E00               	movlw	high lcd_4bit_initialize@data_pin
  3966  00136E  6E02               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
  3967  001370  EC0D  F008         	call	_gpio_pin_direction_initialize	;wreg free
  3968  001374  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  3969  001376                     
  3970                           ;ECU/LCD/ecu_lcd.c: 46:         }
  3971  001376  2A20               	incf	lcd_4bit_initialize@local_index^0,f,c
  3972  001378  0E03               	movlw	3
  3973  00137A  6420               	cpfsgt	lcd_4bit_initialize@local_index^0,c
  3974  00137C  EFC2  F009         	goto	u2081
  3975  001380  EFC4  F009         	goto	u2080
  3976  001384                     u2081:
  3977  001384  EF83  F009         	goto	l452
  3978  001388                     u2080:
  3979  001388                     
  3980                           ;ECU/LCD/ecu_lcd.c: 47:         _delay((unsigned long)((20)*(8000000/4000.0)));
  3981  001388  0E34               	movlw	52
  3982  00138A  6E1C               	movwf	??_lcd_4bit_initialize^0,c
  3983  00138C  0EF2               	movlw	242
  3984  00138E                     u2847:
  3985  00138E  2EE8               	decfsz	wreg,f,c
  3986  001390  D7FE               	bra	u2847
  3987  001392  2E1C               	decfsz	??_lcd_4bit_initialize^0,f,c
  3988  001394  D7FC               	bra	u2847
  3989  001396                     
  3990                           ;ECU/LCD/ecu_lcd.c: 48:         state &= lcd_send_higher_nibble(lcd_4bit, 0x38);
  3991  001396  C01A  F014         	movff	lcd_4bit_initialize@lcd_4bit,lcd_send_higher_nibble@lcd_4bit
  3992  00139A  C01B  F015         	movff	lcd_4bit_initialize@lcd_4bit+1,lcd_send_higher_nibble@lcd_4bit+1
  3993  00139E  0E38               	movlw	56
  3994  0013A0  6E16               	movwf	lcd_send_higher_nibble@data^0,c
  3995  0013A2  EC08  F012         	call	_lcd_send_higher_nibble	;wreg free
  3996  0013A6  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  3997  0013A8                     
  3998                           ;ECU/LCD/ecu_lcd.c: 49:         _delay((unsigned long)((5)*(8000000/4000.0)));
  3999  0013A8  0E0D               	movlw	13
  4000  0013AA  6E1C               	movwf	??_lcd_4bit_initialize^0,c
  4001  0013AC  0EFC               	movlw	252
  4002  0013AE                     u2857:
  4003  0013AE  2EE8               	decfsz	wreg,f,c
  4004  0013B0  D7FE               	bra	u2857
  4005  0013B2  2E1C               	decfsz	??_lcd_4bit_initialize^0,f,c
  4006  0013B4  D7FC               	bra	u2857
  4007                           
  4008                           ;ECU/LCD/ecu_lcd.c: 50:         state &= lcd_send_higher_nibble(lcd_4bit, 0x38);
  4009  0013B6  C01A  F014         	movff	lcd_4bit_initialize@lcd_4bit,lcd_send_higher_nibble@lcd_4bit
  4010  0013BA  C01B  F015         	movff	lcd_4bit_initialize@lcd_4bit+1,lcd_send_higher_nibble@lcd_4bit+1
  4011  0013BE  0E38               	movlw	56
  4012  0013C0  6E16               	movwf	lcd_send_higher_nibble@data^0,c
  4013  0013C2  EC08  F012         	call	_lcd_send_higher_nibble	;wreg free
  4014  0013C6  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  4015  0013C8                     
  4016                           ;ECU/LCD/ecu_lcd.c: 51:         _delay((unsigned long)((150)*(8000000/4000000.0)));
  4017  0013C8  0E64               	movlw	100
  4018  0013CA                     u2867:
  4019  0013CA  2EE8               	decfsz	wreg,f,c
  4020  0013CC  D7FE               	bra	u2867
  4021  0013CE                     
  4022                           ;ECU/LCD/ecu_lcd.c: 52:         state &= lcd_send_higher_nibble(lcd_4bit, 0x38);
  4023  0013CE  C01A  F014         	movff	lcd_4bit_initialize@lcd_4bit,lcd_send_higher_nibble@lcd_4bit
  4024  0013D2  C01B  F015         	movff	lcd_4bit_initialize@lcd_4bit+1,lcd_send_higher_nibble@lcd_4bit+1
  4025  0013D6  0E38               	movlw	56
  4026  0013D8  6E16               	movwf	lcd_send_higher_nibble@data^0,c
  4027  0013DA  EC08  F012         	call	_lcd_send_higher_nibble	;wreg free
  4028  0013DE  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  4029  0013E0                     
  4030                           ;ECU/LCD/ecu_lcd.c: 53:         state &= lcd_send_higher_nibble(lcd_4bit, 0x28);
  4031  0013E0  C01A  F014         	movff	lcd_4bit_initialize@lcd_4bit,lcd_send_higher_nibble@lcd_4bit
  4032  0013E4  C01B  F015         	movff	lcd_4bit_initialize@lcd_4bit+1,lcd_send_higher_nibble@lcd_4bit+1
  4033  0013E8  0E28               	movlw	40
  4034  0013EA  6E16               	movwf	lcd_send_higher_nibble@data^0,c
  4035  0013EC  EC08  F012         	call	_lcd_send_higher_nibble	;wreg free
  4036  0013F0  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  4037  0013F2                     
  4038                           ;ECU/LCD/ecu_lcd.c: 55:         state &= lcd_4bit_send_command(lcd_4bit, 0x28);
  4039  0013F2  C01A  F014         	movff	lcd_4bit_initialize@lcd_4bit,lcd_4bit_send_command@lcd_4bit
  4040  0013F6  C01B  F015         	movff	lcd_4bit_initialize@lcd_4bit+1,lcd_4bit_send_command@lcd_4bit+1
  4041  0013FA  0E28               	movlw	40
  4042  0013FC  6E16               	movwf	lcd_4bit_send_command@command^0,c
  4043  0013FE  ECD4  F00F         	call	_lcd_4bit_send_command	;wreg free
  4044  001402  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  4045  001404                     
  4046                           ;ECU/LCD/ecu_lcd.c: 56:         state &= lcd_4bit_send_command(lcd_4bit, 0x01);
  4047  001404  C01A  F014         	movff	lcd_4bit_initialize@lcd_4bit,lcd_4bit_send_command@lcd_4bit
  4048  001408  C01B  F015         	movff	lcd_4bit_initialize@lcd_4bit+1,lcd_4bit_send_command@lcd_4bit+1
  4049  00140C  0E01               	movlw	1
  4050  00140E  6E16               	movwf	lcd_4bit_send_command@command^0,c
  4051  001410  ECD4  F00F         	call	_lcd_4bit_send_command	;wreg free
  4052  001414  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  4053  001416                     
  4054                           ;ECU/LCD/ecu_lcd.c: 57:         state &= lcd_4bit_send_command(lcd_4bit, 0x02);
  4055  001416  C01A  F014         	movff	lcd_4bit_initialize@lcd_4bit,lcd_4bit_send_command@lcd_4bit
  4056  00141A  C01B  F015         	movff	lcd_4bit_initialize@lcd_4bit+1,lcd_4bit_send_command@lcd_4bit+1
  4057  00141E  0E02               	movlw	2
  4058  001420  6E16               	movwf	lcd_4bit_send_command@command^0,c
  4059  001422  ECD4  F00F         	call	_lcd_4bit_send_command	;wreg free
  4060  001426  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  4061  001428                     
  4062                           ;ECU/LCD/ecu_lcd.c: 58:         state &= lcd_4bit_send_command(lcd_4bit, 0x0c);
  4063  001428  C01A  F014         	movff	lcd_4bit_initialize@lcd_4bit,lcd_4bit_send_command@lcd_4bit
  4064  00142C  C01B  F015         	movff	lcd_4bit_initialize@lcd_4bit+1,lcd_4bit_send_command@lcd_4bit+1
  4065  001430  0E0C               	movlw	12
  4066  001432  6E16               	movwf	lcd_4bit_send_command@command^0,c
  4067  001434  ECD4  F00F         	call	_lcd_4bit_send_command	;wreg free
  4068  001438  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  4069  00143A                     
  4070                           ;ECU/LCD/ecu_lcd.c: 59:         state &= lcd_4bit_send_command(lcd_4bit, 0x06);
  4071  00143A  C01A  F014         	movff	lcd_4bit_initialize@lcd_4bit,lcd_4bit_send_command@lcd_4bit
  4072  00143E  C01B  F015         	movff	lcd_4bit_initialize@lcd_4bit+1,lcd_4bit_send_command@lcd_4bit+1
  4073  001442  0E06               	movlw	6
  4074  001444  6E16               	movwf	lcd_4bit_send_command@command^0,c
  4075  001446  ECD4  F00F         	call	_lcd_4bit_send_command	;wreg free
  4076  00144A  161F               	andwf	lcd_4bit_initialize@state^0,f,c
  4077  00144C                     l3376:
  4078                           
  4079                           ;ECU/LCD/ecu_lcd.c: 74:     return state;
  4080  00144C  501F               	movf	lcd_4bit_initialize@state^0,w,c
  4081  00144E  0012               	return		;funcret
  4082  001450                     __end_of_lcd_4bit_initialize:
  4083                           	callstack 0
  4084                           
  4085 ;; *************** function _lcd_send_higher_nibble *****************
  4086 ;; Defined at:
  4087 ;;		line 444 in file "ECU/LCD/ecu_lcd.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  lcd_4bit        2   19[COMRAM] PTR const struct .
  4090 ;;		 -> lcd_4bit(6), 
  4091 ;;  data            1   21[COMRAM] unsigned char 
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;  rs_pin          1   24[COMRAM] struct .
  4094 ;;  state           1   23[COMRAM] unsigned char 
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  1    wreg      unsigned char 
  4097 ;; Registers used:
  4098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4104 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4105 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4106 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4107 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4108 ;;Total ram usage:        6 bytes
  4109 ;; Hardware stack levels used: 1
  4110 ;; Hardware stack levels required when called: 2
  4111 ;; This function calls:
  4112 ;;		_gpio_pin_write_logic
  4113 ;;		_lcd_4bit_send_enable_signal
  4114 ;;		_lcd_send_4bits
  4115 ;; This function is called by:
  4116 ;;		_lcd_4bit_initialize
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text21
  4121  002410                     __ptext21:
  4122                           	callstack 0
  4123  002410                     _lcd_send_higher_nibble:
  4124                           	callstack 26
  4125  002410                     
  4126                           ;ECU/LCD/ecu_lcd.c: 444: static Std_ReturnType lcd_send_higher_nibble(const lcd_4bit_t* 
      +                          lcd_4bit, uint8 data);ECU/LCD/ecu_lcd.c: 445: {;ECU/LCD/ecu_lcd.c: 446:     Std_ReturnTy
      +                          pe state = (Std_ReturnType)1;
  4127  002410  0E01               	movlw	1
  4128  002412  6E18               	movwf	lcd_send_higher_nibble@state^0,c
  4129  002414                     
  4130                           ;ECU/LCD/ecu_lcd.c: 447:     if(lcd_4bit == ((void*)0)) return (Std_ReturnType)0;
  4131  002414  5014               	movf	lcd_send_higher_nibble@lcd_4bit^0,w,c
  4132  002416  1015               	iorwf	(lcd_send_higher_nibble@lcd_4bit+1)^0,w,c
  4133  002418  A4D8               	btfss	status,2,c
  4134  00241A  EF11  F012         	goto	u1691
  4135  00241E  EF13  F012         	goto	u1690
  4136  002422                     u1691:
  4137  002422  EF16  F012         	goto	l618
  4138  002426                     u1690:
  4139  002426  0E00               	movlw	0
  4140  002428  EF51  F012         	goto	l619
  4141  00242C                     l618:
  4142                           
  4143                           ;ECU/LCD/ecu_lcd.c: 449:     pin_config_t rs_pin = {
  4144  00242C  C04E  F019         	movff	lcd_send_higher_nibble@F3102,lcd_send_higher_nibble@rs_pin
  4145  002430  C014  FFD9         	movff	lcd_send_higher_nibble@lcd_4bit,fsr2l
  4146  002434  C015  FFDA         	movff	lcd_send_higher_nibble@lcd_4bit+1,fsr2h
  4147  002438  50DF               	movf	223,w,c
  4148  00243A  0B07               	andlw	7
  4149  00243C  6E17               	movwf	??_lcd_send_higher_nibble^0,c
  4150  00243E  5019               	movf	lcd_send_higher_nibble@rs_pin^0,w,c
  4151  002440  1817               	xorwf	??_lcd_send_higher_nibble^0,w,c
  4152  002442  0BF8               	andlw	-8
  4153  002444  1817               	xorwf	??_lcd_send_higher_nibble^0,w,c
  4154  002446  6E19               	movwf	lcd_send_higher_nibble@rs_pin^0,c
  4155  002448  C014  FFD9         	movff	lcd_send_higher_nibble@lcd_4bit,fsr2l
  4156  00244C  C015  FFDA         	movff	lcd_send_higher_nibble@lcd_4bit+1,fsr2h
  4157  002450  30DF               	rrcf	223,w,c
  4158  002452  32E8               	rrcf	wreg,f,c
  4159  002454  32E8               	rrcf	wreg,f,c
  4160  002456  0B07               	andlw	7
  4161  002458  6E17               	movwf	??_lcd_send_higher_nibble^0,c
  4162  00245A  4617               	rlncf	??_lcd_send_higher_nibble^0,f,c
  4163  00245C  4617               	rlncf	??_lcd_send_higher_nibble^0,f,c
  4164  00245E  4617               	rlncf	??_lcd_send_higher_nibble^0,f,c
  4165  002460  5019               	movf	lcd_send_higher_nibble@rs_pin^0,w,c
  4166  002462  1817               	xorwf	??_lcd_send_higher_nibble^0,w,c
  4167  002464  0BC7               	andlw	-57
  4168  002466  1817               	xorwf	??_lcd_send_higher_nibble^0,w,c
  4169  002468  6E19               	movwf	lcd_send_higher_nibble@rs_pin^0,c
  4170  00246A  9C19               	bcf	lcd_send_higher_nibble@rs_pin^0,6,c
  4171  00246C  9E19               	bcf	lcd_send_higher_nibble@rs_pin^0,7,c
  4172  00246E                     
  4173                           ;ECU/LCD/ecu_lcd.c: 455:     gpio_pin_write_logic(&rs_pin, GPIO_LOW);
  4174  00246E  0E19               	movlw	low lcd_send_higher_nibble@rs_pin
  4175  002470  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4176  002472  0E00               	movlw	high lcd_send_higher_nibble@rs_pin
  4177  002474  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4178  002476  0E00               	movlw	0
  4179  002478  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4180  00247A  ECD9  F00C         	call	_gpio_pin_write_logic	;wreg free
  4181  00247E                     
  4182                           ;ECU/LCD/ecu_lcd.c: 457:     state &= lcd_send_4bits(lcd_4bit, data >> 4);
  4183  00247E  C014  F00B         	movff	lcd_send_higher_nibble@lcd_4bit,lcd_send_4bits@lcd_4bit
  4184  002482  C015  F00C         	movff	lcd_send_higher_nibble@lcd_4bit+1,lcd_send_4bits@lcd_4bit+1
  4185  002486  3816               	swapf	lcd_send_higher_nibble@data^0,w,c
  4186  002488  0B0F               	andlw	15
  4187  00248A  6E0D               	movwf	lcd_send_4bits@data_or_command^0,c
  4188  00248C  EC17  F00F         	call	_lcd_send_4bits	;wreg free
  4189  002490  1618               	andwf	lcd_send_higher_nibble@state^0,f,c
  4190  002492                     
  4191                           ;ECU/LCD/ecu_lcd.c: 458:     state &= lcd_4bit_send_enable_signal(lcd_4bit);
  4192  002492  C014  F00B         	movff	lcd_send_higher_nibble@lcd_4bit,lcd_4bit_send_enable_signal@lcd_4bit
  4193  002496  C015  F00C         	movff	lcd_send_higher_nibble@lcd_4bit+1,lcd_4bit_send_enable_signal@lcd_4bit+1
  4194  00249A  EC83  F010         	call	_lcd_4bit_send_enable_signal	;wreg free
  4195  00249E  1618               	andwf	lcd_send_higher_nibble@state^0,f,c
  4196  0024A0                     
  4197                           ;ECU/LCD/ecu_lcd.c: 459:     return state;
  4198  0024A0  5018               	movf	lcd_send_higher_nibble@state^0,w,c
  4199  0024A2                     l619:
  4200  0024A2  0012               	return		;funcret
  4201  0024A4                     __end_of_lcd_send_higher_nibble:
  4202                           	callstack 0
  4203                           
  4204 ;; *************** function _lcd_4bit_send_command *****************
  4205 ;; Defined at:
  4206 ;;		line 77 in file "ECU/LCD/ecu_lcd.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;  lcd_4bit        2   19[COMRAM] PTR const struct .
  4209 ;;		 -> lcd_4bit(6), 
  4210 ;;  command         1   21[COMRAM] const unsigned char 
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;  rs_pin          1   24[COMRAM] struct .
  4213 ;;  state           1   23[COMRAM] unsigned char 
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  1    wreg      unsigned char 
  4216 ;; Registers used:
  4217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4223 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4224 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4225 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4226 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;Total ram usage:        6 bytes
  4228 ;; Hardware stack levels used: 1
  4229 ;; Hardware stack levels required when called: 2
  4230 ;; This function calls:
  4231 ;;		_gpio_pin_write_logic
  4232 ;;		_lcd_4bit_send_enable_signal
  4233 ;;		_lcd_send_4bits
  4234 ;; This function is called by:
  4235 ;;		_lcd_4bit_initialize
  4236 ;;		_lcd_4bit_set_position
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           	psect	text22
  4241  001FA8                     __ptext22:
  4242                           	callstack 0
  4243  001FA8                     _lcd_4bit_send_command:
  4244                           	callstack 26
  4245  001FA8                     
  4246                           ;ECU/LCD/ecu_lcd.c: 77: Std_ReturnType lcd_4bit_send_command(const lcd_4bit_t* lcd_4bit,
      +                           const uint8 command);ECU/LCD/ecu_lcd.c: 78: {;ECU/LCD/ecu_lcd.c: 79:     Std_ReturnType
      +                           state = (Std_ReturnType)1;
  4247  001FA8  0E01               	movlw	1
  4248  001FAA  6E18               	movwf	lcd_4bit_send_command@state^0,c
  4249  001FAC                     
  4250                           ;ECU/LCD/ecu_lcd.c: 80:     if(lcd_4bit == ((void*)0))
  4251  001FAC  5014               	movf	lcd_4bit_send_command@lcd_4bit^0,w,c
  4252  001FAE  1015               	iorwf	(lcd_4bit_send_command@lcd_4bit+1)^0,w,c
  4253  001FB0  A4D8               	btfss	status,2,c
  4254  001FB2  EFDD  F00F         	goto	u1561
  4255  001FB6  EFDF  F00F         	goto	u1560
  4256  001FBA                     u1561:
  4257  001FBA  EFE3  F00F         	goto	l459
  4258  001FBE                     u1560:
  4259  001FBE                     
  4260                           ;ECU/LCD/ecu_lcd.c: 81:     {;ECU/LCD/ecu_lcd.c: 82:         state = (Std_ReturnType)0;
  4261  001FBE  0E00               	movlw	0
  4262  001FC0  6E18               	movwf	lcd_4bit_send_command@state^0,c
  4263                           
  4264                           ;ECU/LCD/ecu_lcd.c: 83:     }
  4265  001FC2  EF2E  F010         	goto	l2942
  4266  001FC6                     l459:
  4267                           
  4268                           ;ECU/LCD/ecu_lcd.c: 85:     {;ECU/LCD/ecu_lcd.c: 86:         pin_config_t rs_pin={.port=
      +                          lcd_4bit->lcd_rs_pin.port,.pin=lcd_4bit->lcd_rs_pin.pin,.direction=GPIO_OUTPUT,.logic=GP
      +                          IO_LOW};
  4269  001FC6  C055  F019         	movff	lcd_4bit_send_command@F2984,lcd_4bit_send_command@rs_pin
  4270  001FCA  C014  FFD9         	movff	lcd_4bit_send_command@lcd_4bit,fsr2l
  4271  001FCE  C015  FFDA         	movff	lcd_4bit_send_command@lcd_4bit+1,fsr2h
  4272  001FD2  50DF               	movf	223,w,c
  4273  001FD4  0B07               	andlw	7
  4274  001FD6  6E17               	movwf	??_lcd_4bit_send_command^0,c
  4275  001FD8  5019               	movf	lcd_4bit_send_command@rs_pin^0,w,c
  4276  001FDA  1817               	xorwf	??_lcd_4bit_send_command^0,w,c
  4277  001FDC  0BF8               	andlw	-8
  4278  001FDE  1817               	xorwf	??_lcd_4bit_send_command^0,w,c
  4279  001FE0  6E19               	movwf	lcd_4bit_send_command@rs_pin^0,c
  4280  001FE2  C014  FFD9         	movff	lcd_4bit_send_command@lcd_4bit,fsr2l
  4281  001FE6  C015  FFDA         	movff	lcd_4bit_send_command@lcd_4bit+1,fsr2h
  4282  001FEA  30DF               	rrcf	223,w,c
  4283  001FEC  32E8               	rrcf	wreg,f,c
  4284  001FEE  32E8               	rrcf	wreg,f,c
  4285  001FF0  0B07               	andlw	7
  4286  001FF2  6E17               	movwf	??_lcd_4bit_send_command^0,c
  4287  001FF4  4617               	rlncf	??_lcd_4bit_send_command^0,f,c
  4288  001FF6  4617               	rlncf	??_lcd_4bit_send_command^0,f,c
  4289  001FF8  4617               	rlncf	??_lcd_4bit_send_command^0,f,c
  4290  001FFA  5019               	movf	lcd_4bit_send_command@rs_pin^0,w,c
  4291  001FFC  1817               	xorwf	??_lcd_4bit_send_command^0,w,c
  4292  001FFE  0BC7               	andlw	-57
  4293  002000  1817               	xorwf	??_lcd_4bit_send_command^0,w,c
  4294  002002  6E19               	movwf	lcd_4bit_send_command@rs_pin^0,c
  4295  002004  9C19               	bcf	lcd_4bit_send_command@rs_pin^0,6,c
  4296  002006  9E19               	bcf	lcd_4bit_send_command@rs_pin^0,7,c
  4297  002008                     
  4298                           ;ECU/LCD/ecu_lcd.c: 87:         state &= gpio_pin_write_logic(&rs_pin,GPIO_LOW);
  4299  002008  0E19               	movlw	low lcd_4bit_send_command@rs_pin
  4300  00200A  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4301  00200C  0E00               	movlw	high lcd_4bit_send_command@rs_pin
  4302  00200E  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4303  002010  0E00               	movlw	0
  4304  002012  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4305  002014  ECD9  F00C         	call	_gpio_pin_write_logic	;wreg free
  4306  002018  1618               	andwf	lcd_4bit_send_command@state^0,f,c
  4307  00201A                     
  4308                           ;ECU/LCD/ecu_lcd.c: 89:         state &= lcd_send_4bits(lcd_4bit,command >> 4);
  4309  00201A  C014  F00B         	movff	lcd_4bit_send_command@lcd_4bit,lcd_send_4bits@lcd_4bit
  4310  00201E  C015  F00C         	movff	lcd_4bit_send_command@lcd_4bit+1,lcd_send_4bits@lcd_4bit+1
  4311  002022  3816               	swapf	lcd_4bit_send_command@command^0,w,c
  4312  002024  0B0F               	andlw	15
  4313  002026  6E0D               	movwf	lcd_send_4bits@data_or_command^0,c
  4314  002028  EC17  F00F         	call	_lcd_send_4bits	;wreg free
  4315  00202C  1618               	andwf	lcd_4bit_send_command@state^0,f,c
  4316  00202E                     
  4317                           ;ECU/LCD/ecu_lcd.c: 90:         state &= lcd_4bit_send_enable_signal(lcd_4bit);
  4318  00202E  C014  F00B         	movff	lcd_4bit_send_command@lcd_4bit,lcd_4bit_send_enable_signal@lcd_4bit
  4319  002032  C015  F00C         	movff	lcd_4bit_send_command@lcd_4bit+1,lcd_4bit_send_enable_signal@lcd_4bit+1
  4320  002036  EC83  F010         	call	_lcd_4bit_send_enable_signal	;wreg free
  4321  00203A  1618               	andwf	lcd_4bit_send_command@state^0,f,c
  4322  00203C                     
  4323                           ;ECU/LCD/ecu_lcd.c: 91:         state &= lcd_send_4bits(lcd_4bit,command);
  4324  00203C  C014  F00B         	movff	lcd_4bit_send_command@lcd_4bit,lcd_send_4bits@lcd_4bit
  4325  002040  C015  F00C         	movff	lcd_4bit_send_command@lcd_4bit+1,lcd_send_4bits@lcd_4bit+1
  4326  002044  C016  F00D         	movff	lcd_4bit_send_command@command,lcd_send_4bits@data_or_command
  4327  002048  EC17  F00F         	call	_lcd_send_4bits	;wreg free
  4328  00204C  1618               	andwf	lcd_4bit_send_command@state^0,f,c
  4329  00204E                     
  4330                           ;ECU/LCD/ecu_lcd.c: 92:         state &= lcd_4bit_send_enable_signal(lcd_4bit);
  4331  00204E  C014  F00B         	movff	lcd_4bit_send_command@lcd_4bit,lcd_4bit_send_enable_signal@lcd_4bit
  4332  002052  C015  F00C         	movff	lcd_4bit_send_command@lcd_4bit+1,lcd_4bit_send_enable_signal@lcd_4bit+1
  4333  002056  EC83  F010         	call	_lcd_4bit_send_enable_signal	;wreg free
  4334  00205A  1618               	andwf	lcd_4bit_send_command@state^0,f,c
  4335  00205C                     l2942:
  4336                           
  4337                           ;ECU/LCD/ecu_lcd.c: 94:     return state;
  4338  00205C  5018               	movf	lcd_4bit_send_command@state^0,w,c
  4339  00205E  0012               	return		;funcret
  4340  002060                     __end_of_lcd_4bit_send_command:
  4341                           	callstack 0
  4342                           
  4343 ;; *************** function _lcd_send_4bits *****************
  4344 ;; Defined at:
  4345 ;;		line 463 in file "ECU/LCD/ecu_lcd.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;  lcd_4bit        2   10[COMRAM] PTR const struct .
  4348 ;;		 -> lcd_4bit(6), 
  4349 ;;  data_or_comm    1   12[COMRAM] unsigned char 
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;  data_pin        1   17[COMRAM] struct .
  4352 ;;  local_index     1   18[COMRAM] unsigned char 
  4353 ;;  state           1   16[COMRAM] unsigned char 
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      unsigned char 
  4356 ;; Registers used:
  4357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4363 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4364 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4365 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4366 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4367 ;;Total ram usage:        9 bytes
  4368 ;; Hardware stack levels used: 1
  4369 ;; Hardware stack levels required when called: 1
  4370 ;; This function calls:
  4371 ;;		_gpio_pin_write_logic
  4372 ;; This function is called by:
  4373 ;;		_lcd_4bit_send_command
  4374 ;;		_lcd_4bit_send_char_data
  4375 ;;		_lcd_send_higher_nibble
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           	psect	text23
  4380  001E2E                     __ptext23:
  4381                           	callstack 0
  4382  001E2E                     _lcd_send_4bits:
  4383                           	callstack 26
  4384  001E2E                     
  4385                           ;ECU/LCD/ecu_lcd.c: 463: static Std_ReturnType lcd_send_4bits(const lcd_4bit_t *lcd_4bit
      +                          , uint8 data_or_command);ECU/LCD/ecu_lcd.c: 464: {;ECU/LCD/ecu_lcd.c: 465:     Std_Retur
      +                          nType state = (Std_ReturnType)1;
  4386  001E2E  0E01               	movlw	1
  4387  001E30  6E11               	movwf	lcd_send_4bits@state^0,c
  4388  001E32                     
  4389                           ;ECU/LCD/ecu_lcd.c: 466:     if(lcd_4bit == ((void*)0))
  4390  001E32  500B               	movf	lcd_send_4bits@lcd_4bit^0,w,c
  4391  001E34  100C               	iorwf	(lcd_send_4bits@lcd_4bit+1)^0,w,c
  4392  001E36  A4D8               	btfss	status,2,c
  4393  001E38  EF20  F00F         	goto	u1481
  4394  001E3C  EF22  F00F         	goto	u1480
  4395  001E40                     u1481:
  4396  001E40  EF26  F00F         	goto	l2830
  4397  001E44                     u1480:
  4398  001E44                     
  4399                           ;ECU/LCD/ecu_lcd.c: 467:     {;ECU/LCD/ecu_lcd.c: 468:         state = (Std_ReturnType)0
      +                          ;
  4400  001E44  0E00               	movlw	0
  4401  001E46  6E11               	movwf	lcd_send_4bits@state^0,c
  4402                           
  4403                           ;ECU/LCD/ecu_lcd.c: 469:     }
  4404  001E48  EF76  F00F         	goto	l2844
  4405  001E4C                     l2830:
  4406                           
  4407                           ;ECU/LCD/ecu_lcd.c: 471:     {;ECU/LCD/ecu_lcd.c: 472:         for(uint8 local_index=0; 
      +                          local_index<4; local_index++)
  4408  001E4C  0E00               	movlw	0
  4409  001E4E  6E13               	movwf	lcd_send_4bits@local_index^0,c
  4410  001E50                     l626:
  4411                           
  4412                           ;ECU/LCD/ecu_lcd.c: 473:         {;ECU/LCD/ecu_lcd.c: 474:             pin_config_t data
      +                          _pin = {.port = lcd_4bit->lcd_data_pins[local_index].port,
  4413  001E50  C04D  F012         	movff	lcd_send_4bits@F3109,lcd_send_4bits@data_pin
  4414  001E54  5013               	movf	lcd_send_4bits@local_index^0,w,c
  4415  001E56  240B               	addwf	lcd_send_4bits@lcd_4bit^0,w,c
  4416  001E58  6E0E               	movwf	??_lcd_send_4bits^0,c
  4417  001E5A  0E00               	movlw	0
  4418  001E5C  200C               	addwfc	(lcd_send_4bits@lcd_4bit+1)^0,w,c
  4419  001E5E  6E0F               	movwf	(??_lcd_send_4bits+1)^0,c
  4420  001E60  0E02               	movlw	2
  4421  001E62  240E               	addwf	??_lcd_send_4bits^0,w,c
  4422  001E64  6ED9               	movwf	fsr2l,c
  4423  001E66  0E00               	movlw	0
  4424  001E68  200F               	addwfc	(??_lcd_send_4bits+1)^0,w,c
  4425  001E6A  6EDA               	movwf	fsr2h,c
  4426  001E6C  50DF               	movf	223,w,c
  4427  001E6E  0B07               	andlw	7
  4428  001E70  6E10               	movwf	(??_lcd_send_4bits+2)^0,c
  4429  001E72  5012               	movf	lcd_send_4bits@data_pin^0,w,c
  4430  001E74  1810               	xorwf	(??_lcd_send_4bits+2)^0,w,c
  4431  001E76  0BF8               	andlw	-8
  4432  001E78  1810               	xorwf	(??_lcd_send_4bits+2)^0,w,c
  4433  001E7A  6E12               	movwf	lcd_send_4bits@data_pin^0,c
  4434  001E7C  5013               	movf	lcd_send_4bits@local_index^0,w,c
  4435  001E7E  240B               	addwf	lcd_send_4bits@lcd_4bit^0,w,c
  4436  001E80  6E0E               	movwf	??_lcd_send_4bits^0,c
  4437  001E82  0E00               	movlw	0
  4438  001E84  200C               	addwfc	(lcd_send_4bits@lcd_4bit+1)^0,w,c
  4439  001E86  6E0F               	movwf	(??_lcd_send_4bits+1)^0,c
  4440  001E88  0E02               	movlw	2
  4441  001E8A  240E               	addwf	??_lcd_send_4bits^0,w,c
  4442  001E8C  6ED9               	movwf	fsr2l,c
  4443  001E8E  0E00               	movlw	0
  4444  001E90  200F               	addwfc	(??_lcd_send_4bits+1)^0,w,c
  4445  001E92  6EDA               	movwf	fsr2h,c
  4446  001E94  30DF               	rrcf	223,w,c
  4447  001E96  32E8               	rrcf	wreg,f,c
  4448  001E98  32E8               	rrcf	wreg,f,c
  4449  001E9A  0B07               	andlw	7
  4450  001E9C  6E10               	movwf	(??_lcd_send_4bits+2)^0,c
  4451  001E9E  4610               	rlncf	(??_lcd_send_4bits+2)^0,f,c
  4452  001EA0  4610               	rlncf	(??_lcd_send_4bits+2)^0,f,c
  4453  001EA2  4610               	rlncf	(??_lcd_send_4bits+2)^0,f,c
  4454  001EA4  5012               	movf	lcd_send_4bits@data_pin^0,w,c
  4455  001EA6  1810               	xorwf	(??_lcd_send_4bits+2)^0,w,c
  4456  001EA8  0BC7               	andlw	-57
  4457  001EAA  1810               	xorwf	(??_lcd_send_4bits+2)^0,w,c
  4458  001EAC  6E12               	movwf	lcd_send_4bits@data_pin^0,c
  4459  001EAE                     
  4460                           ;ECU/LCD/ecu_lcd.c: 476:             state &= gpio_pin_write_logic(&data_pin, (data_or_c
      +                          ommand >> local_index) & 0x01);
  4461  001EAE  0E12               	movlw	low lcd_send_4bits@data_pin
  4462  001EB0  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4463  001EB2  0E00               	movlw	high lcd_send_4bits@data_pin
  4464  001EB4  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4465  001EB6  C013  F00E         	movff	lcd_send_4bits@local_index,??_lcd_send_4bits
  4466  001EBA  C00D  F00F         	movff	lcd_send_4bits@data_or_command,??_lcd_send_4bits+1
  4467  001EBE  2A0E               	incf	??_lcd_send_4bits^0,f,c
  4468  001EC0  EF64  F00F         	goto	u1494
  4469  001EC4                     u1495:
  4470  001EC4  90D8               	bcf	status,0,c
  4471  001EC6  320F               	rrcf	(??_lcd_send_4bits+1)^0,f,c
  4472  001EC8                     u1494:
  4473  001EC8  2E0E               	decfsz	??_lcd_send_4bits^0,f,c
  4474  001ECA  EF62  F00F         	goto	u1495
  4475  001ECE  500F               	movf	(??_lcd_send_4bits+1)^0,w,c
  4476  001ED0  0B01               	andlw	1
  4477  001ED2  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4478  001ED4  ECD9  F00C         	call	_gpio_pin_write_logic	;wreg free
  4479  001ED8  1611               	andwf	lcd_send_4bits@state^0,f,c
  4480  001EDA                     
  4481                           ;ECU/LCD/ecu_lcd.c: 477:         }
  4482  001EDA  2A13               	incf	lcd_send_4bits@local_index^0,f,c
  4483  001EDC  0E03               	movlw	3
  4484  001EDE  6413               	cpfsgt	lcd_send_4bits@local_index^0,c
  4485  001EE0  EF74  F00F         	goto	u1501
  4486  001EE4  EF76  F00F         	goto	u1500
  4487  001EE8                     u1501:
  4488  001EE8  EF28  F00F         	goto	l626
  4489  001EEC                     u1500:
  4490  001EEC                     l2844:
  4491                           
  4492                           ;ECU/LCD/ecu_lcd.c: 479:     return state;
  4493  001EEC  5011               	movf	lcd_send_4bits@state^0,w,c
  4494  001EEE  0012               	return		;funcret
  4495  001EF0                     __end_of_lcd_send_4bits:
  4496                           	callstack 0
  4497                           
  4498 ;; *************** function _lcd_4bit_send_enable_signal *****************
  4499 ;; Defined at:
  4500 ;;		line 482 in file "ECU/LCD/ecu_lcd.c"
  4501 ;; Parameters:    Size  Location     Type
  4502 ;;  lcd_4bit        2   10[COMRAM] PTR const struct .
  4503 ;;		 -> lcd_4bit(6), 
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;  en_pin          1   14[COMRAM] struct .
  4506 ;;  state           1   13[COMRAM] unsigned char 
  4507 ;; Return value:  Size  Location     Type
  4508 ;;                  1    wreg      unsigned char 
  4509 ;; Registers used:
  4510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4511 ;; Tracked objects:
  4512 ;;		On entry : 0/0
  4513 ;;		On exit  : 0/0
  4514 ;;		Unchanged: 0/0
  4515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4516 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4517 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4518 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4519 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4520 ;;Total ram usage:        5 bytes
  4521 ;; Hardware stack levels used: 1
  4522 ;; Hardware stack levels required when called: 1
  4523 ;; This function calls:
  4524 ;;		_gpio_pin_write_logic
  4525 ;; This function is called by:
  4526 ;;		_lcd_4bit_send_command
  4527 ;;		_lcd_4bit_send_char_data
  4528 ;;		_lcd_send_higher_nibble
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532                           	psect	text24
  4533  002106                     __ptext24:
  4534                           	callstack 0
  4535  002106                     _lcd_4bit_send_enable_signal:
  4536                           	callstack 26
  4537  002106                     
  4538                           ;ECU/LCD/ecu_lcd.c: 482: static Std_ReturnType lcd_4bit_send_enable_signal(const lcd_4bi
      +                          t_t *lcd_4bit);ECU/LCD/ecu_lcd.c: 483: {;ECU/LCD/ecu_lcd.c: 484:     Std_ReturnType stat
      +                          e = (Std_ReturnType)1;
  4539  002106  0E01               	movlw	1
  4540  002108  6E0E               	movwf	lcd_4bit_send_enable_signal@state^0,c
  4541  00210A                     
  4542                           ;ECU/LCD/ecu_lcd.c: 485:     if(lcd_4bit == ((void*)0))
  4543  00210A  500B               	movf	lcd_4bit_send_enable_signal@lcd_4bit^0,w,c
  4544  00210C  100C               	iorwf	(lcd_4bit_send_enable_signal@lcd_4bit+1)^0,w,c
  4545  00210E  A4D8               	btfss	status,2,c
  4546  002110  EF8C  F010         	goto	u1511
  4547  002114  EF8E  F010         	goto	u1510
  4548  002118                     u1511:
  4549  002118  EF92  F010         	goto	l633
  4550  00211C                     u1510:
  4551  00211C                     
  4552                           ;ECU/LCD/ecu_lcd.c: 486:     {;ECU/LCD/ecu_lcd.c: 487:         state = (Std_ReturnType)0
      +                          ;
  4553  00211C  0E00               	movlw	0
  4554  00211E  6E0E               	movwf	lcd_4bit_send_enable_signal@state^0,c
  4555                           
  4556                           ;ECU/LCD/ecu_lcd.c: 488:     }
  4557  002120  EFD4  F010         	goto	l2868
  4558  002124                     l633:
  4559                           
  4560                           ;ECU/LCD/ecu_lcd.c: 490:     {;ECU/LCD/ecu_lcd.c: 491:         pin_config_t en_pin={.por
      +                          t=lcd_4bit->lcd_en_pin.port,.pin=lcd_4bit->lcd_en_pin.pin,.direction=GPIO_OUTPUT,.logic=
      +                          GPIO_LOW};
  4561  002124  C04C  F00F         	movff	lcd_4bit_send_enable_signal@F3114,lcd_4bit_send_enable_signal@en_pin
  4562  002128  EE20 F001          	lfsr	2,1
  4563  00212C  500B               	movf	lcd_4bit_send_enable_signal@lcd_4bit^0,w,c
  4564  00212E  26D9               	addwf	fsr2l,f,c
  4565  002130  500C               	movf	(lcd_4bit_send_enable_signal@lcd_4bit+1)^0,w,c
  4566  002132  22DA               	addwfc	fsr2h,f,c
  4567  002134  50DF               	movf	223,w,c
  4568  002136  0B07               	andlw	7
  4569  002138  6E0D               	movwf	??_lcd_4bit_send_enable_signal^0,c
  4570  00213A  500F               	movf	lcd_4bit_send_enable_signal@en_pin^0,w,c
  4571  00213C  180D               	xorwf	??_lcd_4bit_send_enable_signal^0,w,c
  4572  00213E  0BF8               	andlw	-8
  4573  002140  180D               	xorwf	??_lcd_4bit_send_enable_signal^0,w,c
  4574  002142  6E0F               	movwf	lcd_4bit_send_enable_signal@en_pin^0,c
  4575  002144  EE20 F001          	lfsr	2,1
  4576  002148  500B               	movf	lcd_4bit_send_enable_signal@lcd_4bit^0,w,c
  4577  00214A  26D9               	addwf	fsr2l,f,c
  4578  00214C  500C               	movf	(lcd_4bit_send_enable_signal@lcd_4bit+1)^0,w,c
  4579  00214E  22DA               	addwfc	fsr2h,f,c
  4580  002150  30DF               	rrcf	223,w,c
  4581  002152  32E8               	rrcf	wreg,f,c
  4582  002154  32E8               	rrcf	wreg,f,c
  4583  002156  0B07               	andlw	7
  4584  002158  6E0D               	movwf	??_lcd_4bit_send_enable_signal^0,c
  4585  00215A  460D               	rlncf	??_lcd_4bit_send_enable_signal^0,f,c
  4586  00215C  460D               	rlncf	??_lcd_4bit_send_enable_signal^0,f,c
  4587  00215E  460D               	rlncf	??_lcd_4bit_send_enable_signal^0,f,c
  4588  002160  500F               	movf	lcd_4bit_send_enable_signal@en_pin^0,w,c
  4589  002162  180D               	xorwf	??_lcd_4bit_send_enable_signal^0,w,c
  4590  002164  0BC7               	andlw	-57
  4591  002166  180D               	xorwf	??_lcd_4bit_send_enable_signal^0,w,c
  4592  002168  6E0F               	movwf	lcd_4bit_send_enable_signal@en_pin^0,c
  4593  00216A  9C0F               	bcf	lcd_4bit_send_enable_signal@en_pin^0,6,c
  4594  00216C  9E0F               	bcf	lcd_4bit_send_enable_signal@en_pin^0,7,c
  4595  00216E                     
  4596                           ;ECU/LCD/ecu_lcd.c: 492:         state &= gpio_pin_write_logic(&en_pin,GPIO_HIGH);
  4597  00216E  0E0F               	movlw	low lcd_4bit_send_enable_signal@en_pin
  4598  002170  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4599  002172  0E00               	movlw	high lcd_4bit_send_enable_signal@en_pin
  4600  002174  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4601  002176  0E01               	movlw	1
  4602  002178  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4603  00217A  ECD9  F00C         	call	_gpio_pin_write_logic	;wreg free
  4604  00217E  160E               	andwf	lcd_4bit_send_enable_signal@state^0,f,c
  4605  002180                     
  4606                           ;ECU/LCD/ecu_lcd.c: 493:         _delay((unsigned long)((1)*(8000000/4000.0)));
  4607  002180  0E03               	movlw	3
  4608  002182  6E0D               	movwf	??_lcd_4bit_send_enable_signal^0,c
  4609  002184  0E98               	movlw	152
  4610  002186                     u2877:
  4611  002186  2EE8               	decfsz	wreg,f,c
  4612  002188  D7FE               	bra	u2877
  4613  00218A  2E0D               	decfsz	??_lcd_4bit_send_enable_signal^0,f,c
  4614  00218C  D7FC               	bra	u2877
  4615  00218E                     
  4616                           ;ECU/LCD/ecu_lcd.c: 494:         state &= gpio_pin_write_logic(&en_pin,GPIO_LOW);
  4617  00218E  0E0F               	movlw	low lcd_4bit_send_enable_signal@en_pin
  4618  002190  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4619  002192  0E00               	movlw	high lcd_4bit_send_enable_signal@en_pin
  4620  002194  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4621  002196  0E00               	movlw	0
  4622  002198  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4623  00219A  ECD9  F00C         	call	_gpio_pin_write_logic	;wreg free
  4624  00219E  160E               	andwf	lcd_4bit_send_enable_signal@state^0,f,c
  4625  0021A0                     
  4626                           ;ECU/LCD/ecu_lcd.c: 495:         _delay((unsigned long)((100)*(8000000/4000000.0)));
  4627  0021A0  0E42               	movlw	66
  4628  0021A2                     u2887:
  4629  0021A2  2EE8               	decfsz	wreg,f,c
  4630  0021A4  D7FE               	bra	u2887
  4631  0021A6  D000               	nop2	
  4632  0021A8                     l2868:
  4633                           
  4634                           ;ECU/LCD/ecu_lcd.c: 497:     return state;
  4635  0021A8  500E               	movf	lcd_4bit_send_enable_signal@state^0,w,c
  4636  0021AA  0012               	return		;funcret
  4637  0021AC                     __end_of_lcd_4bit_send_enable_signal:
  4638                           	callstack 0
  4639                           
  4640 ;; *************** function _gpio_pin_write_logic *****************
  4641 ;; Defined at:
  4642 ;;		line 63 in file "MCAL/GPIO/hal_gpio.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  4645 ;;		 -> lcd_8bit_send_enable_signal@en_pin(1), lcd_send_8bits@data_pin(1), lcd_4bit_send_enable_signal@en_pin(1), lcd_se
      +nd_4bits@data_pin(1), 
  4646 ;;		 -> lcd_send_higher_nibble@rs_pin(1), lcd_8bit_send_char_data@rs_pin(1), lcd_8bit_send_command@rs_pin(1), lcd_4bit_s
      +end_char_data@rs_pin(1), 
  4647 ;;		 -> lcd_4bit_send_command@rs_pin(1), rgb_led_turn_off@blue(1), rgb_led_turn_off@green(1), rgb_led_turn_off@red(1), 
  4648 ;;		 -> rgb_led_turn_on@blue(1), rgb_led_turn_on@green(1), rgb_led_turn_on@red(1), Relay_turn_off@relay(1), 
  4649 ;;		 -> Relay_turn_on@relay(1), led_turn_off@led(1), led_turn_on@led(1), dc_motor_move_left@dc_motor_pin2(1), 
  4650 ;;		 -> dc_motor_move_left@dc_motor_pin1(1), dc_motor_move_right@dc_motor_pin2(1), dc_motor_move_right@dc_motor_pin1(1),
      + segment_multi_disable@seg(1), 
  4651 ;;		 -> segment_multi_enable@seg(1), segment_write@seg(4), 
  4652 ;;  logic           1    2[COMRAM] unsigned char 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;  state           1    9[COMRAM] unsigned char 
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      unsigned char 
  4657 ;; Registers used:
  4658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4664 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4666 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4667 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4668 ;;Total ram usage:       10 bytes
  4669 ;; Hardware stack levels used: 1
  4670 ;; This function calls:
  4671 ;;		Nothing
  4672 ;; This function is called by:
  4673 ;;		_lcd_4bit_send_command
  4674 ;;		_lcd_4bit_send_char_data
  4675 ;;		_lcd_8bit_send_command
  4676 ;;		_lcd_8bit_send_char_data
  4677 ;;		_lcd_send_higher_nibble
  4678 ;;		_lcd_send_4bits
  4679 ;;		_lcd_4bit_send_enable_signal
  4680 ;;		_lcd_send_8bits
  4681 ;;		_lcd_8bit_send_enable_signal
  4682 ;;		_segment_write
  4683 ;;		_segment_multi_enable
  4684 ;;		_segment_multi_disable
  4685 ;;		_dc_motor_move_right
  4686 ;;		_dc_motor_move_left
  4687 ;;		_keypad_get_char
  4688 ;;		_led_turn_on
  4689 ;;		_led_turn_off
  4690 ;;		_Relay_turn_on
  4691 ;;		_Relay_turn_off
  4692 ;;		_rgb_led_turn_on
  4693 ;;		_rgb_led_turn_off
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           	psect	text25
  4698  0019B2                     __ptext25:
  4699                           	callstack 0
  4700  0019B2                     _gpio_pin_write_logic:
  4701                           	callstack 26
  4702  0019B2                     
  4703                           ;MCAL/GPIO/hal_gpio.c: 63: Std_ReturnType gpio_pin_write_logic(const pin_config_t* _pin_
      +                          config , uint8 logic);MCAL/GPIO/hal_gpio.c: 64: {;MCAL/GPIO/hal_gpio.c: 65:     Std_Retu
      +                          rnType state=(Std_ReturnType)1;
  4704  0019B2  0E01               	movlw	1
  4705  0019B4  6E0A               	movwf	gpio_pin_write_logic@state^0,c
  4706  0019B6                     
  4707                           ;MCAL/GPIO/hal_gpio.c: 66:     if(_pin_config==((void*)0))
  4708  0019B6  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  4709  0019B8  1002               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  4710  0019BA  A4D8               	btfss	status,2,c
  4711  0019BC  EFE2  F00C         	goto	u1451
  4712  0019C0  EFE4  F00C         	goto	u1450
  4713  0019C4                     u1451:
  4714  0019C4  EF47  F00D         	goto	l2814
  4715  0019C8                     u1450:
  4716  0019C8                     l2806:
  4717                           
  4718                           ;MCAL/GPIO/hal_gpio.c: 67:         state=(Std_ReturnType)0;
  4719  0019C8  0E00               	movlw	0
  4720  0019CA  6E0A               	movwf	gpio_pin_write_logic@state^0,c
  4721  0019CC  EF5C  F00D         	goto	l2816
  4722  0019D0                     l2808:
  4723                           
  4724                           ;MCAL/GPIO/hal_gpio.c: 73:                 (*lat_regesters[_pin_config->port] |= (1<<_pi
      +                          n_config->pin));
  4725  0019D0  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4726  0019D4  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4727  0019D8  30DF               	rrcf	223,w,c
  4728  0019DA  32E8               	rrcf	wreg,f,c
  4729  0019DC  32E8               	rrcf	wreg,f,c
  4730  0019DE  0B07               	andlw	7
  4731  0019E0  6E04               	movwf	??_gpio_pin_write_logic^0,c
  4732  0019E2  0E01               	movlw	1
  4733  0019E4  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4734  0019E6  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  4735  0019E8  EFF8  F00C         	goto	u1464
  4736  0019EC                     u1465:
  4737  0019EC  90D8               	bcf	status,0,c
  4738  0019EE  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4739  0019F0                     u1464:
  4740  0019F0  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  4741  0019F2  EFF6  F00C         	goto	u1465
  4742  0019F6  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4743  0019FA  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4744  0019FE  50DF               	movf	223,w,c
  4745  001A00  0B07               	andlw	7
  4746  001A02  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  4747  001A04  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  4748  001A06  0D02               	mullw	2
  4749  001A08  0E75               	movlw	low _lat_regesters
  4750  001A0A  24F3               	addwf	243,w,c
  4751  001A0C  6ED9               	movwf	fsr2l,c
  4752  001A0E  0E00               	movlw	high _lat_regesters
  4753  001A10  20F4               	addwfc	prodh,w,c
  4754  001A12  6EDA               	movwf	fsr2h,c
  4755  001A14  CFDE F007          	movff	postinc2,??_gpio_pin_write_logic+3
  4756  001A18  CFDD F008          	movff	postdec2,??_gpio_pin_write_logic+4
  4757  001A1C  C007  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  4758  001A20  C008  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  4759  001A24  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4760  001A26  12DF               	iorwf	indf2,f,c
  4761                           
  4762                           ;MCAL/GPIO/hal_gpio.c: 74:                 break;
  4763  001A28  EF5C  F00D         	goto	l2816
  4764  001A2C                     l2810:
  4765                           
  4766                           ;MCAL/GPIO/hal_gpio.c: 76:                 (*lat_regesters[_pin_config->port] &= ~(1<<_p
      +                          in_config->pin));
  4767  001A2C  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4768  001A30  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4769  001A34  30DF               	rrcf	223,w,c
  4770  001A36  32E8               	rrcf	wreg,f,c
  4771  001A38  32E8               	rrcf	wreg,f,c
  4772  001A3A  0B07               	andlw	7
  4773  001A3C  6E04               	movwf	??_gpio_pin_write_logic^0,c
  4774  001A3E  0E01               	movlw	1
  4775  001A40  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4776  001A42  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  4777  001A44  EF26  F00D         	goto	u1474
  4778  001A48                     u1475:
  4779  001A48  90D8               	bcf	status,0,c
  4780  001A4A  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4781  001A4C                     u1474:
  4782  001A4C  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  4783  001A4E  EF24  F00D         	goto	u1475
  4784  001A52  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4785  001A54  0AFF               	xorlw	255
  4786  001A56  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  4787  001A58  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  4788  001A5C  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  4789  001A60  50DF               	movf	223,w,c
  4790  001A62  0B07               	andlw	7
  4791  001A64  6E07               	movwf	(??_gpio_pin_write_logic+3)^0,c
  4792  001A66  5007               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  4793  001A68  0D02               	mullw	2
  4794  001A6A  0E75               	movlw	low _lat_regesters
  4795  001A6C  24F3               	addwf	243,w,c
  4796  001A6E  6ED9               	movwf	fsr2l,c
  4797  001A70  0E00               	movlw	high _lat_regesters
  4798  001A72  20F4               	addwfc	prodh,w,c
  4799  001A74  6EDA               	movwf	fsr2h,c
  4800  001A76  CFDE F008          	movff	postinc2,??_gpio_pin_write_logic+4
  4801  001A7A  CFDD F009          	movff	postdec2,??_gpio_pin_write_logic+5
  4802  001A7E  C008  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  4803  001A82  C009  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  4804  001A86  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  4805  001A88  16DF               	andwf	indf2,f,c
  4806                           
  4807                           ;MCAL/GPIO/hal_gpio.c: 77:                 break;
  4808  001A8A  EF5C  F00D         	goto	l2816
  4809  001A8E                     l2814:
  4810  001A8E  5003               	movf	gpio_pin_write_logic@logic^0,w,c
  4811  001A90  6E04               	movwf	??_gpio_pin_write_logic^0,c
  4812  001A92  6A05               	clrf	(??_gpio_pin_write_logic+1)^0,c
  4813                           
  4814                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4815                           ; Switch size 1, requested type "simple"
  4816                           ; Number of cases is 1, Range of values is 0 to 0
  4817                           ; switch strategies available:
  4818                           ; Name         Instructions Cycles
  4819                           ; simple_byte            4     3 (average)
  4820                           ;	Chosen strategy is simple_byte
  4821  001A94  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4822  001A96  0A00               	xorlw	0	; case 0
  4823  001A98  B4D8               	btfsc	status,2,c
  4824  001A9A  EF51  F00D         	goto	l4182
  4825  001A9E  EFE4  F00C         	goto	l2806
  4826  001AA2                     l4182:
  4827                           
  4828                           ; Switch size 1, requested type "simple"
  4829                           ; Number of cases is 2, Range of values is 0 to 1
  4830                           ; switch strategies available:
  4831                           ; Name         Instructions Cycles
  4832                           ; simple_byte            7     4 (average)
  4833                           ;	Chosen strategy is simple_byte
  4834  001AA2  5004               	movf	??_gpio_pin_write_logic^0,w,c
  4835  001AA4  0A00               	xorlw	0	; case 0
  4836  001AA6  B4D8               	btfsc	status,2,c
  4837  001AA8  EF16  F00D         	goto	l2810
  4838  001AAC  0A01               	xorlw	1	; case 1
  4839  001AAE  B4D8               	btfsc	status,2,c
  4840  001AB0  EFE8  F00C         	goto	l2808
  4841  001AB4  EFE4  F00C         	goto	l2806
  4842  001AB8                     l2816:
  4843                           
  4844                           ;MCAL/GPIO/hal_gpio.c: 82:     return state;
  4845  001AB8  500A               	movf	gpio_pin_write_logic@state^0,w,c
  4846  001ABA  0012               	return		;funcret
  4847  001ABC                     __end_of_gpio_pin_write_logic:
  4848                           	callstack 0
  4849                           
  4850 ;; *************** function _gpio_pin_direction_initialize *****************
  4851 ;; Defined at:
  4852 ;;		line 10 in file "MCAL/GPIO/hal_gpio.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  4855 ;;		 -> lcd_8bit_initialize@data_pin(1), lcd_8bit_initialize@en_pin(1), lcd_8bit_initialize@rs_pin(1), lcd_4bit_initiali
      +ze@data_pin(1), 
  4856 ;;		 -> lcd_4bit_initialize@en_pin(1), lcd_4bit_initialize@rs_pin(1), rgb_led_initialize@blue(1), rgb_led_initialize@gre
      +en(1), 
  4857 ;;		 -> rgb_led_initialize@red(1), Relay_initialize@relay(1), led_initialize@led(1), dc_motor_initialize@dc_motor_pin2(1
      +), 
  4858 ;;		 -> dc_motor_initialize@dc_motor_pin1(1), button_initialize@button(1), segment_multi_initialize@seg(1), segment_init
      +ialize@seg(4), 
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;  state           1    8[COMRAM] unsigned char 
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  1    wreg      unsigned char 
  4863 ;; Registers used:
  4864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4870 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4872 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4873 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4874 ;;Total ram usage:        9 bytes
  4875 ;; Hardware stack levels used: 1
  4876 ;; This function calls:
  4877 ;;		Nothing
  4878 ;; This function is called by:
  4879 ;;		_lcd_4bit_initialize
  4880 ;;		_lcd_8bit_initialize
  4881 ;;		_segment_initialize
  4882 ;;		_segment_multi_initialize
  4883 ;;		_button_initialize
  4884 ;;		_dc_motor_initialize
  4885 ;;		_keypad_initialize
  4886 ;;		_led_initialize
  4887 ;;		_Relay_initialize
  4888 ;;		_rgb_led_initialize
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           	psect	text26
  4893  00101A                     __ptext26:
  4894                           	callstack 0
  4895  00101A                     _gpio_pin_direction_initialize:
  4896                           	callstack 28
  4897  00101A                     
  4898                           ;MCAL/GPIO/hal_gpio.c: 10: Std_ReturnType gpio_pin_direction_initialize(const pin_config
      +                          _t* _pin_config);MCAL/GPIO/hal_gpio.c: 11: {;MCAL/GPIO/hal_gpio.c: 12:     Std_ReturnTyp
      +                          e state=(Std_ReturnType)1;
  4899  00101A  0E01               	movlw	1
  4900  00101C  6E09               	movwf	gpio_pin_direction_initialize@state^0,c
  4901  00101E                     
  4902                           ;MCAL/GPIO/hal_gpio.c: 13:     if(_pin_config==((void*)0))
  4903  00101E  5001               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  4904  001020  1002               	iorwf	(gpio_pin_direction_initialize@_pin_config+1)^0,w,c
  4905  001022  A4D8               	btfss	status,2,c
  4906  001024  EF16  F008         	goto	u1601
  4907  001028  EF18  F008         	goto	u1600
  4908  00102C                     u1601:
  4909  00102C  EFFB  F008         	goto	l3036
  4910  001030                     u1600:
  4911  001030                     l3020:
  4912                           
  4913                           ;MCAL/GPIO/hal_gpio.c: 14:         state=(Std_ReturnType)0;
  4914  001030  0E00               	movlw	0
  4915  001032  6E09               	movwf	gpio_pin_direction_initialize@state^0,c
  4916  001034  EF1C  F009         	goto	l3038
  4917  001038                     l3022:
  4918                           
  4919                           ;MCAL/GPIO/hal_gpio.c: 20:                 (*tris_regesters[_pin_config->port] &= ~(1<<_
      +                          pin_config->pin));
  4920  001038  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  4921  00103C  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  4922  001040  30DF               	rrcf	223,w,c
  4923  001042  32E8               	rrcf	wreg,f,c
  4924  001044  32E8               	rrcf	wreg,f,c
  4925  001046  0B07               	andlw	7
  4926  001048  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  4927  00104A  0E01               	movlw	1
  4928  00104C  6E04               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4929  00104E  2A03               	incf	??_gpio_pin_direction_initialize^0,f,c
  4930  001050  EF2C  F008         	goto	u1614
  4931  001054                     u1615:
  4932  001054  90D8               	bcf	status,0,c
  4933  001056  3604               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4934  001058                     u1614:
  4935  001058  2E03               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4936  00105A  EF2A  F008         	goto	u1615
  4937  00105E  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4938  001060  0AFF               	xorlw	255
  4939  001062  6E05               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  4940  001064  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  4941  001068  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  4942  00106C  50DF               	movf	223,w,c
  4943  00106E  0B07               	andlw	7
  4944  001070  6E06               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  4945  001072  5006               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  4946  001074  0D02               	mullw	2
  4947  001076  0ECE               	movlw	low _tris_regesters
  4948  001078  24F3               	addwf	243,w,c
  4949  00107A  6ED9               	movwf	fsr2l,c
  4950  00107C  0E00               	movlw	high _tris_regesters
  4951  00107E  20F4               	addwfc	prodh,w,c
  4952  001080  6EDA               	movwf	fsr2h,c
  4953  001082  CFDE F007          	movff	postinc2,??_gpio_pin_direction_initialize+4
  4954  001086  CFDD F008          	movff	postdec2,??_gpio_pin_direction_initialize+5
  4955  00108A  C007  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  4956  00108E  C008  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  4957  001092  5005               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4958  001094  16DF               	andwf	indf2,f,c
  4959                           
  4960                           ;MCAL/GPIO/hal_gpio.c: 21:                 switch(_pin_config->logic)
  4961  001096  EFAC  F008         	goto	l3030
  4962  00109A                     l3024:
  4963                           
  4964                           ;MCAL/GPIO/hal_gpio.c: 24:                         (*lat_regesters[_pin_config->port] |=
      +                           (1<<_pin_config->pin));
  4965  00109A  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  4966  00109E  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  4967  0010A2  30DF               	rrcf	223,w,c
  4968  0010A4  32E8               	rrcf	wreg,f,c
  4969  0010A6  32E8               	rrcf	wreg,f,c
  4970  0010A8  0B07               	andlw	7
  4971  0010AA  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  4972  0010AC  0E01               	movlw	1
  4973  0010AE  6E04               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4974  0010B0  2A03               	incf	??_gpio_pin_direction_initialize^0,f,c
  4975  0010B2  EF5D  F008         	goto	u1624
  4976  0010B6                     u1625:
  4977  0010B6  90D8               	bcf	status,0,c
  4978  0010B8  3604               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4979  0010BA                     u1624:
  4980  0010BA  2E03               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4981  0010BC  EF5B  F008         	goto	u1625
  4982  0010C0  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  4983  0010C4  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  4984  0010C8  50DF               	movf	223,w,c
  4985  0010CA  0B07               	andlw	7
  4986  0010CC  6E05               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  4987  0010CE  5005               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4988  0010D0  0D02               	mullw	2
  4989  0010D2  0E75               	movlw	low _lat_regesters
  4990  0010D4  24F3               	addwf	243,w,c
  4991  0010D6  6ED9               	movwf	fsr2l,c
  4992  0010D8  0E00               	movlw	high _lat_regesters
  4993  0010DA  20F4               	addwfc	prodh,w,c
  4994  0010DC  6EDA               	movwf	fsr2h,c
  4995  0010DE  CFDE F006          	movff	postinc2,??_gpio_pin_direction_initialize+3
  4996  0010E2  CFDD F007          	movff	postdec2,??_gpio_pin_direction_initialize+4
  4997  0010E6  C006  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  4998  0010EA  C007  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  4999  0010EE  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  5000  0010F0  12DF               	iorwf	indf2,f,c
  5001                           
  5002                           ;MCAL/GPIO/hal_gpio.c: 25:                         break;
  5003  0010F2  EF1C  F009         	goto	l3038
  5004  0010F6                     l3026:
  5005                           
  5006                           ;MCAL/GPIO/hal_gpio.c: 27:                         (*lat_regesters[_pin_config->port] &=
      +                           ~(1<<_pin_config->pin));
  5007  0010F6  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  5008  0010FA  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  5009  0010FE  30DF               	rrcf	223,w,c
  5010  001100  32E8               	rrcf	wreg,f,c
  5011  001102  32E8               	rrcf	wreg,f,c
  5012  001104  0B07               	andlw	7
  5013  001106  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  5014  001108  0E01               	movlw	1
  5015  00110A  6E04               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  5016  00110C  2A03               	incf	??_gpio_pin_direction_initialize^0,f,c
  5017  00110E  EF8B  F008         	goto	u1634
  5018  001112                     u1635:
  5019  001112  90D8               	bcf	status,0,c
  5020  001114  3604               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  5021  001116                     u1634:
  5022  001116  2E03               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  5023  001118  EF89  F008         	goto	u1635
  5024  00111C  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  5025  00111E  0AFF               	xorlw	255
  5026  001120  6E05               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  5027  001122  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  5028  001126  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  5029  00112A  50DF               	movf	223,w,c
  5030  00112C  0B07               	andlw	7
  5031  00112E  6E06               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  5032  001130  5006               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  5033  001132  0D02               	mullw	2
  5034  001134  0E75               	movlw	low _lat_regesters
  5035  001136  24F3               	addwf	243,w,c
  5036  001138  6ED9               	movwf	fsr2l,c
  5037  00113A  0E00               	movlw	high _lat_regesters
  5038  00113C  20F4               	addwfc	prodh,w,c
  5039  00113E  6EDA               	movwf	fsr2h,c
  5040  001140  CFDE F007          	movff	postinc2,??_gpio_pin_direction_initialize+4
  5041  001144  CFDD F008          	movff	postdec2,??_gpio_pin_direction_initialize+5
  5042  001148  C007  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  5043  00114C  C008  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  5044  001150  5005               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  5045  001152  16DF               	andwf	indf2,f,c
  5046                           
  5047                           ;MCAL/GPIO/hal_gpio.c: 28:                         break;
  5048  001154  EF1C  F009         	goto	l3038
  5049  001158                     l3030:
  5050  001158  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  5051  00115C  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  5052  001160  BEDF               	btfsc	indf2,7,c
  5053  001162  EFB5  F008         	goto	u1641
  5054  001166  EFB8  F008         	goto	u1640
  5055  00116A                     u1641:
  5056  00116A  0E01               	movlw	1
  5057  00116C  EFB9  F008         	goto	u1650
  5058  001170                     u1640:
  5059  001170  0E00               	movlw	0
  5060  001172                     u1650:
  5061  001172  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  5062  001174  6A04               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  5063                           
  5064                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5065                           ; Switch size 1, requested type "simple"
  5066                           ; Number of cases is 1, Range of values is 0 to 0
  5067                           ; switch strategies available:
  5068                           ; Name         Instructions Cycles
  5069                           ; simple_byte            4     3 (average)
  5070                           ;	Chosen strategy is simple_byte
  5071  001176  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  5072  001178  0A00               	xorlw	0	; case 0
  5073  00117A  B4D8               	btfsc	status,2,c
  5074  00117C  EFC2  F008         	goto	l4184
  5075  001180  EF1C  F009         	goto	l3038
  5076  001184                     l4184:
  5077                           
  5078                           ; Switch size 1, requested type "simple"
  5079                           ; Number of cases is 2, Range of values is 0 to 1
  5080                           ; switch strategies available:
  5081                           ; Name         Instructions Cycles
  5082                           ; simple_byte            7     4 (average)
  5083                           ;	Chosen strategy is simple_byte
  5084  001184  5003               	movf	??_gpio_pin_direction_initialize^0,w,c
  5085  001186  0A00               	xorlw	0	; case 0
  5086  001188  B4D8               	btfsc	status,2,c
  5087  00118A  EF7B  F008         	goto	l3026
  5088  00118E  0A01               	xorlw	1	; case 1
  5089  001190  B4D8               	btfsc	status,2,c
  5090  001192  EF4D  F008         	goto	l3024
  5091  001196  EF1C  F009         	goto	l3038
  5092  00119A                     l3032:
  5093                           
  5094                           ;MCAL/GPIO/hal_gpio.c: 32:                 (*tris_regesters[_pin_config->port] |= (1<<_p
      +                          in_config->pin));
  5095  00119A  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  5096  00119E  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  5097  0011A2  30DF               	rrcf	223,w,c
  5098  0011A4  32E8               	rrcf	wreg,f,c
  5099  0011A6  32E8               	rrcf	wreg,f,c
  5100  0011A8  0B07               	andlw	7
  5101  0011AA  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  5102  0011AC  0E01               	movlw	1
  5103  0011AE  6E04               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  5104  0011B0  2A03               	incf	??_gpio_pin_direction_initialize^0,f,c
  5105  0011B2  EFDD  F008         	goto	u1664
  5106  0011B6                     u1665:
  5107  0011B6  90D8               	bcf	status,0,c
  5108  0011B8  3604               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  5109  0011BA                     u1664:
  5110  0011BA  2E03               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  5111  0011BC  EFDB  F008         	goto	u1665
  5112  0011C0  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  5113  0011C4  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  5114  0011C8  50DF               	movf	223,w,c
  5115  0011CA  0B07               	andlw	7
  5116  0011CC  6E05               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  5117  0011CE  5005               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  5118  0011D0  0D02               	mullw	2
  5119  0011D2  0ECE               	movlw	low _tris_regesters
  5120  0011D4  24F3               	addwf	243,w,c
  5121  0011D6  6ED9               	movwf	fsr2l,c
  5122  0011D8  0E00               	movlw	high _tris_regesters
  5123  0011DA  20F4               	addwfc	prodh,w,c
  5124  0011DC  6EDA               	movwf	fsr2h,c
  5125  0011DE  CFDE F006          	movff	postinc2,??_gpio_pin_direction_initialize+3
  5126  0011E2  CFDD F007          	movff	postdec2,??_gpio_pin_direction_initialize+4
  5127  0011E6  C006  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  5128  0011EA  C007  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  5129  0011EE  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  5130  0011F0  12DF               	iorwf	indf2,f,c
  5131                           
  5132                           ;MCAL/GPIO/hal_gpio.c: 33:                 break;
  5133  0011F2  EF1C  F009         	goto	l3038
  5134  0011F6                     l3036:
  5135  0011F6  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  5136  0011FA  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  5137  0011FE  BCDF               	btfsc	indf2,6,c
  5138  001200  EF04  F009         	goto	u1671
  5139  001204  EF07  F009         	goto	u1670
  5140  001208                     u1671:
  5141  001208  0E01               	movlw	1
  5142  00120A  EF08  F009         	goto	u1680
  5143  00120E                     u1670:
  5144  00120E  0E00               	movlw	0
  5145  001210                     u1680:
  5146  001210  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
  5147  001212  6A04               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  5148                           
  5149                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5150                           ; Switch size 1, requested type "simple"
  5151                           ; Number of cases is 1, Range of values is 0 to 0
  5152                           ; switch strategies available:
  5153                           ; Name         Instructions Cycles
  5154                           ; simple_byte            4     3 (average)
  5155                           ;	Chosen strategy is simple_byte
  5156  001214  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  5157  001216  0A00               	xorlw	0	; case 0
  5158  001218  B4D8               	btfsc	status,2,c
  5159  00121A  EF11  F009         	goto	l4186
  5160  00121E  EF18  F008         	goto	l3020
  5161  001222                     l4186:
  5162                           
  5163                           ; Switch size 1, requested type "simple"
  5164                           ; Number of cases is 2, Range of values is 0 to 1
  5165                           ; switch strategies available:
  5166                           ; Name         Instructions Cycles
  5167                           ; simple_byte            7     4 (average)
  5168                           ;	Chosen strategy is simple_byte
  5169  001222  5003               	movf	??_gpio_pin_direction_initialize^0,w,c
  5170  001224  0A00               	xorlw	0	; case 0
  5171  001226  B4D8               	btfsc	status,2,c
  5172  001228  EF1C  F008         	goto	l3022
  5173  00122C  0A01               	xorlw	1	; case 1
  5174  00122E  B4D8               	btfsc	status,2,c
  5175  001230  EFCD  F008         	goto	l3032
  5176  001234  EF18  F008         	goto	l3020
  5177  001238                     l3038:
  5178                           
  5179                           ;MCAL/GPIO/hal_gpio.c: 38:     return state;
  5180  001238  5009               	movf	gpio_pin_direction_initialize@state^0,w,c
  5181  00123A  0012               	return		;funcret
  5182  00123C                     __end_of_gpio_pin_direction_initialize:
  5183                           	callstack 0
  5184                           
  5185                           	psect	rparam
  5186  0000                     
  5187                           	psect	config
  5188                           
  5189                           ; Padding undefined space
  5190  300000                     	org	3145728
  5191  300000  FF                 	db	255
  5192                           
  5193                           ;Config register CONFIG1H @ 0x300001
  5194                           ;	Oscillator Selection bits
  5195                           ;	OSC = HS, HS oscillator
  5196                           ;	Fail-Safe Clock Monitor Enable bit
  5197                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5198                           ;	Internal/External Oscillator Switchover bit
  5199                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5200  300001                     	org	3145729
  5201  300001  02                 	db	2
  5202                           
  5203                           ;Config register CONFIG2L @ 0x300002
  5204                           ;	Power-up Timer Enable bit
  5205                           ;	PWRT = OFF, PWRT disabled
  5206                           ;	Brown-out Reset Enable bits
  5207                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5208                           ;	Brown Out Reset Voltage bits
  5209                           ;	BORV = 1, 
  5210  300002                     	org	3145730
  5211  300002  09                 	db	9
  5212                           
  5213                           ;Config register CONFIG2H @ 0x300003
  5214                           ;	Watchdog Timer Enable bit
  5215                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5216                           ;	Watchdog Timer Postscale Select bits
  5217                           ;	WDTPS = 32768, 1:32768
  5218  300003                     	org	3145731
  5219  300003  1E                 	db	30
  5220                           
  5221                           ; Padding undefined space
  5222  300004                     	org	3145732
  5223  300004  FF                 	db	255
  5224                           
  5225                           ;Config register CONFIG3H @ 0x300005
  5226                           ;	CCP2 MUX bit
  5227                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5228                           ;	PORTB A/D Enable bit
  5229                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5230                           ;	Low-Power Timer1 Oscillator Enable bit
  5231                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5232                           ;	MCLR Pin Enable bit
  5233                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5234  300005                     	org	3145733
  5235  300005  81                 	db	129
  5236                           
  5237                           ;Config register CONFIG4L @ 0x300006
  5238                           ;	Stack Full/Underflow Reset Enable bit
  5239                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5240                           ;	Single-Supply ICSP Enable bit
  5241                           ;	LVP = OFF, Single-Supply ICSP disabled
  5242                           ;	Extended Instruction Set Enable bit
  5243                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5244                           ;	Background Debugger Enable bit
  5245                           ;	DEBUG = 0x1, unprogrammed default
  5246  300006                     	org	3145734
  5247  300006  81                 	db	129
  5248                           
  5249                           ; Padding undefined space
  5250  300007                     	org	3145735
  5251  300007  FF                 	db	255
  5252                           
  5253                           ;Config register CONFIG5L @ 0x300008
  5254                           ;	Code Protection bit
  5255                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5256                           ;	Code Protection bit
  5257                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5258                           ;	Code Protection bit
  5259                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5260                           ;	Code Protection bit
  5261                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5262  300008                     	org	3145736
  5263  300008  0F                 	db	15
  5264                           
  5265                           ;Config register CONFIG5H @ 0x300009
  5266                           ;	Boot Block Code Protection bit
  5267                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5268                           ;	Data EEPROM Code Protection bit
  5269                           ;	CPD = OFF, Data EEPROM not code-protected
  5270  300009                     	org	3145737
  5271  300009  C0                 	db	192
  5272                           
  5273                           ;Config register CONFIG6L @ 0x30000A
  5274                           ;	Write Protection bit
  5275                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5276                           ;	Write Protection bit
  5277                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5278                           ;	Write Protection bit
  5279                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5280                           ;	Write Protection bit
  5281                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5282  30000A                     	org	3145738
  5283  30000A  0F                 	db	15
  5284                           
  5285                           ;Config register CONFIG6H @ 0x30000B
  5286                           ;	Configuration Register Write Protection bit
  5287                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5288                           ;	Boot Block Write Protection bit
  5289                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5290                           ;	Data EEPROM Write Protection bit
  5291                           ;	WRTD = OFF, Data EEPROM not write-protected
  5292  30000B                     	org	3145739
  5293  30000B  E0                 	db	224
  5294                           
  5295                           ;Config register CONFIG7L @ 0x30000C
  5296                           ;	Table Read Protection bit
  5297                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5298                           ;	Table Read Protection bit
  5299                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5300                           ;	Table Read Protection bit
  5301                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5302                           ;	Table Read Protection bit
  5303                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5304  30000C                     	org	3145740
  5305  30000C  0F                 	db	15
  5306                           
  5307                           ;Config register CONFIG7H @ 0x30000D
  5308                           ;	Boot Block Table Read Protection bit
  5309                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5310  30000D                     	org	3145741
  5311  30000D  40                 	db	64
  5312                           tosu	equ	0xFFF
  5313                           tosh	equ	0xFFE
  5314                           tosl	equ	0xFFD
  5315                           stkptr	equ	0xFFC
  5316                           pclatu	equ	0xFFB
  5317                           pclath	equ	0xFFA
  5318                           pcl	equ	0xFF9
  5319                           tblptru	equ	0xFF8
  5320                           tblptrh	equ	0xFF7
  5321                           tblptrl	equ	0xFF6
  5322                           tablat	equ	0xFF5
  5323                           prodh	equ	0xFF4
  5324                           prodl	equ	0xFF3
  5325                           indf0	equ	0xFEF
  5326                           postinc0	equ	0xFEE
  5327                           postdec0	equ	0xFED
  5328                           preinc0	equ	0xFEC
  5329                           plusw0	equ	0xFEB
  5330                           fsr0h	equ	0xFEA
  5331                           fsr0l	equ	0xFE9
  5332                           wreg	equ	0xFE8
  5333                           indf1	equ	0xFE7
  5334                           postinc1	equ	0xFE6
  5335                           postdec1	equ	0xFE5
  5336                           preinc1	equ	0xFE4
  5337                           plusw1	equ	0xFE3
  5338                           fsr1h	equ	0xFE2
  5339                           fsr1l	equ	0xFE1
  5340                           bsr	equ	0xFE0
  5341                           indf2	equ	0xFDF
  5342                           postinc2	equ	0xFDE
  5343                           postdec2	equ	0xFDD
  5344                           preinc2	equ	0xFDC
  5345                           plusw2	equ	0xFDB
  5346                           fsr2h	equ	0xFDA
  5347                           fsr2l	equ	0xFD9
  5348                           status	equ	0xFD8

Data Sizes:
    Strings     23
    Constant    0
    Data        50
    BSS         115
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     69     126
    BANK0           128      0     108
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    lcd_8bit_send_enable_signal@lcd_8bit	PTR const struct . size(2) Largest target is 10
		 -> lcd_8bit(BANK0[10]), 

    lcd_send_8bits@lcd_8bit	PTR const struct . size(2) Largest target is 10
		 -> lcd_8bit(BANK0[10]), 

    reverse_string@str	PTR unsigned char  size(2) Largest target is 12
		 -> lcd_8bit_send_number_at_position@str(COMRAM[12]), lcd_8bit_send_number_data@str(COMRAM[12]), lcd_4bit_send_number_at_position@str(COMRAM[12]), lcd_4bit_send_number_data@str(COMRAM[12]), 

    lcd_convert_number_to_string@str	PTR unsigned char  size(2) Largest target is 12
		 -> lcd_8bit_send_number_at_position@str(COMRAM[12]), lcd_8bit_send_number_data@str(COMRAM[12]), lcd_4bit_send_number_at_position@str(COMRAM[12]), lcd_4bit_send_number_data@str(COMRAM[12]), 

    lcd_4bit_send_enable_signal@lcd_4bit	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_send_4bits@lcd_4bit	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_send_higher_nibble@lcd_4bit	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_8bit_send_number_at_position@lcd_8bit	PTR const struct . size(2) Largest target is 10
		 -> lcd_8bit(BANK0[10]), 

    lcd_8bit_set_position@lcd_8bit	PTR const struct . size(2) Largest target is 10
		 -> lcd_8bit(BANK0[10]), 

    lcd_8bit_send_string_at_position@str	PTR const unsigned char  size(2) Largest target is 12
		 -> lcd_8bit_send_number_at_position@str(COMRAM[12]), STR_3(CODE[11]), STR_1(CODE[12]), 

    lcd_8bit_send_string_at_position@lcd_8bit	PTR const struct . size(2) Largest target is 10
		 -> lcd_8bit(BANK0[10]), 

    lcd_8bit_send_string_data@str	PTR const unsigned char  size(2) Largest target is 12
		 -> lcd_8bit_send_number_at_position@str(COMRAM[12]), lcd_8bit_send_number_data@str(COMRAM[12]), STR_3(CODE[11]), STR_1(CODE[12]), 

    lcd_8bit_send_string_data@lcd_8bit	PTR const struct . size(2) Largest target is 10
		 -> lcd_8bit(BANK0[10]), 

    lcd_8bit_send_char_data@lcd_8bit	PTR const struct . size(2) Largest target is 10
		 -> lcd_8bit(BANK0[10]), 

    lcd_8bit_send_command@lcd_8bit	PTR const struct . size(2) Largest target is 10
		 -> lcd_8bit(BANK0[10]), 

    lcd_8bit_initialize@lcd_8bit	PTR const struct . size(2) Largest target is 10
		 -> lcd_8bit(BANK0[10]), 

    lcd_4bit_send_number_at_position@lcd_4bit	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_4bit_set_position@lcd_4bit	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_4bit_send_string_at_position@str	PTR const unsigned char  size(2) Largest target is 12
		 -> lcd_4bit_send_number_at_position@str(COMRAM[12]), STR_4(CODE[11]), STR_2(CODE[12]), 

    lcd_4bit_send_string_at_position@lcd_4bit	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_4bit_send_string_data@str	PTR const unsigned char  size(2) Largest target is 12
		 -> lcd_4bit_send_number_at_position@str(COMRAM[12]), lcd_4bit_send_number_data@str(COMRAM[12]), STR_4(CODE[11]), STR_2(CODE[12]), 

    lcd_4bit_send_string_data@lcd_4bit	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_4bit_send_char_data@lcd_4bit	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_4bit_send_command@lcd_4bit	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_4bit_initialize@lcd_4bit	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 4
		 -> lcd_8bit_send_enable_signal@en_pin(COMRAM[1]), lcd_send_8bits@data_pin(COMRAM[1]), lcd_4bit_send_enable_signal@en_pin(COMRAM[1]), lcd_send_4bits@data_pin(COMRAM[1]), 
		 -> lcd_send_higher_nibble@rs_pin(COMRAM[1]), lcd_8bit_send_char_data@rs_pin(COMRAM[1]), lcd_8bit_send_command@rs_pin(COMRAM[1]), lcd_4bit_send_char_data@rs_pin(COMRAM[1]), 
		 -> lcd_4bit_send_command@rs_pin(COMRAM[1]), rgb_led_turn_off@blue(COMRAM[1]), rgb_led_turn_off@green(COMRAM[1]), rgb_led_turn_off@red(COMRAM[1]), 
		 -> rgb_led_turn_on@blue(COMRAM[1]), rgb_led_turn_on@green(COMRAM[1]), rgb_led_turn_on@red(COMRAM[1]), Relay_turn_off@relay(COMRAM[1]), 
		 -> Relay_turn_on@relay(COMRAM[1]), led_turn_off@led(COMRAM[1]), led_turn_on@led(COMRAM[1]), dc_motor_move_left@dc_motor_pin2(COMRAM[1]), 
		 -> dc_motor_move_left@dc_motor_pin1(COMRAM[1]), dc_motor_move_right@dc_motor_pin2(COMRAM[1]), dc_motor_move_right@dc_motor_pin1(COMRAM[1]), segment_multi_disable@seg(COMRAM[1]), 
		 -> segment_multi_enable@seg(COMRAM[1]), segment_write@seg(COMRAM[4]), 

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(2) Largest target is 4
		 -> lcd_8bit_initialize@data_pin(COMRAM[1]), lcd_8bit_initialize@en_pin(COMRAM[1]), lcd_8bit_initialize@rs_pin(COMRAM[1]), lcd_4bit_initialize@data_pin(COMRAM[1]), 
		 -> lcd_4bit_initialize@en_pin(COMRAM[1]), lcd_4bit_initialize@rs_pin(COMRAM[1]), rgb_led_initialize@blue(COMRAM[1]), rgb_led_initialize@green(COMRAM[1]), 
		 -> rgb_led_initialize@red(COMRAM[1]), Relay_initialize@relay(COMRAM[1]), led_initialize@led(COMRAM[1]), dc_motor_initialize@dc_motor_pin2(COMRAM[1]), 
		 -> dc_motor_initialize@dc_motor_pin1(COMRAM[1]), button_initialize@button(COMRAM[1]), segment_multi_initialize@seg(COMRAM[1]), segment_initialize@seg(COMRAM[4]), 

    port_regesters	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    lat_regesters	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    tris_regesters	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 


Critical Paths under _main in COMRAM

    _main->_lcd_4bit_send_number_at_position
    _main->_lcd_8bit_send_number_at_position
    _lcd_8bit_send_number_at_position->_lcd_8bit_send_string_at_position
    _lcd_8bit_send_string_at_position->_lcd_8bit_set_position
    _lcd_8bit_set_position->_lcd_8bit_send_command
    _lcd_8bit_send_string_data->_lcd_8bit_send_char_data
    _lcd_8bit_send_char_data->_lcd_send_8bits
    _lcd_4bit_send_number_at_position->_lcd_4bit_send_string_at_position
    _lcd_convert_number_to_string->___aldiv
    _lcd_4bit_send_string_at_position->_lcd_4bit_set_position
    _lcd_4bit_set_position->_lcd_4bit_send_command
    _lcd_4bit_send_string_data->_lcd_4bit_send_char_data
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _application_initialize->_lcd_4bit_initialize
    _application_initialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_send_8bits
    _lcd_send_8bits->_gpio_pin_write_logic
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_initialize->_lcd_send_higher_nibble
    _lcd_send_higher_nibble->_lcd_send_4bits
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0  292905
                                             60 COMRAM     9     9      0
             _application_initialize
   _lcd_4bit_send_number_at_position
   _lcd_4bit_send_string_at_position
   _lcd_8bit_send_number_at_position
   _lcd_8bit_send_string_at_position
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_number_at_position                    21    13      8   54191
                                             39 COMRAM    21    13      8
   _lcd_8bit_send_string_at_position
       _lcd_convert_number_to_string
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_at_position                     7     1      6   51109
                                             32 COMRAM     7     1      6
          _lcd_8bit_send_string_data
              _lcd_8bit_set_position
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_position                                7     3      4   25825
                                             25 COMRAM     7     3      4
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_string_data                            5     1      4   24148
                                             25 COMRAM     5     1      4
            _lcd_8bit_send_char_data
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_char_data                              6     3      3   23708
                                             19 COMRAM     6     3      3
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
                     _lcd_send_8bits
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_number_at_position                    21    13      8   55391
                                             39 COMRAM    21    13      8
   _lcd_4bit_send_string_at_position
       _lcd_convert_number_to_string
 ---------------------------------------------------------------------------------
 (2) _lcd_convert_number_to_string                         9     3      6    2553
                                             14 COMRAM     9     3      6
                            ___aldiv
                            ___almod
                     _reverse_string
 ---------------------------------------------------------------------------------
 (3) _reverse_string                                       6     3      3     573
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     448
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_at_position                     7     1      6   52309
                                             32 COMRAM     7     1      6
          _lcd_4bit_send_string_data
              _lcd_4bit_set_position
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_position                                7     3      4   26273
                                             25 COMRAM     7     3      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_string_data                            5     1      4   24900
                                             25 COMRAM     5     1      4
            _lcd_4bit_send_char_data
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char_data                              6     3      3   24460
                                             19 COMRAM     6     3      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               1     1      0   79857
                                             35 COMRAM     1     1      0
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_initialize                                 10     8      2   27330
                                             25 COMRAM    10     8      2
      _gpio_pin_direction_initialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     3      3   25076
                                             19 COMRAM     6     3      3
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
                     _lcd_send_8bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_8bits                                       9     6      3    8011
                                             10 COMRAM     9     6      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable_signal                          5     3      2    7750
                                             10 COMRAM     5     3      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                 10     8      2   52518
                                             25 COMRAM    10     8      2
      _gpio_pin_direction_initialize
              _lcd_4bit_send_command
             _lcd_send_higher_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_higher_nibble                               6     3      3   24694
                                             19 COMRAM     6     3      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                6     3      3   25524
                                             19 COMRAM     6     3      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       9     6      3    8467
                                             10 COMRAM     9     6      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          5     3      2    7978
                                             10 COMRAM     5     3      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    7453
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        9     7      2    1635
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _lcd_4bit_initialize
       _gpio_pin_direction_initialize
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
           _gpio_pin_write_logic
         _lcd_send_4bits
           _gpio_pin_write_logic
       _lcd_send_higher_nibble
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
         _lcd_send_4bits
     _lcd_8bit_initialize
       _gpio_pin_direction_initialize
       _lcd_8bit_send_command
         _gpio_pin_write_logic
         _lcd_8bit_send_enable_signal
           _gpio_pin_write_logic
         _lcd_send_8bits
           _gpio_pin_write_logic
   _lcd_4bit_send_number_at_position
     _lcd_4bit_send_string_at_position
       _lcd_4bit_send_string_data
         _lcd_4bit_send_char_data
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
           _lcd_send_4bits
       _lcd_4bit_set_position
         _lcd_4bit_send_command
     _lcd_convert_number_to_string
       ___aldiv
       ___almod
       _reverse_string
   _lcd_4bit_send_string_at_position
   _lcd_8bit_send_number_at_position
     _lcd_8bit_send_string_at_position
       _lcd_8bit_send_string_data
         _lcd_8bit_send_char_data
           _gpio_pin_write_logic
           _lcd_8bit_send_enable_signal
           _lcd_send_8bits
       _lcd_8bit_set_position
         _lcd_8bit_send_command
     _lcd_convert_number_to_string
   _lcd_8bit_send_string_at_position

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFR           80      0       0      37        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      6C       5       84.4%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     45      7E       1       99.2%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EA      12        0.0%
DATA                 0      0      EA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Sep 28 08:20:18 2025

             application_initialize@state 0024                           ?_lcd_send_4bits 000B  
                         ?_lcd_send_8bits 000B                                       l320 123A  
                                     l512 1D6A                                       l337 1ABA  
                                     l409 27B6                                       l531 146E  
                                     l452 1306                                       l541 163E  
                                     l630 1EEE                                       l446 125A  
                                     l470 1FA6                                       l463 205E  
                                     l551 2302                                       l615 2526  
                                     l456 144E                                       l544 2398  
                                     l528 25AA                                       l633 2124  
                                     l537 151A                                       l626 1E50  
                                     l618 242C                                       l466 1F0E  
                                     l650 1796                                       l459 1FC6  
                                     l619 24A2                                       l555 2378  
                                     l548 240E                                       l572 2246  
                                     l637 21AA                                       l661 1D8E  
                                     l494 26AA                                       l487 22E2  
                                     l672 2104                                       l656 276C  
                                     l665 1E2C                                       l754 19B0  
                                     l579 262A                                       l668 207E  
                                     l767 1BA6                                       l599 1C88  
           lcd_8bit_set_position@lcd_8bit 001A       __end_of_lcd_4bit_send_enable_signal 21AC  
             _lcd_4bit_send_enable_signal 2106                                       prod 000FF3  
                     led_initialize@F2888 0069                                       wreg 000FE8  
            lcd_4bit_send_string_data@str 001C                                      l3000 2306  
                                    l3010 2368                                      l3002 2340  
                                    l3020 1030                                      l3004 2342  
                                    l3012 2376                                      l3030 1158  
                                    l3022 1038                                      l3110 225E  
                                    l3006 2344                                      l3032 119A  
                                    l3024 109A                                      l3016 101A  
                                    l3120 22E0                                      l3112 2270  
                                    l3200 18DA                                      l3008 2356  
                                    l3026 10F6                                      l3018 101E  
                                    l3050 2410                                      l3114 2278  
                                    l3106 2248                                      l3210 191C  
                                    l3202 18EA                                      l3130 1BCE  
                                    l3036 11F6                                      l3060 246A  
                                    l3052 2414                                      l3116 22AA  
                                    l3108 224C                                      l3300 2674  
                                    l3220 196E                                      l3212 1928  
                                    l3204 18EE                                      l3140 1C1C  
                                    l3132 1BDE                                      l3124 1BA8  
                                    l4100 1890                                      l3038 1238  
                                    l3070 24A0                                      l3062 246C  
                                    l3054 2426                                      l3310 123C  
                                    l3118 22AE                                      l3302 267C  
                                    l3230 19A0                                      l3222 1970  
                                    l3214 1936                                      l3206 18FE  
                                    l3142 1C34                                      l3134 1BE6  
                                    l3126 1BAC                                      l3064 246E  
                                    l3320 129A                                      l3312 1240  
                                    l3400 1504                                      l3080 1CB0  
                                    l3304 2692                                      l3224 197A  
                                    l3216 1940                                      l3208 1914  
                                    l3240 1ADE                                      l3160 21C2  
                                    l3136 1BEC                                      l3128 1BBE  
                                    l3066 247E                                      l3058 2430  
                                    l3330 12F0                                      l3322 129C  
                                    l3314 1252                                      l3402 1506  
                                    l3090 1CFE                                      l3082 1CC0  
                                    l3074 1C8A                                      l3306 26A8  
                                    l3218 195E                                      l3226 1980  
                                    l3250 1B1E                                      l3242 1AE2  
                                    l3234 1ABC                                      l3170 2244  
                                    l3162 21D4                                      l3138 1C04  
                                    l3146 1C4C                                      l3068 2492  
                                    l3332 12F2                                      l3324 12AA  
                                    l3316 125E                                      l3420 158A  
                                    l3412 151E                                      l3404 1508  
                                    l3092 1D16                                      l3084 1CC8  
                                    l3076 1C8E                                      l3228 1990  
                                    l3260 1B70                                      l3252 1B2A  
                                    l3244 1AF0                                      l3236 1AC0  
                                    l3180 272A                                      l3164 21DC  
                                    l3156 21AC                                      l3148 1C86  
                                    l3500 24A8                                      l3350 1376  
                                    l3342 130A                                      l3334 12F4  
                                    l3326 12AE                                      l3318 1298  
                                    l3430 15DC                                      l3422 158C  
                                    l3414 1578                                      l3406 1516  
                                    l3086 1CCE                                      l3078 1CA0  
                                    l3190 18A6                                      l3254 1B38  
                                    l3262 1B76                                      l3246 1B00  
                                    l3238 1ACE                                      l3182 2746  
                                    l3174 270E                                      l3166 220E  
                                    l3158 21B0                                      l3270 25AC  
                                    l3510 24EA                                      l3502 24BA  
                                    l3360 13C8                                      l3352 1378  
                                    l3344 1364                                      l3336 1302  
                                    l3328 12CA                                      l3440 162A  
                                    l3432 15E2                                      l3424 159C  
                                    l3416 157A                                      l3088 1CE6  
                                    l3096 1D2E                                      l3192 18AA  
                                    l3264 1B86                                      l3256 1B56  
                                    l3248 1B16                                      l3184 2756  
                                    l3176 2712                                      l3520 253E  
                                    l3168 2212                                      l3280 25F4  
                                    l3272 25B0                                      l3512 2508  
                                    l3504 24CA                                      l4080 179C  
                                    l2810 1A2C                                      l2802 19B2  
                                    l3370 1416                                      l3362 13CE  
                                    l3354 1388                                      l3346 1366  
                                    l3434 15F4                                      l3426 15AA  
                                    l3418 157C                                      l3442 163C  
                                    l3098 1D68                                      l3290 262C  
                                    l3194 18B8                                      l3266 1B96  
                                    l3258 1B66                                      l3186 2758  
                                    l3178 271A                                      l3450 1656  
                                    l3530 258C                                      l3522 254E  
                                    l3282 25FC                                      l3274 25C2  
                                    l3506 24DA                                      l4090 181C  
                                    l4082 17B8                                      l2804 19B6  
                                    l3372 1428                                      l3364 13E0  
                                    l3356 1396                                      l3348 1368  
                                    l2900 2076                                      l3436 1606  
                                    l3428 15BC                                      l3380 1450  
                                    l4180 1D42                                      l3292 2630  
                                    l3196 18C8                                      l3188 275A  
                                    l3460 1688                                      l3452 165E  
                                    l3524 255E                                      l3516 2528  
                                    l3284 2612                                      l3276 25D2  
                                    l3508 24DE                                      l4092 182C  
                                    l4084 17D4                                      l4182 1AA2  
                                    l2806 19C8                                      l2814 1A8E  
                                    l2830 1E4C                                      l3374 143A  
                                    l3366 13F2                                      l3358 13A8  
                                    l2910 20DA                                      l2902 2082  
                                    l3438 1618                                      l3390 14AE  
                                    l3382 1454                                      l3294 2642  
                                    l3198 18CC                                      l3470 16C2  
                                    l3462 1694                                      l3454 1666  
                                    l3446 1640                                      l3526 2562  
                                    l3518 252C                                      l3286 2628  
                                    l3278 25E2                                      l4094 1838  
                                    l4086 17F0                                      l4078 1798  
                                    l4184 1184                                      l2808 19D0  
                                    l2816 1AB8                                      l2840 1EDA  
                                    l2824 1E2E                                      l2920 1FA8  
                                    l3368 1404                                      l3376 144C  
                                    l2912 20E8                                      l2904 20C4  
                                    l3392 14B0                                      l3384 1466  
                                    l3296 2652                                      l3480 175C  
                                    l3472 16F8                                      l3456 1674  
                                    l3464 1696                                      l3448 1644  
                                    l3528 256E                                      l4096 1848  
                                    l4088 180C                                      l4186 1222  
                                    l2850 210A                                      l2842 1EDC  
                                    l2826 1E32                                      l2930 2006  
                                    l2922 1FAC                                      l2914 20FA  
                                    l2906 20C6                                      l3394 14BE  
                                    l3386 1472                                      l3490 2796  
                                    l3298 2662                                      l3482 1774  
                                    l3474 16FA                                      l3466 16AC  
                                    l3458 1678                                      l4178 1C60  
                                    l4098 186C                                      l2860 216E  
                                    l2852 211C                                      l2836 1E54  
                                    l2844 1EEC                                      l2828 1E44  
                                    l2940 204E                                      l2932 2008  
                                    l2924 1FBE                                      l2908 20C8  
                                    l2916 2102                                      l3396 14C2  
                                    l3388 14AC                                      l3492 279A  
                                    l3484 1784                                      l3468 16BC  
                                    l3476 172E                                      l2862 2180  
                                    l2854 2128                                      l2838 1EAE  
                                    l2934 201A                                      l2926 1FCA  
                                    l2942 205C                                      l3398 14DE  
                                    l3494 27A8                                      l2950 1F06  
                                    l3478 174C                                      l3486 1794  
                                    l2864 218E                                      l2856 216A  
                                    l2848 2106                                      l2936 202E  
                                    l2928 2004                                      l2872 1D6C  
                                    l2960 1F62                                      l2952 1F12  
                                    l2866 21A0                                      l2858 216C  
                                    l2938 203C                                      l2890 1E1A  
                                    l2874 1D70                                      l2962 1F76  
                                    l2954 1F4C                                      l2946 1EF0  
                                    l3498 24A4                                      l2868 21A8  
                                    l2884 1D92                                      l2892 1E2A  
                                    l2876 1D82                                      l2980 23D6  
                                    l2972 237A                                      l2964 1F84  
                                    l2956 1F4E                                      l2948 1EF4  
                                    l2886 1DEC                                      l2878 1D8A  
                                    l2982 23D8                                      l2990 240C  
                                    l2974 237E                                      l2966 1F96  
                                    l2958 1F50                                      l2896 2060  
                                    l2888 1E18                                      l2984 23DA  
                                    l2976 2390                                      l2968 1FA4  
                                    l2898 2064                                      l2986 23EC  
                                    l2978 239C                                      l2994 22E4  
                                    l2988 23FE                                      l2996 22E8  
                                    l2998 22FA                                      STR_1 1001  
                                    STR_2 1001                                      STR_3 100D  
                                    STR_4 100D                                      u2000 25D2  
                                    u2001 25CE                                      u2010 25E2  
                                    u2011 25DE                                      u2100 159C  
                                    u2020 25F4                                      u2101 1598  
                                    u2021 25F0                                      u2030 2642  
                                    u2110 1656                                      u2031 263E  
                                    u2111 1652                                      u2040 2652  
                                    u2120 1674                                      u2200 253E  
                                    u2041 264E                                      u2121 1670  
                                    u2201 253A                                      u2050 2662  
                                    u2130 16AC                                      u2210 254E  
                                    u2051 265E                                      u2131 16A8  
                                    u2211 254A                                      u1500 1EEC  
                                    u2060 2674                                      u2140 174C  
                                    u2220 255E                                      u1501 1EE8  
                                    u2061 2670                                      u2141 1748  
                                    u2221 255A                                      u1510 211C  
                                    u2070 1252                                      u2150 175C  
                                    u1511 2118                                      u2071 124E  
                                    u2151 1758                                      u2231 2568  
                                    u1600 1030                                      u2080 1388  
                                    u1520 1D82                                      u2160 24BA  
                                    u1601 102C                                      u2081 1384  
                                    u1521 1D7E                                      u2161 24B6  
                                    u1450 19C8                                      u2090 1466  
                                    u2170 24CA                                      u1451 19C4  
                                    u2091 1462                                      u2171 24C6  
                                    u1540 1E2A                                      u1700 1CA0  
                                    u2180 24DA                                      u1541 1E26  
                                    u1701 1C9C                                      u2181 24D6  
                                    u1614 1058                                      u1550 2076  
                                    u1534 1E06                                      u1710 1CB0  
                                    u1615 1054                                      u1551 2072  
                                    u1535 1E02                                      u1711 1CAC  
                                    u2191 24E4                                      u1640 1170  
                                    u1624 10BA                                      u1464 19F0  
                                    u1480 1E44                                      u1560 1FBE  
                                    u1720 1CC0                                      u1800 1BDE  
                                    u1641 116A                                      u1625 10B6  
                                    u1465 19EC                                      u1481 1E40  
                                    u1561 1FBA                                      u1721 1CBC  
                                    u1801 1BDA                                      u1650 1172  
                                    u1634 1116                                      u1474 1A4C  
                                    u1570 1F06                                      u1730 225E  
                                    u1810 21C2                                      u1635 1112  
                                    u1475 1A48                                      u1571 1F02  
                                    u1731 225A                                      u1811 21BE  
                                    u1580 2390                                      u1740 2270  
                                    u1900 1936                                      u1820 21D4  
                                    u1581 238C                                      u1741 226C  
                                    u1901 1932                                      u1821 21D0  
                                    u1670 120E                                      u1494 1EC8  
                                    u1750 22A2                                      u1910 195E  
                                    u1590 22FA                                      u1830 2206  
                                    u1671 1208                                      u1495 1EC4  
                                    u1911 195A                                      u1591 22F6  
                                    u1680 1210                                      u1664 11BA  
                                    u1760 22D0                                      u1920 1990  
                                    u1840 2234                                      u1665 11B6  
                                    u1921 198C                                      u1690 2426  
                                    u1770 22E0                                      u1930 1ACE  
                                    u1850 2244                                      u1691 2422  
                                    u1771 22DC                                      u1931 1ACA  
                                    u1851 2240                                      u1940 1AF0  
                                    u1860 276C                                      u1780 1BBE  
                                    u1757 2298                                      u1941 1AEC  
                                    u1861 2768                                      u1837 21FC  
                                    u1781 1BBA                                      u1870 18B8  
                                    u1950 1B16                                      u1790 1BCE  
                                    u2807 15C2                                      u1767 22C6  
                                    u1871 18B4                                      u1951 1B12  
                                    u1847 222A                                      u1791 1BCA  
                                    u1880 18DA                                      u1960 1B38  
                                    u2817 15DE                                      u1881 18D6  
                                    u1961 1B34                                      u1890 1914  
                                    u1970 1B56                                      u2827 20E0  
                                    u1891 1910                                      u1971 1B52  
                                    u1980 1B86                                      u2837 20FC  
                                    u1981 1B82                                      u1990 25C2  
                                    u2847 138E                                      u1991 25BE  
                                    u2857 13AE                                      u2867 13CA  
                                    u2787 1896                                      u2877 2186  
                                    u2797 15A2                                      u2887 21A2  
 lcd_convert_number_to_string@is_negative 0016             ??_lcd_4bit_send_enable_signal 000D  
       lcd_convert_number_to_string@value 000F         lcd_convert_number_to_string@state 0015  
       lcd_8bit_send_enable_signal@en_pin 000F                                      _main 1798  
                                    fsr0h 000FEA                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
              ?_lcd_8bit_send_string_data 001A   lcd_convert_number_to_string@local_index 0017  
                                    prodl 000FF3                                      start 0004  
           __end_of_lcd_8bit_send_command 2410                              ___param_bank 000000  
__end_of_lcd_8bit_send_number_at_position 2528        ??_lcd_8bit_send_number_at_position 0030  
       ?_lcd_8bit_send_number_at_position 0028          _lcd_8bit_send_number_at_position 24A4  
                   _lcd_4bit_send_command 1FA8                      _gpio_pin_write_logic 19B2  
                  button_initialize@F2880 0071                           __end_of___aldiv 19B2  
                         __end_of___almod 1BA8                                     ?_main 0001  
                ??_application_initialize 0024                 _lcd_4bit_send_string_data 2248  
                            main@counter1 003E                              main@counter2 0042  
              lcd_send_higher_nibble@data 0016                lcd_4bit_set_position@state 0020  
             lcd_8bit_initialize@data_pin 0023                  ?_lcd_8bit_send_char_data 0014  
             lcd_8bit_initialize@lcd_8bit 001A                                     tablat 000FF5  
          ??_lcd_convert_number_to_string 0015                                     status 000FD8  
          ?_gpio_pin_direction_initialize 0001                           __initialization 26AC  
                            __end_of_main 18A6                     ?_gpio_pin_write_logic 0001  
                      _local_keypad_chars 0080         lcd_8bit_send_string_data@lcd_8bit 001A  
__end_of_lcd_4bit_send_number_at_position 25AC        ??_lcd_4bit_send_number_at_position 0030  
       ?_lcd_4bit_send_number_at_position 0028          _lcd_4bit_send_number_at_position 2528  
           __end_of_lcd_8bit_set_position 1C8A                             _lat_regesters 0075  
                                  ??_main 003D                     _lcd_4bit_set_position 1C8A  
lcd_4bit_send_string_at_position@lcd_4bit 0021  lcd_8bit_send_string_at_position@lcd_8bit 0021  
                           __activetblptr 000002                          led_turn_on@F2893 0068  
             lcd_send_higher_nibble@F3102 004E                   rgb_led_initialize@F2892 0061  
                 rgb_led_initialize@F2894 0060                   rgb_led_initialize@F2896 005F  
                  lcd_send_4bits@data_pin 0012               lcd_send_higher_nibble@state 0018  
                  lcd_send_4bits@lcd_4bit 000B                   segment_initialize@F2889 0046  
                       Relay_toggle@F2891 0062                    ?_lcd_4bit_send_command 0014  
                               ??___aldiv 0009                                 ??___almod 0009  
                                  clear_0 26F2                                    clear_1 26FE  
          lcd_send_higher_nibble@lcd_4bit 0014                                    isa$std 000001  
              lcd_8bit_send_command@F3048 0050                              __pdataCOMRAM 0075  
                            __mediumconst 0000                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
               lcd_8bit_initialize@en_pin 0022                 lcd_8bit_initialize@rs_pin 0021  
              lcd_8bit_send_command@state 0018                                __accesstop 0080  
                 __end_of__initialization 2704                 lcd_send_4bits@local_index 0013  
                           ___rparam_used 000001                          ??_lcd_send_4bits 000E  
                        ??_lcd_send_8bits 000E                   _lcd_4bit_send_char_data 1EF0  
                  ??_gpio_pin_write_logic 0004                            __pcstackCOMRAM 0001  
                            __pidataBANK0 276E                  dc_motor_initialize@F2880 006E  
                dc_motor_initialize@F2878 006F                    ?_lcd_4bit_set_position 001A  
         lcd_8bit_send_char_data@lcd_8bit 0014             lcd_8bit_send_char_data@rs_pin 0019  
     lcd_8bit_send_number_at_position@col 002B       lcd_4bit_send_number_at_position@col 002B  
gpio_pin_direction_initialize@_pin_config 0001       lcd_8bit_send_number_at_position@row 002A  
     lcd_4bit_send_number_at_position@row 002A       lcd_8bit_send_number_at_position@str 0030  
     lcd_4bit_send_number_at_position@str 0030             lcd_4bit_set_position@lcd_4bit 001A  
                lcd_8bit_initialize@F3042 0051                  lcd_8bit_initialize@F3037 0053  
                lcd_8bit_initialize@F3039 0052                                __pbssBANK0 0080  
                  _application_initialize 2796              lcd_8bit_send_char_data@F3054 004F  
             ??_lcd_8bit_send_string_data 001E                  lcd_8bit_initialize@state 001F  
                  button_read_state@F2886 0070            lcd_4bit_initialize@local_index 0020  
           segment_multi_initialize@F2902 0074                         led_turn_off@F2898 0067  
       lcd_4bit_send_enable_signal@en_pin 000F                           led_toggle@F2903 0066  
            lcd_8bit_send_char_data@state 0018                  dc_motor_move_right@F2885 006D  
                dc_motor_move_right@F2887 006C           lcd_4bit_send_char_data@lcd_4bit 0014  
     __end_of_lcd_8bit_send_enable_signal 2106               _lcd_8bit_send_enable_signal 2060  
            lcd_send_higher_nibble@rs_pin 0019       lcd_4bit_send_enable_signal@lcd_4bit 000B  
     lcd_8bit_send_enable_signal@lcd_8bit 000B                            _tris_regesters 00CE  
       __end_of_lcd_4bit_send_string_data 22E4                  ??_lcd_send_higher_nibble 0017  
               ??_lcd_4bit_send_char_data 0017             ??_lcd_8bit_send_enable_signal 000D  
              segment_multi_disable@F2912 0072                                   __Hparam 0000  
          lcd_8bit_send_string_data@state 001E                                   __Lparam 0000  
                                 ___aldiv 18A6                                   ___almod 1ABC  
                   _lcd_8bit_send_command 237A              lcd_8bit_send_string_data@str 001C  
                            __psmallconst 1000                                   __pcinit 26AC  
                                 __ramtop 1000                                   __ptext0 1798  
                                 __ptext1 24A4                                   __ptext2 25AC  
                                 __ptext3 1BA8                                   __ptext4 21AC  
                                 __ptext5 22E4                                   __ptext6 2528  
                                 __ptext7 1640                                   __ptext8 270E  
                                 __ptext9 1ABC               lcd_4bit_initialize@data_pin 0023  
               _lcd_8bit_send_string_data 21AC           ??_gpio_pin_direction_initialize 0003  
             lcd_4bit_initialize@lcd_4bit 001A                      rgb_led_turn_on@F2902 005E  
                    rgb_led_turn_on@F2904 005D                      rgb_led_turn_on@F2906 005C  
                                 _rgb_led 00D8                          ___aldiv@dividend 0001  
              lcd_8bit_set_position@state 0020         lcd_4bit_send_string_data@lcd_4bit 001A  
           lcd_send_4bits@data_or_command 000D                      end_of_initialization 2704  
                           __Lmediumconst 0000                   ??_lcd_4bit_send_command 0017  
                         reverse_string@i 0005                           reverse_string@j 0006  
                        ___aldiv@quotient 000B                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                       _lcd_4bit_initialize 123C  
         __end_of_lcd_4bit_send_char_data 1FA8                     _lcd_8bit_set_position 1BA8  
          lcd_4bit_send_number_data@F3024 00B4               lcd_8bit_send_command@rs_pin 0019  
        lcd_8bit_send_enable_signal@F3138 004A                      ?_lcd_4bit_initialize 001A  
        lcd_8bit_send_enable_signal@state 000E                    ?_lcd_8bit_send_command 0014  
                 ??_lcd_4bit_set_position 001E       lcd_8bit_send_string_at_position@col 0024  
     lcd_4bit_send_string_at_position@col 0024       lcd_8bit_send_string_at_position@row 0023  
     lcd_4bit_send_string_at_position@row 0023       lcd_8bit_send_string_at_position@str 0025  
     lcd_4bit_send_string_at_position@str 0025                             __pidataCOMRAM 27B8  
           lcd_8bit_send_command@lcd_8bit 0014             lcd_4bit_send_char_data@rs_pin 0019  
                     start_initialization 26AC                 lcd_4bit_initialize@en_pin 0022  
            ?_lcd_4bit_send_enable_signal 000B                       _lcd_8bit_initialize 1450  
               lcd_4bit_initialize@rs_pin 0021     __end_of_gpio_pin_direction_initialize 123C  
           _gpio_pin_direction_initialize 101A                   ?_application_initialize 0001  
                   ??_lcd_4bit_initialize 001C                  lcd_4bit_set_position@col 001D  
                lcd_4bit_set_position@row 001C                   dc_motor_move_left@F2892 006B  
                 dc_motor_move_left@F2894 006A                 lcd_send_8bits@local_index 0013  
                          _reverse_string 270E                      ?_lcd_8bit_initialize 001A  
                 _lcd_8bit_send_char_data 22E4                               __pdataBANK0 00C4  
                  ?_lcd_8bit_set_position 001A              lcd_4bit_send_command@command 0016  
                  _lcd_send_higher_nibble 2410                 lcd_8bit_send_char_data@ch 0016  
                             __pbssCOMRAM 0046            __end_of_application_initialize 27B8  
        lcd_4bit_send_enable_signal@F3114 004C                    __end_of_reverse_string 276E  
                   ??_lcd_8bit_initialize 001C                     Relay_initialize@F2876 0065  
                                ?___aldiv 0001                                  ?___almod 0001  
         gpio_pin_write_logic@_pin_config 0001          lcd_4bit_send_enable_signal@state 000E  
               gpio_pin_write_logic@logic 0003                          ___almod@dividend 0001  
               gpio_pin_write_logic@state 000A                               __smallconst 1000  
                         ___aldiv@divisor 0005         __end_of_lcd_8bit_send_string_data 2248  
                         ___aldiv@counter 0009     lcd_4bit_send_number_at_position@F3032 00A8  
   lcd_8bit_send_number_at_position@F3096 0090                 ??_lcd_8bit_send_char_data 0017  
              ?_lcd_4bit_send_string_data 001A                           ?_reverse_string 0001  
                  lcd_send_8bits@data_pin 0012        gpio_pin_direction_initialize@state 0009  
           __end_of_lcd_4bit_send_command 2060                    lcd_send_8bits@lcd_8bit 000B  
   lcd_8bit_send_number_at_position@value 002C     lcd_4bit_send_number_at_position@value 002C  
   lcd_8bit_send_number_at_position@state 003C     lcd_4bit_send_number_at_position@state 003C  
                     Relay_turn_off@F2886 0063                       lcd_send_4bits@F3109 004D  
                      reverse_string@temp 0004             lcd_send_8bits@data_or_command 000D  
   lcd_8bit_send_string_at_position@state 0027     lcd_4bit_send_string_at_position@state 0027  
                ?_lcd_4bit_send_char_data 0014                                 copy_data0 26C0  
                               copy_data1 26E0                       lcd_send_4bits@state 0011  
                 ??_lcd_8bit_send_command 0017                                  __Hrparam 0000  
                                __Lrparam 0000            lcd_8bit_initialize@local_index 0020  
           __end_of_lcd_4bit_set_position 1D6C               lcd_4bit_send_command@rs_pin 0019  
           lcd_4bit_send_command@lcd_4bit 0014           __end_of_lcd_8bit_send_char_data 237A  
                     lcd_send_8bits@F3133 004B           lcd_convert_number_to_string@str 0013  
                                _lcd_4bit 00E6                                  _lcd_8bit 00DC  
                                __ptext10 18A6                                  __ptext11 262C  
                                __ptext20 123C                                  __ptext12 1C8A  
                                __ptext21 2410                                  __ptext13 2248  
                                __ptext22 1FA8                                  __ptext14 1EF0  
                                __ptext23 1E2E                                  __ptext15 2796  
                                __ptext24 2106                                  __ptext16 1450  
                                __ptext25 19B2                                  __ptext17 237A  
                                __ptext26 101A                                  __ptext18 1D6C  
                                __ptext19 2060                           ___almod@divisor 0005  
                         ___almod@counter 0009                       lcd_send_8bits@state 0011  
                      Relay_turn_on@F2881 0064                 segment_multi_enable@F2907 0073  
                                isa$xinst 000000                   ??_lcd_8bit_set_position 001E  
                 ?_lcd_send_higher_nibble 0014                         reverse_string@len 0003  
                       reverse_string@str 0001                     rgb_led_turn_off@F2911 005B  
                   rgb_led_turn_off@F2913 005A                     rgb_led_turn_off@F2915 0059  
              lcd_4bit_send_command@F2984 0055                            _lcd_send_4bits 1E2E  
                          _lcd_send_8bits 1D6C      __end_of_lcd_convert_number_to_string 1798  
            _lcd_convert_number_to_string 1640               __end_of_lcd_4bit_initialize 1450  
__end_of_lcd_8bit_send_string_at_position 262C        ??_lcd_8bit_send_string_at_position 0027  
       ?_lcd_8bit_send_string_at_position 0021          _lcd_8bit_send_string_at_position 25AC  
            __end_of_gpio_pin_write_logic 1ABC              ?_lcd_8bit_send_enable_signal 000B  
              lcd_4bit_send_command@state 0018                  lcd_8bit_set_position@col 001D  
                lcd_8bit_set_position@row 001C  lcd_4bit_send_number_at_position@lcd_4bit 0028  
lcd_8bit_send_number_at_position@lcd_8bit 0028            lcd_4bit_send_string_data@state 001E  
          __end_of_lcd_send_higher_nibble 24A4                    __end_of_lcd_send_4bits 1EF0  
                  __end_of_lcd_send_8bits 1E2E                 lcd_4bit_send_char_data@ch 0016  
            lcd_4bit_send_char_data@F2990 0054            lcd_8bit_send_number_data@F3088 009C  
                          _port_regesters 00C4                  lcd_4bit_initialize@F2973 0058  
                lcd_4bit_initialize@F2975 0057                  lcd_4bit_initialize@F2978 0056  
                            ___aldiv@sign 000A             ?_lcd_convert_number_to_string 000F  
__end_of_lcd_4bit_send_string_at_position 26AC        ??_lcd_4bit_send_string_at_position 0027  
       ?_lcd_4bit_send_string_at_position 0021          _lcd_4bit_send_string_at_position 262C  
                        ??_reverse_string 0004               __end_of_lcd_8bit_initialize 1640  
                            ___almod@sign 000A              lcd_4bit_send_char_data@state 0018  
                      segment_write@F2896 00C0              lcd_8bit_send_command@command 0016  
             ??_lcd_4bit_send_string_data 001E                  lcd_4bit_initialize@state 001F  
